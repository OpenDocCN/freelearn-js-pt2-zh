- en: Chapter 1. The Need for Speed
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 速度的必要性
- en: In this chapter, we will learn about the need for executing JavaScript more
    rapidly, discuss why JavaScript code is traditionally slow, and see what kind
    of code editors can make us write faster JavaScript without changing our coding
    style.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习为何需要更快地执行JavaScript，讨论为何JavaScript代码传统上较慢，并了解哪些代码编辑器可以让我们在不改变编码风格的情况下编写更快的JavaScript。
- en: Weren't websites always fast?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网站一直很快吗？
- en: It seems not too long ago that website performance was important but not really
    required for most web sites. Even during the early days of the Web, it wasn't
    uncommon to have a really slow website—not because of connection speeds or server
    locations or which browser was used, no. In many cases, it was because the JavaScript
    used to render or create functionality for the pages was slow, *very* slow. Mostly,
    this was done because of a lack of minification tools and debuggers for JavaScript
    and a lack of knowledge of common JavaScript practices used today.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 似乎不久前，网站性能虽然重要，但对大多数网站来说并不是必需的。在网络早期，拥有一个真正慢的网站是很常见的——这并不是因为连接速度、服务器位置或所使用的浏览器。在许多情况下，这是因为用于渲染或为页面创建功能的JavaScript代码执行得很慢，*非常*慢。这主要是因为当时缺乏JavaScript的压缩工具和调试器，以及对今天常用的常见JavaScript实践的了解不足。
- en: It was acceptable to the user that the page content was always slow, mainly
    because most users used a 56 K modem dialing up to their **Internet Service Provider**
    (**ISP**). The screech of beeps alerted the user to the connection process. Then,
    suddenly, the user was notified on their desktop that a connection had been made
    and then promptly opened the default web browser, depending on whether it was
    Internet Explorer 4 on Windows 95 or Netscape Navigator on a NeXTStep machine.
    The process was the same, as was the 2 minutes and 42 seconds it took to make
    a sandwich, waiting for HotBot to load.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以接受页面内容总是很慢，这主要是因为大多数用户使用56K调制解调器拨号到他们的**互联网服务提供商**（**ISP**）。连接过程中的哔哔声提醒用户。然后，突然间，用户在桌面上收到通知，告知连接已建立，然后根据是Windows
    95上的Internet Explorer 4还是NeXTStep机器上的Netscape Navigator，迅速打开默认的网页浏览器。这个过程是一样的，以及花费2分42秒做三明治，等待HotBot加载的时间。
- en: As time moved on, users experienced Google, and then suddenly, page speed and
    load times seemed to grab more users' attention, though, even today, the plain
    Google theme on the main Google search site allows for speedy download of the
    full site's code. This was regardless of the Internet connection, a whole 1.36
    seconds, as indicated by Safari's Timeline tool, shown in the following screenshot,
    giving us a clear indication of which resources were downloaded the fastest and
    which ones were the slowest.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，用户开始体验谷歌，突然间，页面速度和加载时间似乎吸引了更多用户的注意力。然而，即便在今天，谷歌主搜索网站的简洁主题也能让整个网站的代码快速下载。无论互联网连接速度如何，根据Safari的时间线工具显示，整个过程仅需1.36秒，如下面的屏幕截图所示，这清楚地告诉我们哪些资源下载最快，哪些最慢。
- en: Part of the reason for this was that the tools used in modern browsers today
    didn't exist for Internet Explorer or Netscape Navigator. In the early days of
    debugging, JavaScript results were debugged using JavaScript alerts, giving feedback
    to developers since the modern tools weren't around then. Also, developer tool
    sets today are much more advanced than just simple text editors.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分原因是，现代浏览器中使用的工具当时并不适用于Internet Explorer或Netscape Navigator。在调试的早期阶段，JavaScript结果是通过JavaScript警告进行调试的，因为当时没有现代工具。此外，今天的开发者工具集比简单的文本编辑器先进得多。
- en: 'In the following screenshot, we show you a website''s download speed using
    Safari''s Web Inspector:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们将向您展示使用Safari的网络检查器测量的网站下载速度：
- en: '![Weren''t websites always fast?](img/7296OS_01_01.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![网站一直很快吗？](img/7296OS_01_01.jpg)'
- en: Getting faster
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变得更快
- en: JavaScript, by nature, is a pretty easy language to build. One advantage that
    JavaScript has is that JavaScript is an interpreted language, which means that
    the code developed can still be deployed, and even work, according to a project's
    specifications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript本质上是一种相当容易构建的语言。JavaScript的一个优点是，JavaScript是一种解释型语言，这意味着即使代码开发完成，仍可以根据项目规格部署和使用代码。
- en: Non-compiling code is both good and bad. Without the need to compile, a developer
    can quickly build a web page on a full web application in a very short amount
    of time. Also, it's very approachable for new- or intermediate-level developers
    in general, making staffing for web projects a bit easier.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 非编译代码既有优点也有缺点。由于无需编译，开发者可以很快地用全栈web应用程序构建一个网页，在非常短的时间内完成。这也对新手或中级开发者非常友好，总的来说，这让web项目的招聘变得稍微容易一些。
- en: Now, what's bad about not using a compiled language is that JavaScript doesn't
    compile and common errors tend to get missed by the developers involved; even
    if the code appears to be working, it may not be working efficiently. During the
    days where developer tools were most likely to be Notepad on Windows and a web
    browser, any errors were apparent to a user only, leaving out any issues with
    regard to code performance.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，不使用编译型语言的问题在于JavaScript是动态解释执行的，常见的错误往往被开发者忽略；即使代码看似运行正常，也可能并非高效运行。在开发工具主要是Windows上的记事本和网页浏览器的时代，任何错误都只能由用户发现，而与代码性能相关的问题则被排除在外。
- en: Today, we have various tool sets and build systems on top of our JavaScript
    skills. It's important to understand that having deep JavaScript knowledge can
    help you write and review better JavaScript code but, in many cases, we as developers
    are only human, and we make common mistakes that affect our JavaScript code—not
    adding spaces after a function's starting brackets or forgetting a semicolon at
    the end of our code statements, for example.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们在JavaScript技能之上拥有各种工具集和构建系统。重要的是要理解，深入掌握JavaScript知识可以帮助你编写和审查更好的JavaScript代码，但在许多情况下，我们作为开发者毕竟只是凡人，会犯一些常见错误，影响我们的JavaScript代码——例如，在函数开始括号后不添加空格，或者忘记在代码语句末尾添加分号。
- en: Choosing a proper editor for a given project that includes basic error-checking
    before writing a single line of JavaScript can improve the performance and quality
    of our codebase dramatically, without learning anything new in terms of the inner
    workings of JavaScript.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为给定项目选择一个合适的编辑器，该编辑器包括在编写JavaScript的第一行代码之前进行基本错误检查，可以显著提高我们代码库的性能和质量，而无需学习JavaScript内部工作原理的任何新知识。
- en: Selecting an effective editor
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择有效的编辑器
- en: 'Picking a good editor can greatly affect your code quality as well as your
    productivity in terms of how fast a project can be coded. As noted in the preceding
    section, we developers are human, we make mistakes, and it''s easy for us to write
    bad JavaScript, no matter what the skill level of the developer is. So, it''s
    important for us to know when it is appropriate to use one editor over the other.
    To cover this, I will be breaking up different JavaScript code editors into one
    of four categories as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个好的编辑器可以在代码质量和编程效率方面有很大影响，如前文所述，我们开发者是人类，会犯错误，即使开发者的技能水平再高，也容易写出糟糕的JavaScript代码。所以，了解何时适合使用一种编辑器而非另一种对我们来说非常重要。为了说明这一点，我将把不同的JavaScript代码编辑器分为以下四个类别：
- en: Integrated Development Environments
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成开发环境
- en: Mid-range editors
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中档编辑器
- en: Lightweight editors
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级编辑器
- en: Cloud-based editors
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于云的编辑器
- en: Each type of editor has its own strengths and weaknesses, and we will review
    when to use one over the other, starting with the biggest. The intent is to show
    when it's appropriate to move from a larger code editor to a smaller editor in
    terms of JavaScript development.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 每种类型的编辑器都有其自身的优点和缺点，我们将讨论在什么情况下使用一种编辑器而不是另一种，从最大的编辑器开始。目的是展示在JavaScript开发中，何时适合从大型代码编辑器切换到小型编辑器。
- en: Integrated Development Environments
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成开发环境
- en: '**Integrated Development Environments** (**IDEs**) are very high-end software
    tools that not only provide code editing, but also code-organization tools, built-in
    testing tools, code-optimization scripts, source-control integration, and usually
    deep code hinting and completion support.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**集成开发环境**（**IDE**）是高级的软件工具，它们不仅提供代码编辑功能，还包括代码组织工具、内置测试工具、代码优化脚本、源代码控制集成，以及通常深度的代码提示和完成支持。'
- en: The downside of using an IDE is that the IDE is designed to constantly check
    the code as the file is being updated while code is being written. This causes
    the editor to be sluggish and unresponsive at times and painful to use on slower
    systems. Typically, JavaScript developers tend to dislike the sluggishness of
    these IDEs and move on to other faster editors.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用IDE的缺点是，IDE被设计成在文件更新时不断检查代码，而在代码被编写时，这会导致编辑器在某些时候变得迟缓和不响应，在较慢的系统上使用起来痛苦不堪。通常，JavaScript开发者倾向于不喜欢这些IDE的迟缓，转而使用其他更快速的编辑器。
- en: This can cause issues when large projects kick off, and users use an editor
    that is ill-suited to structure JavaScript in a proper manner. It's usually recommended
    that you start with an IDE and work down when a project only requires minor tweaks.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当大型项目启动时，这可能会造成问题，用户使用了一个不适合以正确方式结构化JavaScript的编辑器。通常建议当项目只需要进行一些小的调整时，你应从IDE开始，然后逐步向下。
- en: Some popular IDEs for JavaScript are discussed in the upcoming sections.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将讨论一些流行的JavaScript IDE。
- en: The Microsoft Visual Studio IDE
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 微软Visual Studio IDE
- en: 'If any software is directly associated with the term "IDE", Visual Studio is
    one. Microsoft Visual Studio IDE can be seen in the following screenshot:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有一个软件与“IDE”这个术语直接相关，那微软的Visual Studio就是其中之一。下面这张截图展示了微软Visual Studio IDE：
- en: '![The Microsoft Visual Studio IDE](img/7296OS_01_02.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![微软Visual Studio IDE](img/7296OS_01_02.jpg)'
- en: It handles multiple languages, including HTML, CSS, and JavaScript, while handling
    other language such as C#, Visual Basic, Python, and so forth. In terms of JavaScript,
    Visual Studio will check deeply within a project's JavaScript code flow and look
    for minor errors that many lighter editors won't find.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持多种语言，包括HTML、CSS和JavaScript，同时还能处理诸如C#、Visual Basic、Python等语言。在JavaScript方面，Visual
    Studio会在项目的JavaScript代码流中深入检查，寻找许多轻量级编辑器找不到的小错误。
- en: For JavaScript developers, the Visual Studio Express Edition for Web should
    be powerful enough for any JavaScript projects.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于JavaScript开发者来说，微软Visual Studio Express版对于Web项目应该已经足够强大。
- en: JetBrain's WebStorm IDE
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: JetBrain的WebStorm IDE
- en: 'For the JavaScript developer not fond of ASP.NET and looking for a dedicated
    JavaScript IDE, and/or requiring a Mac or Linux solution, look any further than
    JetBrain''s WebStorm IDE shown in the following screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些不喜欢ASP.NET、寻找专用JavaScript IDE的JavaScript开发者，以及需要Mac或Linux解决方案的用户，不妨看看下面截图中JetBrain的WebStorm
    IDE：
- en: '![JetBrain''s WebStorm IDE](img/7296OS_01_03.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![JetBrain的WebStorm IDE](img/7296OS_01_03.jpg)'
- en: 'This IDE is targeted at JavaScript development, and it handles *any* JavaScript
    technology you can throw at it: node, AngularJS, jQuery… the list goes on and
    on with WebStorm. It also has full code hinting and error checking support, similar
    to Visual Studio, and it has very strong source control support, including Git,
    SVN, and even Microsoft''s Team Foundation Server.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这个IDE主要针对JavaScript开发，它能处理*任何*你抛给它的JavaScript技术：node、AngularJS、jQuery……WebStorm支持的技术列表长篇累牍。它还提供了完整的代码提示和错误检查支持，与Visual
    Studio类似，并且它具有非常强大的源代码控制支持，包括Git、SVN，甚至还有微软的Team Foundation Server。
- en: 'Now sidebar on JetBrains, WebStorm is a lower-tier IDE when compared to IntelliJ
    IDEA, which is JetBrain''s flagship editor for *every* language. The user interface
    of the IntelliJ IDEA editor can be seen in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看JetBrains旗下的WebStorm，与IntelliJ IDEA相比，它是一个较低级别的IDE，而IntelliJ IDEA是JetBrains针对*每种*语言推出的旗舰编辑器。下面这张截图展示了IntelliJ
    IDEA编辑器的用户界面：
- en: '![JetBrain''s WebStorm IDE](img/7296OS_01_03a.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![JetBrain的WebStorm IDE](img/7296OS_01_03a.jpg)'
- en: Typically, IDEA is known best as a Java-focused IDE, but it includes the same
    tools as WebStorm plus many more. Like Visual Studio, it can handle multiple languages,
    but that comes at the cost of performance. For example, if we started working
    in both environments on a slower system, we might notice more lag on IDEA than
    WebStorm when working day-to-day on JavaScript projects.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，IDEA以其作为Java专用IDE而闻名，但它包含了与WebStorm相同的工具以及更多其他工具。与Visual Studio一样，它能够处理多种语言，但这以牺牲性能为代价。例如，如果我们在一台较慢的系统上同时在这两个环境中工作，我们可能会发现在日常处理JavaScript项目时IDEA比WebStorm有更多的延迟。
- en: Again, this is due to the large number of features the IDEs require to be running
    in the background to make our code better, which is more marked on IDEA; so, again,
    starting off in an IDE is great to build a well-structured code base early on,
    but as time progresses and we work repeatedly in a slow editor, we will need something
    faster with a good base already set up.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，这是由于IDE需要运行许多后台功能来优化我们的代码，这在IDEA上更为明显；因此，再次强调，一开始使用IDE建立良好的代码结构是非常好的，但随着时间推移，我们在一个慢速编辑器中反复工作时，我们需要一些更快的、已经设置好的良好基础的东西。
- en: With that in mind, many developers who don't see performance issues with an
    IDE tend to stick with the IDE they've chosen; other developers, however, move
    on to editors such as the ones in the next section.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，许多没有看到IDE性能问题的开发者倾向于坚持他们选择的IDE；然而，其他开发者转向了下一节中提到的编辑器。
- en: Mid-range editors
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 中档编辑器
- en: Mid-range editors work very well with projects already past the early phases
    of development or projects that are very small. An exception to using an IDE early
    on is small projects. These are typically content-management system-based sites,
    such as WordPress, Joomla, Drupal, and so on, where most of the JavaScript is
    written for the developer and tested already.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 中档编辑器非常适合已经度过早期开发阶段的项目，或者是非常小的项目。早期使用集成开发环境（IDE）的一个例外是小型项目。这些通常是基于内容管理系统（如WordPress、Joomla、Drupal等）的网站，其中大部分JavaScript代码已经为开发者编写并经过测试。
- en: They are also useful for light code hinting, and some can connect to either
    a source repository or an FTP to push code up. The real differences between these
    and an IDE are the speed of the editor and the lack of code quality features.
    Many of these editors only look for glaringly obvious errors in the code, such
    as missing a semi colon in JavaScript. Nevertheless, they are very useful all-round
    editors.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 它们还适用于轻量级的代码提示，有些可以连接到源代码库或FTP，以上传代码。这些与IDE真正的区别在于编辑器的速度和缺乏代码质量特性。许多这类编辑器只查找代码中的明显错误，例如在JavaScript中遗漏分号。尽管如此，它们是非常有用的全能编辑器。
- en: Panic's Coda editor
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Panic的Coda编辑器
- en: 'Coda is a Mac-only editor, but it supports HTML, CSS, and JavaScript coding.
    The following screenshot shows you the user interface of Coda:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Coda是一个仅限Mac的编辑器，但它支持HTML、CSS和JavaScript编码。下面的屏幕截图展示了Coda的用户界面：
- en: '![Panic''s Coda editor](img/7296OS_01_04a.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Panic的Coda编辑器](img/7296OS_01_04a.jpg)'
- en: It also has some support for Python and PHP, but it's not dedicated to running
    non-web code on its own. It also features a manual validation checker of JavaScript
    rather than one that's continuous so, again, there's some support to improve your
    JavaScript and web code, but it does not always check for errors fully while you
    code.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 它还支持Python和PHP，但它不是专门用于独立运行非Web代码的。它还具有手动验证JavaScript的特性，而不是持续的，因此，再次强调，有些支持可以提高你的JavaScript和Web代码，但在你编写代码时，它并不总是完全检查错误。
- en: The Microsoft WebMatrix editor
  id: totrans-48
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 微软WebMatrix编辑器
- en: 'WebMatrix is Microsoft''s lighter website editor in this mid-range category.
    It has Git and Team Foundation Server support as well as support for ASP.NET projects,
    PHP, and NodeJS. The user interface of WebMatrix can be seen in the following
    screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: WebMatrix是微软在中档类别中的更轻量级网站编辑器。它支持Git和团队基金会服务器，以及ASP.NET项目、PHP和NodeJS。WebMatrix的用户界面可以在下面的屏幕截图中看到：
- en: '![The Microsoft WebMatrix editor](img/7296OS_01_04_.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![微软WebMatrix编辑器](img/7296OS_01_04_.jpg)'
- en: WebMatrix is an example of a mid-range editor where you may want to consider
    an editor's features when choosing which editor you want to use for your project.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: WebMatrix是中档编辑器的一个例子，在选择要为项目使用的编辑器时，你可能需要考虑编辑器的特性。
- en: For example, if you needed Mac support with Python, then Coda is a good fit,
    while WebMatrix gives a different set of features, including ASP.NET support.
    This is a common theme in mid-range editors, where many of them are really designed
    to do certain things and give just about the minimum support for a code base while
    keeping the editor as speedy as possible.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你需要支持Python的Mac系统，那么Coda是一个不错的选择，而WebMatrix则提供了一套不同的特性，包括ASP.NET支持。这是中档编辑器中的一个常见主题，其中许多编辑器实际上是设计来完成某些事情，并提供尽可能最小的代码支持，同时使编辑器尽可能快速。
- en: With any editors of this type, we can see that they allow us to connect to an
    existing project easily and perform some code-checking while working on a fairly
    fast editor.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这类编辑器，我们可以看到它们允许我们轻松连接到现有项目，并在相对快速的编辑器中进行一些代码检查。
- en: Lightweight editors
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 轻量级编辑器
- en: There are times where we as JavaScript developers *just don't care* about the
    backend platform a project is using and only need a simple text editor to write
    a bit of JavaScript code or update an HTML file. This is where lightweight editors
    come in.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们作为JavaScript开发者*根本不在乎*项目使用的后端平台，只需要一个简单的文本编辑器来编写一点JavaScript代码或更新一个HTML文件。这时轻量级编辑器就能派上用场。
- en: The Sublime Text editor
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Sublime Text编辑器
- en: 'Sublime Text is a very popular, cross-platform, lightweight editor. Its user
    interface can be seen in the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Sublime Text是一个非常流行、跨平台的轻量级编辑器。其用户界面如下截图所示：
- en: '![The Sublime Text editor](img/7296OS_01_05.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Sublime Text编辑器](img/7296OS_01_05.jpg)'
- en: It is well known for its start-up and usage speeds as well as some basic editing
    features, such as language color hinting and basic code-hinting with multiple
    language support.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 它因启动和使用的速度以及一些基本编辑功能（如语言高亮提示和多语言支持的基本代码提示）而闻名。
- en: It also has its own package manager called **Package Control**, which allows
    you to augment Sublime Text to automate some common code-editing and compiling
    processes. Freshly downloaded, though, it's extremely lightweight and allows developers
    to add in common plugins required for their development workflow.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 它还有一个自己的包管理器叫做**包控制**，这个功能可以让您扩展Sublime Text，以自动化一些常见的代码编辑和编译过程。尽管刚下载时非常轻量级，但它允许开发者添加所需的常见插件，以适应他们的开发工作流程。
- en: The Notepad++ editor
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Notepad++编辑器
- en: 'The user interface of the Notepad++ editor is shown in the following screenshot:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Notepad++编辑器的用户界面如下截图所示：
- en: '![The Notepad++ editor](img/7296OS_01_06.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Notepad++编辑器](img/7296OS_01_06.jpg)'
- en: On Windows, a JavaScript editor that is exclusive to the Windows platform and
    that's actually an editor and not an IDE is Notepad++. Similar to Sublime Text,
    Notepad++ is mostly used as a text editor and has plugin support but doesn't use
    a package manager such as Sublime Text, so the application runs extremely fast
    even with plugin support. It also has code-hinting support for some project files,
    including JavaScript.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows平台上，有一个专为Windows平台设计的JavaScript编辑器——Notepad++。与Sublime Text类似，Notepad++主要用作文本编辑器，并支持插件，但它不像Sublime
    Text那样使用包管理器，因此即使支持插件，应用程序的运行速度也非常快。它还支持一些项目文件的代码提示，包括JavaScript。
- en: In the case of either of these editors, or any other lightweight editor, as
    they typically don't have code validation included, they make code updates easily
    and quickly with validation running in the background, at the risk of writing
    slow or broken code.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些编辑器或任何其他轻量级编辑器的情况下，由于它们通常不包含代码验证功能，因此它们在后台运行验证，可以轻松快速地进行代码更新，但存在编写速度慢或损坏代码的风险。
- en: Cloud-based editors
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于云的编辑器
- en: Lastly, cloud- or web-based editors are the shiny new tools new to the web developer's
    tool belt. They allow a developer to work on a code base inside a browser either
    as a plugin to a web browser or purely online, and it allows a developer to work
    on any OS platform, Chrome OS, iPad, or Android operating systems that you might
    not consider writing JavaScript in!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，基于云或网络的编辑器是网络开发者工具箱中的新工具。它们允许开发者在浏览器中作为网页浏览器的插件或纯粹在线编辑代码库，使开发者能够在任何操作系统平台上工作，包括Chrome
    OS、iPad或Android操作系统，而这些系统你可能不会考虑用JavaScript来编写！
- en: The advantage of writing code in a browser is that the project code is hosted
    online, either in Git or simply in the editor's hosted service. Some plugin editors
    allow you to work from your computer's hard drive like any other editor but are
    written in HTML and JavaScript with a backend (such as Python, PHP, or ASP.NET)
    like any other website.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中编写代码的优势在于，项目代码托管在线上，无论是Git还是编辑器托管服务。一些插件编辑器允许您像其他任何编辑器一样从计算机的硬盘驱动器上工作，但它们是用HTML和JavaScript编写的，带有后端（如Python、PHP或ASP.NET），就像其他任何网站一样。
- en: Typically, these editors fit inside the mid-range editor space in terms of features.
    However, some of them can offer very little in terms of features beyond being
    online without installing an editor to a computer, which is why they fall in this
    category. The upcoming sections give a few examples of popular cloud editors.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，这些编辑器在功能上属于中等水平的编辑器。然而，其中一些在功能上非常有限，除了无需安装编辑器即可在线使用之外，这就是它们属于这个类别的原因。接下来的部分将举几个流行的云编辑器的例子。
- en: The Cloud9 editor
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Cloud9编辑器
- en: 'Cloud9 editor, available at [http://c9.io/](http://c9.io/), is a general web
    application IDE but is a cloud app with HTML5, PHP, Node.js, Rails, Python/Django,
    and WordPress support. The following screenshot displays the user interface of
    the Cloud9 editor:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud9编辑器，可从[http://c9.io/](http://c9.io/)获得，是一个通用的Web应用程序IDE，但也是一个基于云计算的应用程序，支持HTML5、PHP、Node.js、Rails、Python/Django和WordPress。以下屏幕截图显示了Cloud9编辑器的用户界面：
- en: '![The Cloud9 editor](img/7296OS_01_07.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![Cloud9编辑器](img/7296OS_01_07.jpg)'
- en: It also allows you to clone from a Git URL or from a GitHub project, so you
    can choose to have your code hosted in Cloud9 or synced to your own Git repository.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 它还允许从Git URL或GitHub项目中克隆，因此你可以选择让您的代码托管在Cloud9中，或与您的Git仓库同步。
- en: Another feature of Cloud9 is virtual-machine support from the browser for iOS
    simulator testing as well as console support for Node.js — again, in a browser.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud9的另一个功能是从浏览器中支持iOS模拟器的虚拟机，以及为Node.js提供控制台支持——这一切都在浏览器中完成。
- en: The Codenvy editor
  id: totrans-75
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Codenvy编辑器
- en: 'Another online IDE—Codenvy—is available at [http://codenvy.com/](http://codenvy.com/).
    Its user interface can be seen in the following screenshot:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个在线集成开发环境（IDE）——Codenvy——可访问[http://codenvy.com/](http://codenvy.com/)。其用户界面可从以下屏幕截图中看到：
- en: '![The Codenvy editor](img/7296OS_01_08.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Codenvy编辑器](img/7296OS_01_08.jpg)'
- en: This editor is pretty similar to Cloud9, but it hosts cloud service projects,
    such as Google's App Engine. It can also build apps for Android while having full
    JavaScript support for popular libraries in AngularJS or jQuery.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个编辑器与Cloud9非常相似，但它托管云服务项目，如谷歌的App Engine。它还可以为Android构建应用程序，同时为AngularJS或jQuery等流行库提供完整的JavaScript支持。
- en: An issue with cloud editors is that, when JavaScript libraries are involved
    in a project, an online editor may not be able to recognize library-specific JavaScript
    or HTML tag conventions used, so it's important to consider features when selecting
    a cloud editor.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 云编辑器的一个问题是，当项目涉及JavaScript库时，在线编辑器可能无法识别库特定的JavaScript或HTML标签约定，因此在选择云编辑器时，考虑功能非常重要。
- en: For cloud editors, you can see that they follow a mid-range editor feature-set
    but allow for quick connection and updates for existing projects.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于云编辑器，你可以看到它们遵循中等水平的编辑器功能集，但允许快速连接和更新现有项目。
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at the history of JavaScript's performance and learned
    how it became a focus for developers and businesses. We also reviewed the four
    types of JavaScript code editors, and we now understand how to move away from
    large IDEs for brand new projects, working down to lightweight editors for small
    updates and changes.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了JavaScript性能的历史，并学习了它是如何成为开发者和企业关注焦点的。我们还回顾了四种JavaScript代码编辑器的类型，现在我们理解了如何从大型集成开发环境（IDE）迁移到全新项目的轻量级编辑器，以及对于小更新和改动如何使用轻量级编辑器。
- en: In the next chapter, we will look at how we can keep our code's performance
    quality high when using a lightweight editor.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨在使用轻量级编辑器时如何保持代码的高性能质量。
