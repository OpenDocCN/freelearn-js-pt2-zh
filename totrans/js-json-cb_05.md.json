["```js\n    C:\\Program Files\\MongoDB 2.6 Standard\\bin\\mongod.exe --help for help and startup options\n    2015-02-15T13:10:07.909-0800 [initandlisten] MongoDB starting : pid=13436 port=27017 dbpath=\\data\\db\\ 64-bit host=KF6GPE-SURFACE\n    2015-02-15T13:10:07.911-0800 [initandlisten] targetMinOS: Windows 7/Windows Server 2008 R2\n    2015-02-15T13:10:07.913-0800 [initandlisten] db version v2.6.7\n    2015-02-15T13:10:07.914-0800 [initandlisten] git version: a7d57ad27c382de82e9cb93bf983a80fd9ac9899\n    2015-02-15T13:10:07.915-0800 [initandlisten] build info: windows sys.getwindowsversion(major=6, minor=1, build=7601, pla\n    tform=2, service_pack='Service Pack 1') BOOST_LIB_VERSION=1_49\n    2015-02-15T13:10:07.917-0800 [initandlisten] allocator: system\n    2015-02-15T13:10:07.920-0800 [initandlisten] options: {}\n    2015-02-15T13:10:07.930-0800 [initandlisten] journal dir=\\data\\db\\journal\n    2015-02-15T13:10:07.931-0800 [initandlisten] recover : no journal files present, no recovery needed\n    2015-02-15T13:10:07.967-0800 [initandlisten] waiting for connections on port 27017\n    ```", "```js\n    C:\\>mongo\n    MongoDB shell version: 2.6.7\n    connecting to: test\n    >\n    ```", "```js\nnpm install mongodb\n\n```", "```js\nnpm install cors\nnpm install express\nnpm install body-parser\n\n```", "```js\nvar express = require('express'),\n  documents = require('./routes/documents'),\n  cors = require('cors'),\n  bodyParser = require('body-parser');\n\nvar app = express();\n\napp.use(cors());\nvar jsonParser = bodyParser.json();\n\napp.get('/documents', documents.findAll);\napp.get('/documents/:id', documents.findById);\napp.post('/documents', jsonParser, documents.addDocuments);\napp.put('/documents/:id', jsonParser, documents.updateDocuments);\napp.delete('/documents/:id', jsonParser, \ndocuments.deleteDocuments);\n\napp.listen(3000);\nconsole.log('Listening on port 3000...');\n```", "```js\nvar mongo = require('mongodb');\n\nvar mongoServer = mongo.Server,\n    database = mongo.Db,\n    objectId = require('mongodb').ObjectID;\n\nvar server = new mongoServer('localhost', 27017, \n{auto_reconnect: true});\nvar db = new database('test', server);\n\ndb.open(function(err, db) {\n  if(!err) {\n    console.log(\"Connected to 'test' database\");\n    db.collection('documents', \n    {strict:true}, \n    function(err, collection) {\n      if (err) {\n        console.log(\"Inserting sample data...\");\n        populate();\n      }\n    });\n  }\n});\n\nexports.findById = function(req, res) {\n  res.send('');\n};\n\nexports.findAll = function(req, res) {\n  res.send('');\n};\n\nexports.addDocuments = function(req, res) {\n  res.send('');\n};\n\nexports.updateDocuments = function(req, res) {\n  res.send('');\n};\n\nexports.deleteDocuments = function(req, res) {\n  res.send('');\n};\n\nvar populate = function() {\nvar documents = [\n  {\n    call: 'kf6gpe',\n    lat: 37,\n    lng: -122  }\n];\ndb.collection('documents', function(err, collection) {\n  collection.insert(wines, {safe:true}, \n  function(err, result) {});\n  });\n};\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n<script type=\"text/javascript\"\n  src=\"img/jquery-1.11.2.min.js\"></script>\n</head>\n<body>\n\n<p>Hello world</p>\n<p>\n<div id=\"debug\"></div>\n</p>\n<p>\n<div id=\"json\"></div>\n</p>\n<p>\n<div id=\"result\"></div>\n</p>\n\n<button type=\"button\" id=\"get\" onclick=\"doGet()\">Get</button><br/>\n<form>\n  Id: <input type=\"text\" id=\"id\"/>\n  Call: <input type=\"text\" id=\"call\"/>\n  Lat: <input type=\"text\" id=\"lat\"/>\n  Lng: <input type=\"text\" id=\"lng\"/>\n<button type=\"button\" id=\"insert\" \n    onClick=\"doUpsert('insert')\">Insert</button>\n<button type=\"button\" id=\"update\" \nonClick=\"doUpsert('update')\">Update</button>\n<button type=\"button\" id=\"remove\" \nonClick=\"doRemove()\">Remove</button>\n</form>\n</body>\n</html>\n```", "```js\nvar mongo = require('mongodb').MongoClient;\n\nvar url = 'mongodb://localhost:27017/test';\n\nmongo.connect(url, function(error, db) {\n  console.log(\"mongo.connect returned \" + error);\n  db.close();\n});\n```", "```js\nmongodb://user:password@host:port/database\n```", "```js\nvar mongo = require('mongodb').MongoClient;\n\nvar url = 'mongodb://localhost:27017/test';\n\nvar insert = function(collection, callback) {\n  var documents = \n    [{ \n        call: 'kf6gpe-7', lat: 37.0, lng: -122.0 \n      },\n      {\n        call: 'kf6gpe-9', lat: 38.0, lng: -123.0\n      }];\n  // Insert some documents\n  collection.insert(documents, \n    function(error, result) {\n      console.log('Inserted ' +result.length + ' documents ' + \n        'with result: ');\n      console.log(result);\n      callback(result);\n  });\n};\n\nmongo.connect(url, function(error, db) {\n  console.log('mongo.connect returned ' + error);\n\n  // Get the documents collection\n  var collection = db.collection('documents');\n  insert(collection, function(result) {\n    db.close();\n  });\n});\n```", "```js\nPS C:\\Users\\rarischp\\Documents\\Node.js\\mongodb> node .\\example.js\nmongo.connect returned null\nInserted 2 documents with result:\n[ { call: 'kf6gpe-7',\n    lat: 37,\n    lng: -122,\n    _id: 54e2a0d0d00e5d240f22e0c0 },\n  { call: 'kf6gpe-9',\n    lat: 38,\n    lng: -123,\n    _id: 54e2a0d0d00e5d240f22e0c1 } ]\n```", "```js\nvar mongo = require('mongodb').MongoClient;\n\nvar url = 'mongodb://localhost:27017/test';\n\nmongo.connect(url, function(error, db) {\n  console.log(\"mongo.connect returned \" + error);\n\n  var cursor = collection.find({call: 'kf6gpe-7'});\n  cursor.toArray(function(error, documents) {\n    console.log(documents);\n\n    db.close();\n  });\n});\n```", "```js\nvar cursor = collection.find({lng: { $gt: 122 } });\n```", "```js\nvar cursor = collection.find(\n{call: 'kf6gpe-7'}, \n{call: 1, _id: 1});\n```", "```js\nvar mongo = require('mongodb').MongoClient;\n\nvar url = 'mongodb://localhost:27017/test';\n\nvar update = function(collection, callback) {\n  collection.update({ call:'kf6gpe-7' }, \n    { $set: { lat: 39.0, lng: -121.0, another: true } }, \n    function(error, result) {\n      console.log('Updated with error ' + error);\n      console.log(result);\n      callback(result);\n    });\n};\n\nmongo.connect(url, function(error, db) {\n  console.log(\"mongo.connect returned \" + error);\n\n  // Get the documents collection\n  var collection = db.collection('documents');\n  update(collection, function(result) {\n    db.close();\n  });\n});\n```", "```js\n{\n  multi: true,\n  upsert: true\n}\n```", "```js\nvar remove = function(collection, callback) {\n  collection.remove({ call: 'kf6gpe-7'},\n    function(error, result)\n    {\n      console.log('remove returned ' + error);\n      console.log(result);\n      callback(result);\n    });\n};\n```", "```js\n    exports.findAll = function(req, res) {\n      db.collection('documents', function(err, collection) {\n        collection.find().toArray(function(err, items) {\n          res.send(items);\n        });\n      });\n    };\n    ```", "```js\n    function doGet() { \n      $.ajax({\n        type: \"GET\",\n        url: \"http://localhost:3000/documents/\",\n        dataType: 'json',\n      })\n    .done(function(result) {\n        $('#json').html(JSON.stringify(result));\n        var resultHtml = \n    '<table><thead>' + \n    '<th><td><b>id</b></td><td><b>call</b></th>' + \n    '<tbody>';\n        resultHtml += '<td><b>lat</b></td><td><b>lng</b></td></tr>';\n\n          $.each(result), function(index, item)\n          {\n            resultHtml += '<tr>';\n            resultHtml += '<td>' + item._id + '</td>';\n            resultHtml += '<td>' + item.call + '</td>';\n            resultHtml += '<td>' + item.lat + '</td>';\n            resultHtml += '<td>' + item.lng + '</td>';\n            resultHtml += \"</tr>\";\n          };\n        $resultHtml += '</tbody></table>';\n\n        $('#result').html(resultHtml);\n      })\n    }\n    ```", "```js\nexports.findById = function(req, res) {\n  var id = new objectId(req.params.id);\n  db.collection('documents', function(err, collection) {\n    collection.findOne({'_id':id}, function(err, item) {\n      res.send(item);\n    });\n  });\n};\n```", "```js\n    function doUpsert(which)\n    {\n    Var id = $('#id').val();\n    var value = {};\n      value.call = $('#call').val();\n      value.lat = $('#lat').val();\n      value.lng = $('#lng').val();\n\n      $('#debug').html(JSON.stringify(value));\n\n    var reqType = which == 'insert' ? \"POST\" : 'PUT';\n      var reqUrl = 'http://localhost:3000/documents/' + \n    (which == 'insert' ? '' : id);\n\n      $.ajax({\n        type: reqType,\n        url: reqUrl,\n        dataType: 'json',\n        headers: { 'Content-Type' : 'application/json' },\n        data: JSON.stringify(value)\n      })\n    .done(function(result) {\n        $('#json').html(JSON.stringify(result));\n    var resultHtml = which == 'insert' ? 'Inserted' : \"Updated\";\n        $('#result').html(resultHtml);\n      });\n    }\n    ```", "```js\n    exports.addDocuments = function(req, res) {\n      var documents = req.body;\n      db.collection('documents', {safe:true}, \n    function(err, collection) {\n    collection.insert(documents, function(err, result) {\n     if (err) {\n    res.send({'error':'An error has occurred'});\n    } else {\n     console.log('Success: ' + JSON.stringify(result[0]));\n    res.send(result[0]);\n            }\n        });\n     });\n    };\n    ```", "```js\napp.post('/documents', jsonParser, documents.addDocuments);\n```", "```js\nexports.updateDocuments = function(req, res) {\n  var id = new objectId(req.params.id);\n  var document = req.body;\n  db.collection('documents', function(err, collection) {\n    collection.update({'_id':id}, document, {safe:true}, \n      function(err, result) {\n        if (err) {\n          console.log('Error updating documents: ' + err);\n          res.send({'error':'An error has occurred'});\n        } else {\n          console.log('' + result + ' document(s) updated');\n          res.send(documents);\n        }\n    });\n  });\n};\n```", "```js\nfunction doRemove()\n{\n  var id = $('#id').val();\n\n  if(id == \"\")'') \n  {\n    alert(\"Must provide an ID to delete!\");\n    return;\n  }\n\n  $.ajax({\n    type: 'DELETE',\n    url: \"http://localhost:3000/documents/\" + id  })\n  .done(function(result) {\n    $('#json').html(JSON.stringify(result));\n    var resultHtml = \"Deleted\";\n    $('#result').html(resultHtml);\n  });\n  }\n```", "```js\nexports.deleteDocuments = function(req, res) {\n  var id = new objectId(req.params.id);\n  db.collection('documents', function(err, collection) {\n    collection.remove({'_id':id}, {safe:true}, \n    function(err, result) {\n      if (err) {\n        res.send({'error':'An error has occurred - ' + err});\n      } else {\n        console.log('' + result + ' document(s) deleted');\n        res.send({ result: 'ok' });\n      }\n    });\n  });\n};\n```"]