["```js\nExt.define('User', {\nextend: 'Ext.data.Model',\nconfig: {\n  fields: [\n    {name: 'firstname', type: 'string'},\n    {name: 'lastname', type: 'string'},\n    {name: 'username', type: 'string'},\n    {name: 'age', type: 'int'},\n    {name: 'email', type: 'string'},\n    {name: 'active', type: 'boolean', defaultValue: true},\n  ]\n }\n}\n```", "```js\nvar newUser = Ext.create('User', {\n  firstname: 'Nigel',\n  lastname: 'Tufnel',\n  username: 'goes211',\n  age: 39,\n  email: 'nigel@spinaltap.com'\n});\n```", "```js\nExt.define('User', { \nextend: 'Ext.data.Model',\n config: {\n  fields: [\n    {name: 'firstname', type: 'string'},\n    {name: 'lastname', type: 'string'},\n    {name: 'age', type: 'int'},\n    {name: 'username', type: 'string'},\n    {name: 'email', type: 'string'},\n    {name: 'active', type: 'boolean', defaultValue: true},\n  ],\n  validations: [\n    {type: 'presence',  field: 'age'},\n    {type: 'exclusion', field: 'username', list: ['Admin', 'Root']},\n     {type: 'length', field: 'username', min: 3},\n    {type: 'format', field: 'username', matcher: /([a-z]+)[0-9]{2,3}/}\n  ]\n }\n}\n```", "```js\nvar newUser = Ext.create('User', {\n  firstname: 'Nigel',\n  lastname: 'Tufnel',\n  username: 'goes211',\n  email: 'nigel@spinaltap.com'\n});\n\nvar errors = newUser.validate();\nconsole.log(errors);\n```", "```js\n  if(!errors.isValid()) {\n    alert(\"The field: \"+errors.items[0].getField()+ \" returned an error: \"+errors.items[0].getMessage());\n  }\n```", "```js\ndeactivate: function() {\n if(this.get('active')) {\n  this.set('active', false);\n }\n}\n```", "```js\nnewUser.deactivate();\n```", "```js\nproxy: {\n  type: 'localstorage'\n  id: 'userProxy'\n}\n```", "```js\nproxy: {\n  type: 'localstorage',\n  id: 'userProxy',\n  reader: {\n    type: 'json'\n  }\n}\n```", "```js\n[ \n  [1, 'David', 'david@gmail.com'],\n  [2, 'Nancy', 'nancy@skynet.com'],\n  [3, 'Henry', 'henry8@yahoo.com']\n]\n```", "```js\nExt.define('Contact', {\n extend: 'Ext.data.Model',\n  config: {\n   fields: [\n        'id',\n        {name: 'name', mapping: 1},\n        {name: 'email', mapping: 2}\n    ],\n    proxy: {\n      type: 'memory',\n      reader: {\n        type: 'array'\n      }\n    }\n   }\n});\n```", "```js\nitemTpl: '{name}: {email}'\n```", "```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<contact>\n  <id>1</id>\n  <name>David</name>\n  <email>david@gmail.com</email>\n</contact>\n<contact>\n  <id>2</id>\n  <name>Nancy</name>\n  <email>nancy@skynet.com</email>\n</contact>\n<contact>\n  <id>3</id>\n  <name>Henry</name>\n  <email>henry8@yahoo.com</email>\n</contact>\n```", "```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<total>25</total>\n<success>true</success>\n<contacts>\n  <contact>\n    <id>1</id>\n    <name>David</name>\n    <email>david@gmail.com</email>\n  </contact>\n  <contact>\n    <id>2</id>\n    <name>Nancy</name>\n    <email>nancy@skynet.com</email>\n  </contact>\n  <contact>\n    <id>3</id>\n    <name>Henry</name>\n    <email>henry8@yahoo.com</email>\n  </contact>\n</contacts>\n```", "```js\nreader: {\n    type: 'xml',\n    root: 'contacts',\n    totalProperty  : 'total',\n    successProperty: 'success'\n}\n```", "```js\n[\n  {\n    \"id\": 1,\n    \"name\": \"David\",\n    \"email\": \"david@gmail.com\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Nancy\",\n    \"email\": \"nancy@skynet.com\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Henry\",\n    \"email\": \"henry8@yahoo.com\"\n  }\n]\n```", "```js\n{ \n  \"total\": 25,\n  \"success\": true,\n  \"contacts\": [\n   {\n    \"id\": 1,\n    \"name\": \"David\",\n    \"email\": \"david@gmail.com\"\n   },\n   {\n    \"id\": 2,\n    \"name\": \"Nancy\",\n    \"email\": \"nancy@skynet.com\"\n   },\n   {\n    \"id\": 3,\n    \"name\": \"Henry\",\n    \"email\": \"henry8@yahoo.com\"\n   }\n  ]\n}\n```", "```js\nreader: {\n    type: 'json',\n    root: 'contacts',\n    totalProperty  : 'total',\n    successProperty: 'success'\n}\n```", "```js\nvar contactStore = Ext.create('Ext.data.Store', {\n  model: 'Contact',\n  autoLoad: true\n});\n```", "```js\nExt.define('Contact', {\n extend: 'Ext.data.Model',\n  config: { \n   fields: [\n        {name: 'id', type:'int'},\n        {name: 'name', type: 'string'},\n        {name: 'email',  type: 'string'}\n    ],\n    proxy: {\n        type: 'localstorage',\n        id: 'myContacts',\n        reader: {\n          type: 'json'\n        }\n    }\n  }\n});\n```", "```js\n  var newContact = Ext.create('Contact', {\n    name: 'David',\n    email: 'david@msn.com'\n  });\n```", "```js\nvar addedUser = contactStore.add(newContact);\ncontactStore.sync();\n```", "```js\n  var newContact1 = Ext.create('Contact', {\n    name: 'David',\n    email: 'david@msn.com'\n  });\n\n  var newContact2 = Ext.create('Contact',\n    name: 'Bill',\n    email: 'bill@yahoo.com'\n  });\n\nvar addedContacts = contactStore.add(newContact1, newContact2);\ncontactStore.sync();\n```", "```js\nconsole.log(addedContacts);\nconsole.log(addedContacts[0].data.name+': '+addedContacts[0].data.id);\nconsole.log(addedContacts[1].data.name+': '+addedContacts[1].data.id);\n```", "```js\nthis.viewport = Ext.create('Ext.Panel', {\n    fullscreen: true,\n    layout: 'fit',\n    items: [\n  {\n        xtype: 'toolbar',\n        docked: 'top',\n        items: [{\n            text: 'Add',\n            handler: function() {\n              Ext.Viewport.add(addNewContact);\n              addNewContact.show()\n            }\n        }]\n    },\n    {\n      xtype: 'list',\n      itemTpl: '{name}: {email}',\n      store: contactStore\n    }]\n});\n```", "```js\nvar addNewContact = Ext.create('Ext.Sheet', {\n  height: 250,\n  layout: 'fit',\n  stretchX: true,\n  enter: 'top',\n  exit: 'top',\n  items: [â€¦]\n});\n```", "```js\n{\n  xtype: 'formpanel',\n  padding: 10,\n  items: [\n    {\n     xtype: 'textfield',\n     name : 'name',\n     label: 'Full Name'\n    },\n    {\n     xtype: 'emailfield',\n     name : 'email',\n     label: 'Email Address'\n   }\n  ]\n}\n```", "```js\n{\n  xtype: 'button',\n  height: 20,\n  text: 'Save',\n  margin: 10,\n  handler: function() {\n    this.up('sheet').hide();\n  }\n  }, {\n  xtype: 'button',\n  height: 20,\n  margin: 10,\n  text: 'Cancel',\n  handler: function() {\n    this.up('sheet').hide();\n  }\n}\n```", "```js\nhandler: function() {\n  var form = this.up('formpanel');\n  var record = Ext.create('Contact', form.getValues());\n  contactStore.add(record);\n  contactStore.sync();\n  form.reset();\n  this.up('sheet').hide();\n }\n```", "```js\nlisteners: {\n itemsingletap: {\n  fn: function(list, index, target, record){\n   addNewContact.down('form').setRecord(record);\n   Ext.Viewport.add(addNewContact);\n   addNewContact.show();\n  }\n }\n} \n```", "```js\nvar form = addNewContact.down('form');\nform.setRecord(record);\n```", "```js\naddNewContact.down('form').setRecord(record);\n```", "```js\nhandler: addContact\n```", "```js\naction: 'saveContact'\n```", "```js\nvar addContact = function() {\n  var form = this.up('formpanel');\n  var record = Ext.create('Contact', form.getValues());\n  contactStore.add(record);\n  contactStore.sync();\n  form.reset();\n  this.up('sheet').hide();\n};\n```", "```js\nvar updateContact = function() {\n  var form = this.up('formpanel');\n  var rec = form.getRecord();\n  var values = form.getValues();\n  rec.set(values);\n  contactStore.sync();\n  form.reset();\n  this.up('sheet').hide();\n};\n```", "```js\nhandler: function() {\n  var button = addNewContact.down('button[action=saveContact]');\n  button.setHandler(addContact);\n  button.setText('Add');\n  Ext.Viewport.add(addNewContact);\n  addNewContact.show();\n}\n```", "```js\nitemsingletap: {\n  fn: function(list,index, target, record){\n    addNewContact.down('formpanel').setRecord(record);\n    var button = addNewContact.down('button[action=saveContact]');\n    button.setHandler(updateContact);\n    button.setText('Update');\n    Ext.Viewport.add(addNewContact);\n    addNewContact.show();\n  }\n}\n```", "```js\n{\n  xtype: 'button',\n  height: 20,\n  margin: 10,\n  text: 'Delete',\n  ui: 'decline',\n  handler: function() {\n    var form = this.up('formpanel');\n    contactStore.remove(form.getRecord());\n    contactStore.sync();\n    form.reset();\n    this.up('sheet').hide();\n  }\n}\n```", "```js\ncontactStore.remove(form.getRecord());\n```"]