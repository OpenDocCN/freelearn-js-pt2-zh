["```js\nExt.application({\n    name: 'TouchStart',\n    launch: function () {\n        Ext.define('Contact', {\n            extend: 'Ext.data.Model',\n            config: {\n                fields: [\n                    {name: 'id'},\n                    {name: 'first', type: 'string'},\n                    {name: 'last', type: 'string'},\n                    {name: 'email', type: 'string'}\n                ],\n                proxy: {\n                    type: 'localstorage',\n                    id: 'myContacts',\n                    reader: {\n                        type: 'json'\n                    }\n                }\n            }\n        });\n\n        var main = Ext.create('Ext.Panel', {\n            fullscreen: true,\n            layout: 'fit',\n            items: [\n                {\n                    xtype: 'list',\n                    itemTpl: '{last}, {first}',\n                    store: Ext.create('Ext.data.Store', {\n                        model: 'Contact',\n                        autoLoad: true\n                    })\n                }\n            ]\n        });\n\n        Ext.Viewport.add(main);\n\n    }\n});\n```", "```js\nvar myStore = Ext.create('Ext.data.Store', {\n    model: 'Contact',\n    sorters: [\n        {\n            property: 'lastLogin',\n            direction: 'DESC'\n        },\n        {\n            property: 'first',\n            direction: 'ASC'\n        }\n    ],\n    filters: [\n        {\n            property: 'admin',\n            value: true\n        }\n    ]\n});\n```", "```js\nmyStore.sort( {\n    property : 'last',\n    direction: 'ASC'\n});\n```", "```js\nmyStore.filter( {\n    property : 'admin',\n    value: false\n});\n```", "```js\nmyStore.clearFilter();\nmyStore.filter( {\n    property : 'admin',\n    value: false\n});\n```", "```js\nvar myStore = Ext.create('Ext.data.Store', {\n    model: 'Contact',\n    pageSize: 40,\n    proxy: {\n        type: 'localstorage',\n        id: 'myContacts',\n        reader: {\n            type: 'json'\n        }\n    },\n    autoLoad: true\n});\n```", "```js\nmyStore.nextPage();\nmyStore.previousPage();\nmyStore.loadPage(5);\n```", "```js\nvar myStore = new Ext.data.Store({\n model: 'Contact',\n pageSize: 40,\n proxy: {\n  type: 'localstorage',\n  id: 'myContacts',\n  reader: {\n   type: 'json',\n   totalProperty: 'totalContacts',\n   rootProperty: 'contacts'\n  }\n },\n autoLoad: true\n});\n```", "```js\n{\n\"totalContacts: 300,\n  \"contacts\":[â€¦]\n}\n```", "```js\nvar total = myStore.getProxy().getReader().getTotalCount()\n```", "```js\nmyStore.load({\n scope: this,\n callback: function(records, operation, success) {\n  console.log(records);\n }\n});\n```", "```js\nlisteners: {\n show: {\n  fn: function(){ this.getStore().load(); }\n }\n}\n```", "```js\nExt.define('Contact', {\n extend:'Ext.data.Model',\n config:{\n  fields:[\n   {name:'first', type:'string'},\n   {name:'last', type:'string'},\n   {name:'address', type:'string'},\n   {name:'city', type:'string'},\n   {name:'state', type:'string'},\n   {name:'zip', type:'int'},\n   {name:'email', type:'string'},\n   {name:'birthday', type:'date'}\n  ],\n  proxy:{\n   type:'ajax',\n   url:'api/contacts.json',\n   reader:{\n    type:'json',\n    rootProperty:'children'\n   }\n  }\n }\n});\nvar contactStore = Ext.create('Ext.data.Store', {\n model:'Contact',\n autoLoad:true\n});\n```", "```js\n{\n  \"children\":[\n    {\n        \"first\":\"Ila\",\n        \"last\":\"Noel\",\n        \"email\":\"ante.ipsum@Sedmalesuada.ca\",\n        \"address\":\"754-6686 Elit, Rd.\",\n        \"city\":\"Hunstanton\",\n        \"state\":\"NY\",\n        \"zip\":34897,\n        \"birthday\":\"Tue, 16 Oct 1979 04:27:45 -0700\"\n    }, ...\n  ]\n}\n```", "```js\nvar main = Ext.create('Ext.Panel', {\n fullscreen:true,\n layout:'card',\n activeItem:0,\n items:[\n  {\n   xtype:'list',\n   itemTpl:'{last}, {first}',\n   store:contactStore\n  }\n ]\n});\n```", "```js\nExt.application({\n    name:'TouchStart',\n    launch:function () {\n     //components go here\n    Ext.Viewport.add(main);\n  }\n});\n```", "```js\nvar detailsPanel = Ext.create('Ext.Panel', {\n    tpl: '{first} {last}<br>'+\n        '{address}<br>'+\n        '{city}, {state} {zip}<br>'+\n        '{email}<br>{birthday}',\n    items: [\n        {\n            xtype: 'toolbar',\n            docked: 'top',\n            items: [\n                {\n                    text: 'Back',\n                    ui: 'back',\n                    handler: function () {\n                        main.setActiveItem(0);\n                    }\n                }\n            ]\n        }\n    ]\n});\n```", "```js\nlisteners:{\n itemtap:{\n  fn: function (list, index, target, record) {\n   detailsPanel.setRecord(record);\n   main.setActiveItem(1);\n  }\n }\n}\n```", "```js\nvar myTemplate = new Ext.XTemplate(\n  '{first} {last}<br>',\n  '{address}<br>',\n  '{city}, {state} {zip}<br>',\n  '{email}<br>',\n  '{birthday}'\n);\n```", "```js\ntpl: new Ext.XTemplate(\n    '<div style=\"padding:10px;\"><b>{first} {last}</b><br>',\n    '{address}<br>',\n    '{city}, {state} {zip}<br>',\n    '<a href=\"mailto:{email}\">{email}</a><br>',\n    '{birthday}</div>'\n);\n```", "```js\ntpl: '<div style=\"padding:10px;\"><b>{first} {last}</b><br>'+\n    '{address}<br>'+\n    '{city}, {state} {zip}<br>'+\n    '<a href=\"mailto:{email}\">{email}</a><br>'+\n    '{birthday}</div>'\n```", "```js\nvar listTemplate = new Ext.XTemplate(\n    '<div class=\"contact-wrap\" id=\"{first}-{last}\">',\n    '<div class=\"thumb\" style= \"float: left;\"><img src=\"img/36\" title=\"{first}\"></div>',\n    '<span class=\"contact-name\">{first} {last}</span></div>'\n);\n```", "```js\n  'Birthday: {birthday:date(\"n/j/Y\")}</div>'\n```", "```js\n'<tpl for=\".\">',\n'{name}</br>',\n'</tpl>' \n```", "```js\n'<tpl for=\".\">',\n'{name}</br>',\n\n'<tpl for=\"cities\">',\n'{name}</br>',\n'</tpl>' \n\n'</tpl>' \n```", "```js\n'<tpl for=\".\">',\n'{name}</br>',\n\n'<tpl for=\"cities\">', \n'{name}</br>',\n\n'<tpl for=\"cities.postal\">',\n'{code}</br>',\n'</tpl>' \n\n'</tpl>' \n\n'</tpl>' \n```", "```js\n'<tpl for=\".\">',\n'{#} {name}</br>',\n'</tpl>' \n```", "```js\n'<tpl for=\".\">',\n'{#} {name}</br>',\n\n'<tpl for=\"cities\">',\n'{#} {name}</br>',\n'</tpl>' \n\n'</tpl>' \n```", "```js\n'<tpl for=\".\">',\n'{name}</br>',\n\n'<tpl for=\"cities\">',\n'{parent.name} - {name}</br>',\n\n'<tpl for=\"cities.postal\">',\n'{parent.name} - {code}</br>',\n'</tpl>' \n\n'</tpl>' \n\n'</tpl>' \n```", "```js\n'<tpl for=\".\">',\n  '{name}</br>',\n  '<tpl for=\"cities\">',\n    '<tpl if=\"population &gt; 2000\">',\n      '{name}</br>',\n    '</tpl>',\n  '</tpl>',\n'</tpl>'\n```", "```js\n'<tpl for=\".\">',\n  '{name}</br>',\n  '<tpl for=\"cities\">',\n    '<tpl if=\"population &gt; 2000\">',\n      '<div class=\"blue\">{name}</div>',\n    '<tpl elseif=\"population &gt; 1000\">',\n      '<div class=\"red\">{name}</div>', \n    '<tpl else>', \n      '<div>{name}</div>',\n    '</tpl>',\n  '</tpl>',\n'</tpl>'\n```", "```js\n'<tpl for=\".\">',\n  '{name}</br>',\n  '<tpl for=\"cities\">',\n      '{name}</br>',\n  'Population: {population}</br>',\n  'Projected Population for next year: {population * 1.15}</br>',\n  '</tpl>',\n'</tpl>'\n```", "```js\n'<tpl for=\".\">',\n  '{[values.name.toUpperCase()]}</br>',\n  '<tpl for=\"cities\">',\n  '<div class=\"{[xindex % 2 === 0 ? \"even\" : \"odd\"]}\">',\n      '{[values.name.toUpperCase()]}</br>',\n  '</div>',\n  '</tpl>',\n'</tpl>'\n```", "```js\n{\nmyTemplateFunction: function(myVariable) {\n  ...\n },\nmyOtherTemplateFunction: function() {\n  ...\n }\n}\n```", "```js\n'<tpl for=\".\">',\n  '{name}</br>',\n  '<tpl for=\"cities\">',\n      '<div>{name} <tpl if=\"this.isLargeCity(values)\"><img src=\"img/bigCity.png\"></tpl></div>',\n    '</tpl>',\n  '</tpl>',\n'</tpl>',\n{\nisLargeCity: function(values) {\n  if(values.population >= 5000 && values.hasAirport && values.hasHospital) {\n   return true;\n  } else {\n   return false;\n  }\n }\n}\n```", "```js\nvar myTemplate = new Ext.XTemplate(\n  '<div style=\"padding:10px;\"><b>{first} {last}</b><br>',\n  '{address}<br>',\n  '{city}, {state} {zip}<br>',\n  '<a href=\"mailto:{email}\">{email}</a><br>',\n  'Birthday: {birthday:date(\"n/j/Y\")}</div>'\n);\n```", "```js\nvar myTemplate = new Ext.XTemplate(\n  '<div style=\"padding:10px;\"><b>{first} {last}</b><br>',\n  '<tpl if=\"!Ext.isEmpty(address)\">',\n    '{address}<br>',\n    '{city}, {state} {zip}<br>',\n  '</tpl>',\n  '<a href=\"mailto:{email}\">{email}</a><br>',\n  'Birthday: {birthday:date(\"n/j/Y\")}</div>'\n```", "```js\nvar myTemplate = new Ext.XTemplate(\n'<tpl for=\".\">',\n  '{name}</br>',\n  '<tpl for=\"cities\">',\n      '- {name}<br>',\n    '</tpl>',\n  '</tpl>',\n'</tpl>'\n);\n\nmyTemplate.overwrite(panel.body, data);\n```", "```js\nExt.application({\n name: 'TouchStart',\n launch: function() { \n  var mystore = Ext.create('Ext.data.JsonStore', {\n   fields: ['month', 'sales'],\n   data: [\n    {'month': 'June', 'sales': 500},\n    {'month': 'July', 'sales': 350},\n    {'month': 'August', 'sales': 200},\n    {'month': 'September', 'sales': 770},\n    {'month': 'October', 'sales': 170}\n   ]\n  });\n }\n});\n```", "```js\nExt.create('Ext.chart.PolarChart', {\n  background: 'white',\n  store: mystore,\n  fullscreen: true,\n  innerPadding: 35,\n  interactions: ['rotate'],\n  colors: [\"#115fa6\", \"#94ae0a\", \"#a61120\", \"#ff8809\", \"#ffd13e\"],\n  legend: {\n   position: 'right',\n   width: 125,\n   margin: 10\n  },\n  series: [\n   {\n    type: 'pie',\n    xField: 'sales',\n    labelField: 'month',\n    donut: 25,\n     style: {\n      miterLimit: 10,\n      lineCap: 'miter',\n      lineWidth: 2\n     }\n   }\n  ]\n});\n```", "```js\nvar mystore = Ext.create('Ext.data.JsonStore', {\n fields: ['month', '2008', '2009', '2010'],\n data: [\n   {'month': 'June', '2008': 500, '2009': 400, '2010': 570},\n   {'month': 'July', '2008': 350, '2009': 430, '2010': 270},\n   {'month': 'August', '2008': 200, '2009': 300, '2010': 320},\n   {'month': 'September', '2008': 770, '2009': 390, '2010': 670},\n   {'month': 'October', '2008': 170, '2009': 220, '2010': 360}\n ]\n});\n```", "```js\nExt.create(\"Ext.chart.CartesianChart\", {\n fullscreen: true,\n background: 'white',\n flipXY: true,\n store: mystore,\n interactions: ['panzoom'],\n legend: {\n  position: 'right',\n  width: 80,\n  margin: 10\n },\n axes: [\n  {\n   type: 'numeric',\n   position: 'bottom',\n   grid: true,\n   minimum: 0\n  },\n  {\n   type: 'category',\n   position: 'left'\n  }\n ],\n series: [\n  {\n   type: 'bar',\n   xField: 'month',\n   yField: ['2008', '2009', '2010'],\n   axis: 'bottom',\n   highlight: true,\n   showInLegend: true,\n   style: {\n    stroke: 'rgb(40,40,40)',\n    maxBarWidth: 30\n   },\n   subStyle: {\n    fill: [\"#115fa6\", \"#94ae0a\", \"#a61120\"]\n   }\n  }\n ]\n}); \n```"]