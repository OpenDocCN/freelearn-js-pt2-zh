["```js\nPackage.describe({\n  name: \"mrt:moment\",\n  summary: \"Moment.js, a JavaScript date library.\",\n  version: \"0.0.1\",\n  git: \"https://...\"\n});\n\nPackage.onUse(function (api, where) {\n  api.export('moment');\n\n  api.addFiles('lib/moment-with-langs.min.js', 'client');\n});\n\nPackage.onTest(function(api){\n  api.use([\"mrt:moment\", \"tinytest\"], [\"client\", \"server\"]);\n  api.addFiles(\"test/tests.js\", [\"client\", \"server\"]);\n});\n```", "```js\n$ meteor test-packages <my package name>\n\n```", "```js\n    $ meteor create --package reactive-timer\n\n    ```", "```js\n    timer = new ReactiveTimer();\n    timer.start(10);\n    ```", "```js\nPackage.describe({\n  name: \"meteor-book:reactive-timer\",\n  summary: \"A simple timer object, which can re-run reactive functions based on an interval\",\n  version: \"0.0.1\",\n  // optional\n  git: \"https://github.com/frozeman/meteor-reactive-timer\"\n});\n```", "```js\nPackage.onUse(function (api) {\n  // requires Meteor core packages 1.0\n  api.versionsFrom('METEOR@1.0');\n\n  // we require the Meteor core tracker package\n  api.use('tracker', 'client');\n\n  // and export the ReactiveTimer variable\n  api.export('ReactiveTimer');\n\n  // which we find in this file\n  api.addFiles('ReactiveTimer.js', 'client');\n});\n```", "```js\n    api.use('author:somePackage@1.0.0', 'server');\n\n    ```", "```js\n    api.use('tracker', ['client', 'server']);\n\n    ```", "```js\n    ReactiveTimer = (function () {\n      ...\n    })();\n    ```", "```js\n    $ meteor add meteor-book:reactive-timer\n\n    ```", "```js\n    if(Meteor.isClient) {\n        timer = new ReactiveTimer();\n        timer.start(10);\n    }\n    ```", "```js\nTracker.autorun(function(){\n    timer.tick();\n    console.log('timer run');\n});\n```", "```js\n# ReactiveTimer\n\nThis package can run reactive functions in a given interval.\n## Installation\n\n    $ meteor add meteor-book:reactive-timer\n\n## Usage\n\nTo use the timer, instantiate a new interval:\n\n    var myTimer = new ReactiveTimer();\n\nThen you can start an interval of 10 seconds using:\n\n    myTimer.start(10);\n\nTo use the timer just call the following in any reactive function:\n\n    myTimer.tick();\n\nTo stop the timer use:\n\n    myTimer.stop();\n```", "```js\n    $ meteor publish --create\n\n    ```", "```js\n    $ meteor search reactive-timer\n\n    ```", "```js\n    $ meteor show meteor-book:reactive-timer\n\n    ```", "```js\n    $ meteor add meteor-book:reactive-timer@=0.0.1\n\n    ```", "```js\n$ meteor publish\n\n```", "```js\n$ meteor update meteor-book:reactive-timer\n\n```", "```js\n$ meteor update â€“-packages-only\n\n```"]