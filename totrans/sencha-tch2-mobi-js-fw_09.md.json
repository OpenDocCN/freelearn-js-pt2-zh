["```js\nExt.define('FlickrFindr.store.SearchPhotosStore', {\n    extend: 'Ext.data.Store',\n    requires: 'FlickrFindr.model.Photo',\n    config: {\n        model: 'FlickrFindr.model.Photo',\n        autoLoad: false,\n        pageSize: 25,\n        proxy: {\n            type: 'jsonp',\n            url: 'http://api.flickr.com/services/rest/',\n            callbackKey: 'jsoncallback',\n            limitParam: 'per_page',\n            reader: {\n                type: 'json',\n                root: 'photos.photo',\n                totalProperty: 'photos.total'\n            }\n        }\n    }\n});\n```", "```js\nlisteners: {\n   locationupdate: function(geo) {\n      // Use our coordinates.\n      easyparams = {\n        \"min_upload_date\": Ext.Date.format(dt, \"Y-m-d H:i:s\"),\n        \"lat\": geo.getLatitude(),\n        \"lon\": geo.getLongitude(),\n        \"accuracy\": 16,\n        \"radius\": 10,\n        \"radius_units\": \"km\",\n        \"method\": \"flickr.photos.search\",\n        \"api_key\": me.getApplication().api_key,\n        \"format\": \"json\"\n      };\n      var store = me.getSearchPhotoList().getStore();\n        store.getProxy().setExtraParams(easyparams);\n        store.load();\n      },\n}\n```", "```js\nhttp://www.my-application.com/users.php?userID=5&access=admin\n\n```", "```js\nExt.define('FlickrFindr.model.Bookmark', {\n  extend: 'Ext.data.Model',\n  fields: [\n    {\n    name: 'id',\n    type: 'int'\n  },\n    {\n    name: 'owner',\n    type: 'string'\n  },\n    {\n    name: 'secret',\n    type: 'string'\n  },\n    {\n    name: 'server',\n    type: 'int'\n  },\n    {\n    name: 'farm',\n    type: 'int'\n  },\n    {\n    name: 'title',\n    type: 'string'\n  }\n  ],\n  proxy: {\n        type: 'rest',\n        url : '/api/bookmarks.php'\n    }\n});\n```", "```js\nvar bookmark = Ext.create('FlickrFindr.model.Bookmark', {id: 6162315674, owner: 15638, secret:'d94d1629f4', server:6161, farm:7, title:'Night Sky'});\nbookmark.save();\n```", "```js\nExt.define('FlickrFindr.store.SavedPhotosStore', {\n  extend: 'Ext.data.Store',\n  requires: 'FlickrFindr.model.Bookmark',\n  config: {\n    model: 'FlickrFindr.model.Bookmark',\n    storeID: 'BookmarkStore',\n    autoload: true,\n    proxy: {\n      type: 'rest',\n      url: '/api/bookmarks.php',\n      reader: {\n        type: 'json',\n        root: 'children'\n      }\n    }\n  }\n});\n```", "```js\n{\n\"total\": 2,\n  \"children\":[\n    {\n        \"id\":\"6162315674\",\n        \"owner\":\"Noel\",\n        \"secret\":\"d94d1629f4\",\n        \"server\":\"6161\",\n        \"farm\":7,\n        \"title\":\"Night Sky\"\n    },\n    {\n        \"id\":\"6162337597\",\n        \"owner\":\"Noel\",\n        \"secret\":\"f496834m347\",\n        \"server\":\"6161\",\n        \"farm\":7,\n        \"title\":\"Ring of Fire\"\n    }\n  ]\n}\n```", "```js\n<?PHP\n$action = $_SERVER['REQUEST_METHOD'];\n\nif($action == 'GET') {\n  // read - return a list of bookmarks as JSON\n} else if($action == 'POST') {\n  // add a new user\n} else if($action == 'PUT') {\n  // save the edit of an existing user\n} else if($action == 'DELETE') {\n  // delete an existing user\n}\n?>\n```", "```js\n{\"records\":[{\"id\":6162315674,\"owner\":\"46992422@N08\",\"secret\":\"d94d1629f4\",\"server\":6161,\"farm\":7,\"title\":\"foo\"}]}\n```", "```js\n{\"records\":[\n {\"id\":6162315674 \n  \"owner\":\"46992422@N08\",\n  \"secret\":\" your_secret_here \",\n  \"server\":6161,\n  \"farm\":7,\n  \"title\":\"foo\"},\n {\"id\":\"6162337597\",\n  \"owner\":\"Noel\",\n  \"secret\":\"your_secret_here\",\n  \"server\":\"6161\",\n  \"farm\":7,\n  \"title\":\"Ring of Fire\"}\n]}\n```", "```js\nExt.Ajax.request({\n    url: '/api/bookmarks.php',\n    method: 'GET',\n    params: {\n        id: '6162337597'\n    },\n    success: function(result, request) {\n        var json = Ext.decode(result.responseText);\nconsole.log(json.bookmark);\n    },\nfailure: function(response, opts) {\n        console.log('server-side failure with status code ' + response.status);\n   } \n});\n```", "```js\n<?PHP\nheader(\"Status: 400 Bad Request – Invalid Username\");\n?>\n```", "```js\nExt.define('Contact', {\n  extend: 'Ext.data.Model',\n  config: {\n    fields: [\n      {name: 'id', type: 'int'},\n      {name: 'firstname', type: 'string'},\n      {name: 'lastname', type: 'string'},\n      {name: 'email', type: 'string'}\n      ]\n  }\n});\n\nExt.define('ContactStore', {\n  extend: 'Ext.data.Store',\n  config: {\n    model: 'Contact',\n    proxy: {\n        type: 'jsonp',\n      url: 'http://mycontactserver.com/api',\n    },\n    autoLoad: true\n  }\n});\n\nExt.define('ContactView', {\n  extend: 'Ext.dataview.List',\n  xtype: 'contactview',\n  config: {\n    store: 'ContactStore',\n    itemTpl: '{firstname} {lastname} – {email}'\n  }\n});\n```", "```js\nExt.define('OfflineContactStore', {\n  extend: 'Ext.data.Store',\n  config: {\n    model: 'Contact',\n    proxy: {\n        type: 'localstorage',\n      id: 'contacts'\n   },\n    autoLoad: true\n  }\n});\n```", "```js\nExt.define('ContactStore', {\n    extend: 'Ext.data.Store',\n    config: {\n        model: 'Contact',\n        proxy: {\n            type: 'jsonp',\n            url: 'http://mycontactserver.com/api',\n            reader: {\n                type: 'json'\n            }\n        },\n        autoLoad: true,\n        listeners: {\n            load: function() {\n                var offlineContacts = Ext.StoreMgr.get('OfflineContactStore');\n\n                offlineContacts.each(function(record) {\n                    offlineContacts.remove(record);\n                });\n                offlineContacts.sync();\n\n                this.each(function(record) {\n                    offlineContacts.add(record.data);\n                });\n\n                offlineContacts.sync();\n\n            }\n        }\n    }\n});\n```", "```js\nExt.define('ContactView', {\n  extend: 'Ext.dataview.List',\n  config: {\n    store: 'OfflineContactStore',\n    tpl: '{firstname} {lastname} – {email}'\n  }\n});\n```", "```js\nCACHE MANIFEST\n# Simple Address Book v1.0\n\nCACHE:\nindex.html\napp/app.js\ncss/my-app.css\nlib/resources/css/sencha-touch.css\nlib/sencha-touch.js\n\n# Everything else requires us to be online.\nNETWORK:\n*\n```", "```js\n<html manifest=\"cache.manifest\">\n```", "```js\nAddType text/cache-manifest .manifest\n```", "```js\nCACHE MANIFEST\n# Simple Address Book v1.0\n```", "```js\nCACHE MANIFEST\n# Simple Address Book v1.1\n```", "```js\nproxy: {\n        type: 'jsonp',\n        url: 'http://mycontactserver.com/api',\n\n timeout: 2000,\n listeners: {\n exception:function (this, response, operation, eOpts)  {\n if(operation.error == 'timeout')  {\nExt.Msg.alert('Offline Mode', 'Network unreachable, we have entered offline mode.');\n }\n\n }\n }\n}\n```", "```js\n.x-list .x-list-item {\n  color: #f00;\n}\n```", "```js\nFALLBACK:\ncss/my-app.css css/my-app-offline.css\n```", "```js\nCACHE MANIFEST\n# Simple Address Book v1.2\n\nCACHE:\nindex.html\napp/app.js\ncss/my-app-offline.css\nlib/resources/css/sencha-touch.css\nlib/sencha-touch.js\n\n# Everything else requires us to be online.\nNETWORK:\n*\n\nFALLBACK:\ncss/my-app.css css/my-app-offline.css\n```", "```js\nexception:function () {\n  if (navigator.onLine) {\n Ext.Msg.alert('Network Error', 'We have an Internet connection, but there is a problem communicating with the server.');\n  } else {\n    Ext.Msg.alert('Offline Mode', 'No Internet Connection, we have entered offline mode.');\n  }\n}\n```", "```js\nwindow.addEventListener(\"offline\", function(e) {\nalert(\"Application is offline.\");\n});\nwindow.addEventListener(\"online\", function(e) {\nalert(\"Application is online.\");\n});\n```", "```js\nnavigator.camera.getPicture(...)\nnavigator.compass.getCurrentHeading(…)\n```"]