["```js\nvar html = document.documentElement;\nconsole.log( html.nodeName ); // HTML\n\nvar head = html.childNodes[0];\nconsole.log( head.nodeName );  // HEAD\nconsole.log( head.parentNode === html );  // true\n```", "```js\nvar sibling = head.nextSibling;\n// the same as html.childNodes[1]\nconsole.log( sibling.nodeName ); // #text\nconsole.dir( sibling.nodeValue ); // \"\\n  \"\n```", "```js\n<article id=\"bar\">\n  <h2>Lorem ipsum</h2>\n</article>\nvar article = document.querySelector( \"#bar\" ),\n      heading = article.querySelector( \"h2\" );\n```", "```js\n<article data-bind=\"bar\">\n  <h2 data-bind=\"heading\">Lorem ipsum</h2>\n</article>\n\nvar article = document.querySelector( \"[data-bind=\\\"bar\\\"]\" ),\n      heading = article.querySelector( \"[data-bind=\\\"heading\\\"]\" );\n```", "```js\n<ul data-bind=\"bar\">\n  <li data-bind=\"item\">Lorem ipsum</li>\n  <li data-bind=\"item\">Lorem ipsum</li>\n  <li data-bind=\"item\">Lorem ipsum</li>\n</ul>\n\nvar ul = document.querySelector( \"[data-bind=\\\"bar\\\"]\" ),\n      lis = ul.querySelectorAll( \"[data-bind=\\\"item\\\"]\" );\nconsole.log( lis.length );\n```", "```js\nvar divs = document.querySelectorAll( \"div\" ), i; \nfor ( i = 0; i < divs.length; i++ ) { \n  document.appendChild( document.createElement( \"div\" ) ); \n}\n```", "```js\nvar ul = document.querySelector( \"[data-bind=\\\"bar\\\"]\" ),\n      lis = ul.querySelectorAll( \"[data-bind=\\\"item\\\"]\" );\nconsole.log( [].slice.call( lis ) ); // into array ES5 way\nconsole.log( [ ...lis ] ); // into array ES6 way\n```", "```js\nconsole.log( el.matches( \".foo > .bar\" ) );\nconsole.log( input.matches( \":checked\" ) );\n```", "```js\nvar target = document.getElementById( \"target\" );\ntarget.innerHTML = \"<div></div>\";\n```", "```js\nvar target = document.getElementById( \"target\" ),\n      div = document.createElement( \"div\" ),\ntarget.appendChild( div );\n```", "```js\nvar target = document.getElementById( \"target\" ),\n    /**\n     * Create a complex element\n     * @returns {Node}\n     */\n    createNewElement = function(){\n      var div = document.createElement( \"div\" ),\n          span = document.createElement( \"span\" );\n      span.appendChild( document.createTextNode( \"Bar\" ) );\n      div.appendChild( span );\n      return div;\n    },\n    el;\n\nel = createNewElement();\n// loop begins\ntarget.appendChild( el.cloneNode( true ) );\n// loop ends\n```", "```js\nparent.insertBefore(el, parent.firstChild);\n```", "```js\nel.parentNode.removeChild(el);\n```", "```js\nfunction reload( el ) {\n    var elClone = el.cloneNode( true );\n    el.parentNode && el.parentNode.replaceChild( elClone, el );\n }\n```", "```js\nel.classList.add( \"is-hidden\" );\nel.classList.remove( \"is-hidden\" );\nvar isAvailable = true;\nel.classList.toggle(\"is-hidden\", !isAvailable );\nif ( el.classList.contains( \"is-hidden\" ) ){}\n```", "```js\nel.style.color = \"red\";\nel.style.fontFamily = \"Arial\";\nel.style.fontSize = \"1.2rem\";\n```", "```js\nel.style.cssText = \"color:red;font-family: Arial;font-size: 1.2rem;\";\n```", "```js\nvar el = document.querySelector( \"h1\" ),\n    /**\n     * window.getComputedStyle\n     * @param {HTMLElement} el\n     * @param {String} pseudo - pseudo-element selector or null \n     * for regular elements\n     * @return {CSSStyleDeclaration}\n     */\n    css = window.getComputedStyle( el, null );\nconsole.log( css.getPropertyValue( \"font-family\" ) );\n```", "```js\n<style type=\"text/css\">\n.foo {\n color: red;\n}\n</style>\n<div class=\"foo\">foo</div>\n<script type=\"text/javascript\">\nvar stylesheet = document.styleSheets[ 0 ];\nstylesheet.cssRules[ 0 ].style.color = \"red\";\n// or\n// stylesheet.cssRules[ 0 ].style.cssText = \"color: red;\";\n</script>\n```", "```js\nvar stylesheet = document.styleSheets[ 0 ];\nstylesheet.addRule( \".foo::before\", \"color: green\" );\n// or\nstylesheet.insertRule( \".foo::before { color: green }\", 0 );\n```", "```js\nel.setAttribute( \"tabindex\", \"-1\" );\nif ( el.hasAttribute( \"tabindex\" ) ) {}\nel.getAttribute( \"tabindex\" );\nel.removeAttribute( \"tabindex\" );\n```", "```js\n// attribute\nconsole.log( input.getAttribute( \"value\" ) );\n// property\nconsole.log( input.value );\n```", "```js\nconsole.log( el.dataset.foo ); \nel.dataset.foo = \"foo\";\n```", "```js\nconsole.log( el.dataset.fooBarBaz ); \nel.dataset.fooBarBaz = \"foo-bar-baz\";\n```", "```js\nEventTarget.addEventListener( <event-name>, <callback>, <useCapture> );\n```", "```js\n<form action=\"/\">\n<button type=\"submit\">Click me</button>\n</form>\n<script>\nvar btn = document.querySelector( \"button\" )\n    onClick = function( e ){\n      e.preventDefault(); \n      console.log( e.target );\n    };\nbtn.addEventListener( \"click\", onClick, false );\n</script>\n```", "```js\naddEventListener( \"keydown\", function( e ){\n    var key = parseInt( e.key || e.keyCode, 10 );\n     // Ctrl-Shift-i\n    if ( e.ctrlKey && e.shiftKey && key === 73 ) {\n      e.preventDefault();\n      alert( \"Ctrl-Shift-L pressed\" );\n    }\n  }, false );\n```", "```js\nfunction ready( cb ) {\n  if ( document.readyState !== \"loading\" ){\n    cb();\n  } else {\n    document.addEventListener( \"DOMContentLoaded\", cb );\n  }\n}\n```", "```js\nbtn.removeEventListener( \"click\", onClick );\n```", "```js\nvar btn = document.querySelector( \"button\" ),\n    // Create Event object\n    event = document.createEvent( \"HTMLEvents\" );\n// Initialize a custom event that bubbles up and cannot be canceled \n\nevent.initEvent( \"click\", true, false );\n// Dispatch the event\nbtn.dispatchEvent( event );\n```", "```js\nvar btn = document.querySelector( \"button\" ),\n    // Create Event object\n    event = document.createEvent( \"CustomEvent\" );\n// Subscribe to the event \nbtn.addEventListener(\"my-event\", function( e ){\n  console.dir( e );\n});\n// Initialize a custom event that bubbles up and cannot be canceled \nevent.initEvent( \"my-event\", true, false );\n// Dispatch the event\nbtn.dispatchEvent( event );\n```", "```js\nvar xhr = new XMLHttpRequest();\nxhr.open( \"GET\", \"http://www.telize.com/jsonip?callback=0\", true );\nxhr.onload = function() {\n      if ( this.status === 200 ) {\n        return console.log( this.response );\n      }\n    };\n\nxhr.responseType = \"json\";\nxhr.setRequestHeader( \"Content-Type\", \"application/x-www-form-urlencoded\" );\nxhr.send( null );\n```", "```js\nxhr({\n  uri: \"http://www.telize.com/jsonip\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n}, function ( err, resp ) {\n  console.log( resp );\n})\n```", "```js\nfetch( \"/rest/foo\" ).then(function( response ) {\n  // Convert to JSON\n  return response.json();\n}).catch(function( err ) {\n  console.error( err );\n});\n```", "```js\nfetch( \"/rest/foo\", {\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n```", "```js\nconsole.log( response.text() );\nconsole.log( response.status );\nconsole.log( response.statusText );\nconsole.log( response.headers.get( \"Content-Type\" ) );\n```", "```js\nvar form = document.querySelector( \"form[data-bind=foo]\" ),\n    inputEmail = form.querySelector( \"[name=email]\" ),\n    inputPassword = form.querySelector( \"[name=pwd]\" );\n\nfetch( \"/feedback/submit\", {\n  method: \"post\",\n  body: JSON.stringify({\n    email: inputEmail.value,\n    answer: inputPassword.value\n  })\n});\n```", "```js\nvar form = document.querySelector( \"form[data-bind=foo]\" );\nfetch( \"/feedback/submit\", {\n  method: \"post\",\n  body: new FormData( form )\n});\n```"]