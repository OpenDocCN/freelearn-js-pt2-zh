["```js\n{\n  \"command\":\"get\",\n  \"result\":\"ok\",\n  \"what\":\"loc\",\n  \"found\":2,\n  \"entries\":[\n    {\n      \"class\":\"a\",\n      \"name\":\"KF6GPE\",\n      \"type\":\"l\",\n      \"time\":\"1399371514\",\n      \"lasttime\":\"1418597513\",\n      \"lat\":37.17667,\n      \"lng\":-122.14650,\n      \"symbol\":\"\\/-\",\n      \"srccall\":\"KF6GPE\",\n    },\n    {\n      \"class\":\"a\",\n      \"name\":\"KF6GPE-7\",\n      \"type\":\"l\",\n      \"time\":\"1418591475\",\n      \"lasttime\":\"1418591475\",\n      \"lat\":37.17633,\n      \"lng\":-122.14583,\n      \"symbol\":\"\\\\K\",\n      \"srccall\":\"KF6GPE-7\",\n    }\n  ]\n}\n```", "```js\n>var json = '{\"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\n\"1399371514\",\"lasttime\":\"1418597513\",\"lat\":37.17667,\"lng\":\n-122.14650,\"result\" : \"ok\" }';\n<- \"{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\"lat\":37.17667,\"lng\":-122.14650,\n\"result\" : \"ok\" }\"\n>var object = JSON.parse(json);\n<- Object {call:\"KF6GPE\",type:\"l\",time:\"1399371514\",\nlasttime:\"1418597513\",lat:37.17667, lng:-122.14650,result: \"ok\"}\n> object.result\n<- \"ok\"\n>var newJson = JSON.stringify(object);\n<- \"{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\": -122.14650,\n\"result\" : \"ok\" }\"\n```", "```js\n>var object = JSON.parse(json);\n<- Object { call:\"KF6GPE\", type:\"l\", time:\"1399371514\", lasttime:\"1418597513\", lat:37.17667, lng:-122.14650, result: \"ok\"}\n```", "```js\n> object.result;\n<- \"ok\"\n```", "```js\n>var newJson = JSON.stringify(object);\n<- \"{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\": -122.14650,\n\"result\" : \"ok\" }\"\n```", "```js\n>JSON.parse('{\"result\" = \"ok\" }')\n<- VM465:2 Uncaught SyntaxError: Unexpected token =\n```", "```js\n>eval('('+json+')')\n<- Object {result: \"ok\"}\n```", "```js\nvar jsonSuccess = 'true';\n<- \"true\"\n> var flag = JSON.parse(jsonSuccess);\n```", "```js\n> var object = JSON.parse(json, function(k, v) {\n  if ( k == 'call') return v.toLowerCase();\n});\n<- Object { call:\"kf6gpe\", type:\"l\", time:\"1399371514\",\nlasttime:\"1418597513\", lat:37.17667, lng:-122.14650, result: \"ok\"}\n```", "```js\n> var newJson = JSON.stringify(object, function (k, v) {\n  if k == 'type') return undefined;\n});\n<- \"{ \"call\":\"KF6GPE\",\"time\":\"1399371514\",\"lasttime\":\n\"1418597513\",\"lat\": 37.17667,\"lng\": -122.14650, \"result\" : \"ok\" \n}\"\n```", "```js\n#include <string>\n#include <iostream>\n#include \"json/json.h\"\n\nusing namespace std;\n\nint main(int argc, _TCHAR* argv[])\n{\n  Json::Reader reader;\n  Json::Value root;\n\n  string json = \"{\\\"call\\\": \\\"KF6GPE\\\",\\\"type\\\":\\\"l\\\",\\\"time\\\":\n  \\\"1399371514\\\",\\\"lasttime\\\":\\\"1418597513\\\",\\\"lat\\\": 37.17667,\n  \\\"lng\\\": -122.14650,\\\"result\\\":\\\"ok\\\"}\";\n\n  bool parseSuccess = reader.parse(json, root, false);\n\n  if (parseSuccess)\n  {\n    const Json::Value resultValue = root[\"result\"];\n    cout << \"Result is \" << resultValue.asString() << \"\\n\";\n  }\n\n  Json::StyledWriter styledWriter;\n  Json::FastWriter fastWriter;\n  Json::Value newValue;\n  newValue[\"result\"] = \"ok\";\n\n  cout << styledWriter.write(newValue) << \"\\n\";\n  cout << fastWriter.write(newValue) << \"\\n\";\n\n  return 0;\n}\n```", "```js\nnewValue[\"result\"] = \"ok\";\n```", "```js\nJson::Reader reader;\nJson::Value piValue;\n\nstring json = \"3.1415\";\nbool parseSuccess = reader.parse(json, piValue, false);\n  double pi = piValue.asDouble();\n```", "```js\nusing System;\nusing System.Collections.Generic;\nusing System.Web.Script.Serialization;\n\nnamespace JSONExample\n{\n    public class SimpleResult\n    {\n        public string result;\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            JavaScriptSerializer serializer = \n            new System.Web.Script.Serialization.\n            JavaScriptSerializer();\n\n            string json = @\"{ \"\"call\"\":\"\"KF6GPE\"\",\"\"type\"\":\n\"\"l\"\",\"\"time\"\":\"\"1399371514\"\",\"\"lasttime\"\":\"\"1418597513\"\",\n\"\"lat\"\": 37.17667,\"\"lng\\\": -122.14650,\"\"result\"\": \"\"ok\"\" }\";\n\ndynamic result = serializer.DeserializeObject(json);\n            foreach (KeyValuePair<string, object> entry in result)\n            {\n                var key = entry.Key;\n                var value = entry.Value as string;\nConsole.WriteLine(String.Format(\"{0} : {1}\", \nkey, value));\n            }\n            Console.WriteLine(serializer.Serialize(result));\n\n            var anotherResult = new SimpleResult { result=\"ok\" };\n            Console.WriteLine(serializer.Serialize(\n            anotherResult));\n        }\n    }\n}\n```", "```js\nstring piJson = \"3.14\";\ndynamic piResult = serializer.DeserializeObject(piJson);\n```", "```js\nsvn checkout http://google-gson.googlecode.com/svn/trunk/google-gson-read-only\n\n```", "```js\nGson gson = new com.google.gson.Gson(); \nString json = \"{\\\"call\\\": \\\"KF6GPE\\\", \\\"type\\\": \\\"l\\\", \\\"time\\\":\n\\\"1399371514\\\", \\\"lasttime\\\": \\\"1418597513\\\", \\\"lat\\\": 37.17667,\n\\\"lng\\\": -122.14650,\\\"result\\\":\\\"ok\\\"}\";\ncom.google.gson.JsonObject result = gson.fromJson(json, \nJsonElement.class).getAsJsonObject(); \n```", "```js\nJsonElement result = result.get(\"result\").getAsString();\n```", "```js\npublic class SimpleResult {\n    public String result;\n}\n\n// Elsewhere in your codeâ€¦\nGson gson = new com.google.gson.Gson(); \nSimpleResult result = new SimpleResult;\nresult.result = \"ok\";\nString json = gson.toJson(result);\t\n```", "```js\nGson gson = new com.google.gson.Gson(); \nString piJson = \"3.14\";\ndouble result = gson.fromJson(piJson, \nJsonElement.class).getAsDouble(); \n```", "```js\nperl Makefile.PL \nmake \nmake install\n```", "```js\nuse JSON;\nuse Data::Dumper;\nmy $json = '{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\": -122.14650,\n\"result\" : \"ok\" }';\nmy %result = decode_json($json);\nprint Dumper(result);\nprint encode_json(%result);\n```", "```js\nimport json\n```", "```js\n>>> import json\n>>>json = '{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\": -122.14650,\n\"result\" : \"ok\" }'\nu'{\"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\": -122.14650,\n\"result\": \"ok\" }'\n>>>result = json.loads(json)\n{u'call':u'KF6GPE',u'type':u'l',u'time':u'1399371514',\nu'lasttime':u'1418597513',u'lat': 37.17667,u'lng': -122.14650,u'result': u'ok'}\n>>> result['result']\nu'ok'\n>>> print json.dumps(result)\n{\"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\": -122.14650,\n\"result\":\"ok\"}\n>>> print json.dumps(result, \n...                  indent=4)\n{\n\"call\":\"KF6GPE\",\n\"type\":\"l\",\n\"time\":\"1399371514\",\n\"lasttime\":\"1418597513\",\n\"lat\": 37.17667,\n\"lng\": -122.14650,\n    \"result\": \"ok\"\n}\n```"]