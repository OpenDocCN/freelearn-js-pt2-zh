["```js\n\"bundles\": [ \n  { \n    \"name\": \"app-bundle.js\", \n    \"source\": [ \n      \"[**/*.js]\", \n      \"**/*.{css,html}\" \n    ] \n  }, \n  { \n    \"name\": \"vendor-bundle.js\", \n    \"prepend\": [ \n      \"node_modules/bluebird/js/browser/bluebird.core.js\", \n      \"scripts/require.js\" \n    ], \n    \"dependencies\": [ \n      \"aurelia-binding\", \n      \"aurelia-bootstrapper\", \n      \"aurelia-dependency-injection\", \n      \"aurelia-framework\", \n      //Omitted snippet... \n    ] \n  } \n] \n\n```", "```js\n\"bundles\": [ \n  { \n    \"name\": \"app-bundle.js\", \n    \"prepend\": [ \n      \"node_modules/bluebird/js/browser/bluebird.core.js\", \n      \"scripts/require.js\" \n    ], \n    \"source\": [ \n      \"[**/*.js]\", \n      \"**/*.{css,html}\" \n    ], \n    \"dependencies\": [ \n      \"aurelia-binding\", \n      \"aurelia-bootstrapper\", \n      //Omitted snippet... \n    ] \n  } \n] \n\n```", "```js\n\"loader\": { \n  \"type\": \"require\", \n  \"configTarget\": \"app-bundle.js\", \n  // Omitted snippet... \n}, \n\n```", "```js\n<!-- Omitted snippet... --> \n<body aurelia-app=\"main\"> \n  <script src=\"img/app-bundle.js\" \n          data-main=\"aurelia-bootstrapper\"></script> \n</body> \n<!-- Omitted snippet... --> \n\n```", "```js\n{ \n  \"name\": \"app-bundle.js\", \n  \"source\": { \n    \"include\": [ \n      \"[**/*.js]\", \n      \"**/*.{css,html}\" \n    ], \n    \"exclude\": [ \n      \"**/contacts/**/*\" \n    ] \n  } \n} \n\n```", "```js\n{ \n  \"name\": \"app-bundle.js\", \n  //Omitted snippet... \n}, \n{ \n  \"name\": \"contacts-bundle.js\", \n  \"source\": [ \n    \"[**/contacts/**/*.js]\", \n    \"**/contacts/**/*.{css,html}\" \n  ] \n},\n\n```", "```js\n\"options\": { \n  \"minify\": \"stage & prod\", \n  \"sourcemaps\": \"dev & stage\", \n  \"rev\": \"stage & prod\" \n}, \n\n```", "```js\n\"targets\": [ \n  { \n    \"id\": \"web\", \n    \"displayName\": \"Web\", \n    \"output\": \"scripts\", \n    \"index\": \"index.html\" \n  } \n], \n\n```", "```js\n> au build --env stage\n\n```", "```js\n{ \n  //Omitted snippet... \n  \"build\": { \n    //Omitted snippet... \n  }, \n  \"deploy\": { \n    \"sources\": [ \n      \"index.html\", \n      \"favicon.ico\", \n      \"locales/**/*\", \n      \"scripts/*-bundle*.{js,map}\", \n      \"node_modules/bootstrap/dist/**/*\", \n      \"node_modules/font-awesome/{css,fonts}/**/*\" \n    ] \n  } \n} \n\n```", "```js\n{ \n  \"name\": \"deploy\", \n  \"description\": \"Builds, processes and deploy all application assets.\", \n  \"flags\": [ \n    { \n      \"name\": \"out\", \n      \"description\": \"Sets the output directory (required)\", \n      \"type\": \"string\" \n    }, \n    { \n      \"name\": \"env\", \n      \"description\": \"Sets the build environment (uses debug by default).\", \n      \"type\": \"string\" \n    } \n  ] \n} \n\n```", "```js\nimport gulp from 'gulp'; \nimport {CLIOptions} from 'aurelia-cli'; \nimport project from '../aurelia.json'; \n\nexport default function copy() { \n  const output = CLIOptions.getFlagValue('out', 'o'); \n  if (!output) { \n    throw new Error('--out argument is required'); \n  } \n\n  return gulp.src(project.deploy.sources, { base: './' }) \n    .pipe(gulp.dest(output)); \n} \n\n```", "```js\nimport gulp from 'gulp'; \nimport build from './build'; \nimport copy from './copy'; \n\nexport default gulp.series( \n  build, \n  copy \n); \n\n```", "```js\n> npm install\n> au deploy --env $(env) --out $(build-artifacts)\n\n```"]