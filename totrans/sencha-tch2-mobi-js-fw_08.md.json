["```js\ncd /path/to/Sencha-touch-directory/\n\n```", "```js\nsencha generate app FlickrFindr /path/to/www/flickrfindr\n\n```", "```js\nExt.Loader.setPath({\n    'Ext': 'touch/src'\n});\n```", "```js\nExt.application({\n    name: 'FlickrFinder',\n    requires: [\n        'Ext.MessageBox'\n    ],\n    views: [\n        'Main'\n    ],\n```", "```js\n    launch: function() {\n        // Destroy the #appLoadingIndicator element\n        Ext.fly('appLoadingIndicator').destroy();\n\n        // Initialize the main view\n        Ext.Viewport.add(Ext.create('FlickrFindr.view.Main'));\n    }\n```", "```js\nExt.define('FlickrFinder.view.Main', {\n    extend: 'Ext.tab.Panel',\n    xtype: 'main',\n    requires: [\n        'FlickrFinder.view.SearchPanel',\n        'FlickrFinder.view.SavedPanel'\n    ],\n    config: {\n        tabBarPosition: 'bottom',\n        items: [\n           { xtype: 'searchpanel'},\n           { xtype: 'savedpanel'}\n        ]\n    }\n});\n```", "```js\nExt.define('FlickrFinder.view.SearchPanel', {\n    extend: 'Ext.Panel',\n    xtype: 'searchpanel',\n    config: {\n        title: 'Search', \n        iconCls: 'search',\n        html: 'Search Panel'\n\n    }\n});\n```", "```js\nExt.define('FlickrFinder.view.SavedPanel', {\n    extend: 'Ext.Panel',\n    xtype: 'savedpanel',\n    config: {\n        title: 'Saved',\n        iconCls: 'favorites',\n        html: 'Saved Panel'\n    }\n});\n```", "```js\ncd /path/to/www/myapp\nsencha generate controller SearchPhotos\nsencha generate controller SavedPhotos\n\n```", "```js\n    controllers: [\n        'SearchPhotos',\n        'SavedPhotos'\n    ]\n```", "```js\nExt.define('FlickrFinder.controller.SearchPhotos', {\n    extend: 'Ext.app.Controller',\n    config: {\n        // refs: {\n        //     TODO: add refs here\n        // },\n        // control: {\n        //     TODO: add event handlers here    \n        // }\n    },\n\n    // Called when the Application is launched, remove if not needed\n    launch: function(app) {\n\n    }\n});\n```", "```js\nhttp://farm{farm-id}.static.flickr.com/{server-id}/{id}_{secret}.jpg\n```", "```js\nExt.define('FlickrFindr.model.Photo', {\n    extend: 'Ext.data.Model',\n    config: {\n        fields: [\n            { name: 'id', type: 'int' },\n            { name: 'owner', type: 'string' },\n            { name: 'secret', type: 'string' },\n            { name: 'server', type: 'int' },\n            { name: 'farm', type: 'int' },\n            { name: 'title', type: 'string' }\n        ]\n    }\n});\n```", "```js\nExt.define('FlickrFindr.store.SearchPhotosStore', {\n    extend: 'Ext.data.Store',requires: 'FlickrFindr.model.Photo',config: {model: 'FlickrFindr.model.Photo',autoLoad: false,pageSize: 25,proxy: {type: 'jsonp',url: 'http://ycpi.api.flickr.com/services/rest/',callbackKey: 'jsoncallback',limitParam: 'per_page',reader: {type: 'json',root: 'photos.photo',totalProperty: 'photos.total'}}}\n});\n```", "```js\njsoncallback = a_really_long_callback_function_name\n```", "```js\ncallback = a_really_long_callback_function_name\n```", "```js\ncallbackParam: 'jsoncallback'\n```", "```js\nreader: {\n type: 'json',\n root: 'photos.photo' ,\n totalProperty: 'photos.total'\n}\n```", "```js\nvar SearchResultTpl = new Ext.XTemplate(\n    '<div class=\"searchresult\">',\n    '<img src=\"img/{[this.getPhotoURL(\"s\", values)]}\" height=\"75\" width=\"75\"/>',\n    ' {title}</div>',\n    {\n    getPhotoURL: function(size, values) { /* Form a URL based on Flickr's URL specification: http://www.flickr.com/services/api/misc.urls.html */\n        size = size || 's';\n        var url = 'http://farm' + values.farm + '.static.flickr.com/' + values.server + '/' + values.id + '_' + values.secret + '_' + size + '.jpg';\n        return url;\n    }\n});\n```", "```js\nExt.define('FlickrFindr.view.SearchPhotoList', {\n    extend: 'Ext.dataview.List',\n    alias: 'widget.searchphotolist',\n    requires: [\n        'FlickrFindr.store.SearchPhotosStore'\n    ],\n    config: {\n        store: 'SearchPhotosStore',\n        itemTpl: SearchResultTpl\n    }\n});\n```", "```js\nextend: 'Ext.Panel',\n```", "```js\nextend: 'Ext.navigation.View',\n```", "```js\nhtml: 'Search Panel'\n```", "```js\nitems: {\n xtype: 'searchphotolist',\n title: 'Photos Near You'\n}\n```", "```js\nExt.define('FlickrFinder.view.SearchPhotoDetails', {\n extend: 'Ext.Panel',\n xtype: 'searchphotodetails',\n config: {\n  tpl: '<div class=\"photoDetails\"><h1>{title}</h1><img src=\"img/{id}_{secret}_b.jpg\"></div>',\n  padding: 10,\n  scrollable: {\n   direction: 'vertical',\n   directionLock: true\n  },  \n  items: [\n   {\n     xtype: 'button',\n     action: 'savephoto',\n     text: 'Add To Saved Photos',\n     width: 250,\n     margin: '0 0 10 0'\n    }\n  ]\n }\n});\n```", "```js\nExt.define('FlickrFindr.controller.SearchPhotos', {\n    extend: 'Ext.app.Controller',\n    config: {\n        views: [\n            'FlickrFindr.view.SearchPhotoList',\n            'FlickrFindr.view.SearchPhotoDetails',\n            'FlickrFindr.view.SearchPanel',\n            'FlickrFindr.view.Main'\n        ],\n        stores: [\n            'FlickrFindr.store.SearchPhotosStore'\n        ]\n```", "```js\nrefs: {\n SearchPhotoList:'searchphotolist',\n Main: 'main',\n SearchPanel: 'searchpanel'\n}\n```", "```js\nvar panel = this.getSearchPanel();\npanel.add(myComponent); \n```", "```js\nlaunch: function() {\n var dt = Ext.Date.add(new Date(), Ext.Date.YEAR, -1);\n\n // Set some defaults.\n var easyparams = {\n  \"min_upload_date\": Ext.Date.format(dt, \"Y-m-d H:i:s\"),\n  \"lat\": 40.759017,\n  \"lon\": -73.984059,\n  \"accuracy\": 16,\n  \"radius\": 10,\n  \"radius_units\": \"km\" ,\n  \"method\": \"flickr.photos.search\",\n  \"api_key\": Your_API_Key_Goes_Here,\n  \"format\": \"json\"\n };\n```", "```js\nvar me = this;\n var geo = Ext.create('Ext.util.Geolocation',{\n  autoUpdate: false,\n  timeout: 10000,\n  // 10 second timeout\n  listeners: {\n   locationupdate: function(geo) {\n    // Use our coordinates.\n    easyparams = {\n    \"min_upload_date\": Ext.Date.format(dt, \"Y-m-d H:i:s\"),\n    \"lat\": geo.getLatitude(),\n    \"lon\": geo.getLongitude(),\n    \"accuracy\": 16,\n    \"radius\": 10,\n    \"radius_units\": \"km\",\n    \"method\": \"flickr.photos.search\",\n    \"api_key\": me.getApplication().api_key,\n    \"format\": \"json\"\n    };\n\n    var store = me.getSearchPhotoList().getStore();\n    store.getProxy().setExtraParams(easyparams);\n    store.load();\n  },\n  locationerror: function(geo, bTimeout, bPermissionDenied, bLocationUnavailable, message) {\n   Ext.Msg.alert('Unable to set location.');\n   var store = me.getSearchPhotoList().getStore();\n   store.getProxy().setExtraParams(easyparams);\n   store.load();\n  }\n }\n});\n\ngeo.updateLocation();\n```", "```js\neasyparams = {\n    \"min_upload_date\": Ext.Date.format(dt, \"Y-m-d H:i:s\"),\n    \"lat\": geo.getLatitude(),\n    \"lon\": geo.getLongitude(),\n    \"accuracy\": 16,\n    \"radius\": 10,\n    \"radius_units\": \"km\",\n    \"method\": \"flickr.photos.search\",\n    \"api_key\": me.getApplication().api_key,\n    \"format\": \"json\"\n    };\n```", "```js\nvar store = me.getSearchPhotoList().getStore();\nstore.getProxy().setExtraParams(easyparams);\nstore.load();\n```", "```js\nSearchPhotoList: {\n itemtap: 'showSearchPhotoDetails'\n}\n```", "```js\nshowSearchPhotoDetails: function(list, index, target, record) {\n  var panel = Ext.create('FlickrFindr.view.SearchPhotoDetails', {\n    title: record.get('title'),\n    record: record\n  });\n  this.getSearchPanel().push(panel);\n}\n```", "```js\ncontrol: {\n SearchPhotoList: {\n  itemtap: 'showSearchPhotoDetails',\n  itemswipe: 'pageChange'\n }\n}\n```", "```js\npageChange: function(list, index, target, record, e, eOpts) {\n console.log(e);\n}\n```", "```js\npageChange: function(list, index, target, record, e, eOpts) {\n console.log(e);\n var store = this.getSearchPhotoList().getStore();\n if(e.direction == 'right') {\n  if(store.currentPage != 1) {\n   store.previousPage();\n  }\n } else {\n  var total = store.getTotalCount();\n  var page = store.getPageSize();\n  if(store.currentPage <= Math.floor(total/page)) {\n   store.nextPage()\n  ;}\n }\n}\n```", "```js\nExt.define('FlickrFindr.store.SavedPhotosStore', {\n    extend: 'Ext.data.Store',\n    requires: 'FlickrFindr.model.Photo',\n    config: {\n        model: 'FlickrFindr.model.Photo',\n        autoLoad: true, \n        pageSize: 25,\n        storeId: 'SavedPhotosStore',\n        proxy: {\n            type: 'localstorage',\n            id: 'flickr-saved'\n        }\n    }\n});\n```", "```js\nstores: [\n 'FlickrFindr.store.SavedPhotosStore'\n]\n```", "```js\nvar SavedResultTpl = new Ext.XTemplate(\n '<div class=\"savedresult\">',\n '<img src=\"img/{[this.getPhotoURL(\"s\", values)]}\" height=\"75\" width=\"75\"/>',\n ' {title}</div>',\n {\n  getPhotoURL: function(size, values) { \n  size = size || 's';\n  var url = 'http://farm' + values.farm + '.static.flickr.com/' + values.server + '/' + values.id + '_' + values.secret + '_' + size + '.jpg';\n  return url;\n }\n    });\n\nExt.define('FlickrFindr.view.SavedPhotoList', {\n extend: 'Ext.dataview.List',\n alias: 'widget.savedphotolist',\n requires: [\n  'FlickrFindr.store.SavedPhotosStore'\n ],\n config: {\n  store: 'SavedPhotosStore',\n  itemTpl: SavedResultTpl\n }\n}); \n```", "```js\nExt.define('FlickrFindr.view.SavedPhotoDetails', {\n extend: 'Ext.Panel',\n xtype: 'savedphotodetails',\n config: {\n  tpl: '<div class=\"photoDetails\"><h1>{title}</h1><img src=\"img/{id}_{secret}_b.jpg\"></div>',\n  padding: 10,\n  scrollable: {\n  direction: 'vertical',\n  directionLock: true\n },\n items: [\n  {\n   xtype: 'button',\n   action: 'removephoto',\n   text: 'Remove From Saved Photos',\n   width: 250,\n   margin: '0 0 10 0'\n  }\n ]\n }\n});\n```", "```js\nExt.define('FlickrFindr.view.SavedPanel', {\n    extend: 'Ext.navigation.View',\n    xtype: 'savedpanel',\n    config: {\n        title: 'Saved',\n        iconCls: 'favorites',\n        items: {\n            xtype: 'searchphotolist',\n            title: 'My Saved Photos'\n        }\n    }\n});\n```", "```js\nviews: [\n 'FlickrFindr.view.SavedPhotoList',\n 'FlickrFindr.view.SavedPhotoDetails'\n]\n```", "```js\n'button[action=savephoto]': {\n  tap: 'savePhoto'\n }\n```", "```js\nsavePhoto: function(btn) {\n var rec = btn.up('searchphotodetails').getRecord();\n var store = Ext.data.StoreManager.lookup('SavedPhotosStore');\n rec.save({\n  callback: function() {\n  store.load();\n  this.getMain().setActiveItem(1);\n  }\n }, this);\n}\n```", "```js\nrefs: {\n SavedPhotoList:'savedphotolist',\n SavedPanel: 'savedpanel'\n},\ncontrol: {\n SavedPhotoList: {\n  itemtap: 'showSavedPhotoDetails',\n  itemswipe: 'pageChange'\n },\n 'button[action=removephoto]': {\n   tap: 'removePhoto'\n }\n}\n```", "```js\nshowSavedPhotoDetails: function(list, index, target, record) {\n var panel = Ext.create('FlickrFindr.view.SavedPhotoDetails', {\n  title: record.get('title'),\n  record: record\n });\n this.getSavedPanel().push(panel);\n}\n```", "```js\npageChange: function(list, index, target, record, e, eOpts) {\n        console.log(e);\n        var store = this.getSavedPhotoList().getStore();\n        if(e.direction == 'right') {\n            if(store.currentPage != 1) {\n                store.previousPage();\n            }\n        } else {\n            var total = store.getTotalCount();\n            var page = store.getPageSize();\n            if(store.currentPage <= Math.floor(total/page)) {\n                store.nextPage();\n            }\n        }\n    }\n```", "```js\nremovePhoto: function(btn) {\n var rec = btn.up('savedphotodetails').getRecord();\n var store = Ext.data.StoreManager.lookup('SavedPhotosStore');\n rec.erase({\n  callback: function() {\n   store.load();\n   this.getSavedPanel().pop();\n  }\n }, this);\n}\n```"]