["```js\n    $ curl -fsSL https://deno.land/x/install/install.sh | sh -s v1.7.5\n    ```", "```js\n    $v=\"1.7.5\"; iwr https://deno.land/x/install/install.ps1 -useb | iex\n    ```", "```js\n$ deno --version\n```", "```js\n$ deno --version \ndeno 1.7.5 (release, x86_64-apple-darwin) \nv8 9.0.123 \ntypescript 4.1.4\n```", "```js\n{\n \"deno.enable\": true\n}\n```", "```js\n$ deno completions <shell>\n```", "```js\nconsole.log('Hello from deno');\n```", "```js\n$ deno run my-first-deno-program.js\nHello from deno\n```", "```js\n$ deno\n```", "```js\n$ deno eval \"console.log('Hello from eval')\"\nHello from eval\n```", "```js\nconst now = new Date();\nconsole.log(`${now.getHours()}:${now.getMinutes()}:  ${now.getSeconds()}`);\n```", "```js\n$ deno run --inspect-brk get-current-time.js\nDebugger listening on ws://127.0.0.1:9229/ws/32e48d8a-5c9c-4300-8e09-ee700ab79648\n```", "```js\nimport { serve } from \n'https://deno.land/std@0.83.0/http/server.ts'\n```", "```js\nimport { serve } from\n\"https://deno.land/std@0.84.0/http/server.ts\";\nfor await (const req of serve(\":8080\")) {\n  req.respond({ body: \"Hello deno\" });\n}\n```", "```js\n$ deno run hello-http-server.js\nDownload https://deno.land/std@0.83.0/http/server.ts\nDownload https://deno.land/std@0.83.0/encoding/utf8.ts\nDownload https://deno.land/std@0.83.0/io/bufio.ts\nDownload https://deno.land/std@0.83.0/_util/assert.ts\nDownload https://deno.land/std@0.83.0/async/mod.ts\nDownload https://deno.land/std@0.83.0/http/_io.ts\nDownload https://deno.land/std@0.83.0/textproto/mod.ts\nDownload https://deno.land/std@0.83.0/http/http_status.ts\nDownload https://deno.land/std@0.83.0/async/deferred.ts\nDownload https://deno.land/std@0.83.0/async/delay.ts\nDownload https://deno.land/std@0.83.0/async/mux_async_iterator.ts\nDownload https://deno.land/std@0.83.0/async/pool.ts\nDownload https://deno.land/std@0.83.0/bytes/mod.ts\nerror: Uncaught PermissionDenied: network access to \"0.0.0.0:8080\", run again with the --allow-net flag\n```", "```js\n$ deno info\nDENO_DIR location: \"/Users/alexandre/Library/Caches/deno\"\nRemote modules cache: \"/Users/alexandre/Library/Caches/deno/deps\"\nTypeScript compiler cache: \"/Users/alexandre/Library/Caches/deno/gen\"\n```", "```js\n$ deno cache hello-http-server.js\n```", "```js\n$ deno cache hello-http-server.js --reload=https://deno.land/std@0.83.0/http/server.ts\nDownload https://deno.land/std@0.83.0/http/server.ts\n```", "```js\nerror: Uncaught PermissionDenied: network access to \"0.0.0.0:8080\", run again with the --allow-net flag\n```", "```js\n$ deno run --allow-net hello-http-server.js\n```", "```js\n$ curl localhost:8080\nHello deno\n```", "```js\nexport { serve } from \n\"https://deno.land/std@0.83.0/http/server.ts\";\n```", "```js\nimport { serve } from \"./deps.js\";\nfor await (const req of serve(\":8080\")) {\n  req.respond({ body: \"Hello deno\" });\n}\n```", "```js\n$ deno cache --lock=lock.json --lock-write deps.js \n```", "```js\n{\n    \"https://deno.land/std@0.83.0/_util/assert.ts\":    \"e1f76e77c5ccb5a8e0dbbbe6cce3a56d2556c8cb5a9a8802fc9565 af72462149\",\n    \"https://deno.land/std@0.83.0/async/deferred.ts\":    \"ac95025f46580cf5197928ba90995d87f26e202c19ad961bc4e317 7310894cdc\",\n    \"https://deno.land/std@0.83.0/async/delay.ts\":    \"35957d585a6e3dd87706858fb1d6b551cb278271b03f52c5a2cb70 e65e00c26a\",\n```", "```js\n$ deno cache --reload --lock=lock.json deps.js\n```", "```js\n$ deno run --lock=lock.json --allow-net hello-http-server.js\n```", "```js\n{\n  \"imports\": {\n    \"http/\": \"https://deno.land/std@0.83.0/http/\"\n  }\n}\n```", "```js\nexport { serve } from \"http/server.ts\"; \n```", "```js\n$ deno run --allow-net --import-map=import-maps.json --unstable hello-http-server.js\n```", "```js\n$ deno info https://deno.land/std@0.83.0/http/server.ts\nlocal:/Users/alexandre/Library/Caches/deno/deps/https/deno.land/2d926cfeece184c4e5686c4a94b44c9d9a3ee01c98bdb4b5e546dea4 e0b25e49\ntype: TypeScript\ncompiled: /Users/alexandre/Library/Caches/deno/gen/https/deno.land/2d926cfeece184c4e5686c4a94b44c9d9a3ee01c98bdb4b5e546dea4 e0b25e49.js\ndeps: 12 unique (total 63.31KB)\nhttps://deno.land/std@0.83.0/http/server.ts (10.23KB)\n├── https://deno.land/std@0.83.0/_util/assert.ts *\n├─┬ https://deno.land/std@0.83.0/async/mod.ts (202B)\n│ ├── https://deno.land/std@0.83.0/async/deferred.ts *\n│ ├── https://deno.land/std@0.83.0/async/delay.ts (279B)\n│ ├─┬ \n…\n│    └── https://deno.land/std@0.83.0/encoding/utf8.ts *\n└─┬ https://deno.land/std@0.83.0/io/bufio.ts (21.15KB)\n    https://deno.land/std@0.83.0/_util/assert.ts (405B)\n    https://deno.land/std@0.83.0/bytes/mod.ts (4.34KB)\n```", "```js\n$ deno doc https://deno.land/std@0.83.0/http/server.ts\nfunction _parseAddrFromStr(addr: string): HTTPOptions\n    Parse addr from string\nasync function listenAndServe(addr: string | HTTPOptions, handler: (req: ServerRequest) => void): Promise<void>\n    Start an HTTP server with given options and request handler\nasync function listenAndServeTLS(options: HTTPSOptions, handler: (req: ServerRequest) => void): Promise<void>\n    Start an HTTPS server with given options and request \n      handler\nfunction serve(addr: string | HTTPOptions): Server\n    Create a HTTP server\n...\n```", "```js\n$ deno doc https://deno.land/std@0.83.0/http/server.ts serve\nDefined in https://deno.land/std@0.83.0/http/server.ts:282:0\nfunction serve(addr: string | HTTPOptions): Server\n    Create a HTTP server\n        import { serve } from         \"https://deno.land/std/http/server.ts\";\n        const body = \"Hello World\\n\";\n        const server = serve({ port: 8000 });\n        for await (const req of server) {\n          req.respond({ body }); add \n        }\n```", "```js\n$ deno doc --builtin\n```", "```js\n$ deno doc --builtin | less\n```", "```js\n$ deno doc --builtin Deno.writeFile\nDefined in lib.deno.d.ts:1558:2\nfunction writeFile(path: string | URL, data: Uint8Array, options?: WriteFileOptions): Promise<void>\n  Write `data` to the given `path`, by default creating a new file if needed,\n  else overwriting.\n  ```", "```js\n Requires `allow-write` permission, and `allow-read` if `options.create` is `false`.\n```", "```js\n$ deno run --allow-net --import-map=import-maps.json --unstable hello-http-server.js\n```", "```js\n$ deno run --allow-net https://deno.land/std@0.83.0/examples/ echo_server.ts\nDownload https://deno.land/std@0.83.0/examples/echo_server.ts\nCheck https://deno.land/std@0.83.0/examples/echo_server.ts\nListening on 0.0.0.0:8080\n```", "```js\n$ telnet 0.0.0.0 8080\nTrying 0.0.0.0...\nConnected to 0.0.0.0.\nEscape character is '^]'.\nhello buddy\nhello buddy\n```", "```js\n$ deno install --allow-net --allow-read https://deno.land/std@0.83.0/http/file_server.ts\n```", "```js\n$ deno install --allow-net --allow-read -n serve https://deno.land/std@0.83.0/http/file_server.ts \n```", "```js\n$ serve\nHTTP server listening on http://0.0.0.0:4507/\n```", "```js\n$ deno install --allow-net --unstable hello-http-server.js\n```", "```js\nDeno.test(\"first test\", () => {});\nDeno.test(\"second test\", () => {});\n```", "```js\n$ deno test --filter second\nrunning 1 tests\ntest second test ... ok (3ms)\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out (3ms)\n```", "```js\n$ deno fmt\n/Users/alexandre/Deno-Web-Development/Chapter02/my-first-deno-program.js\n/Users/alexandre/Deno-Web-Development/Chapter02/bundle.js\n```", "```js\n// deno-fmt-ignore\nconst book = 'Deno 1.x – Web Development'; \n```", "```js\n// deno-fmt-ignore-file\nconst book = 'Deno 1.x – Web Development';\nconst editor = 'PacktPub'\n```", "```js\n$ deno lint --unstable to-lint.js\n(no-debugger) `debugger` statement is not allowed\n  debugger;\n    ~~~~~~~~~\n    at /Users/alexandre/dev/personal/Deno-Web-Development/Chapter02/to-lint.js:4:2\nFound 1 problems\n```", "```js\n$ deno bundle get-current-time.js bundle.js\nBundle file:///Users/alexandre/dev/deno-web-development/Chapter02/2-hello-world/get-current-time.js\nEmit \"bundle.js\" (2.33 KB)\n```", "```js\n$ deno run bundle.js\n0:11:4\n```", "```js\n$ node bundle.js\n0:11:4\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Deno bundle</title>\n  </head>\n  <body>\n    <script type=\"module\" src=\"img/bundle.js\"></script>\n  </body>\n</html>\n```", "```js\n$ deno run --allow-net --allow-read https://deno.land/std@0.83.0/http/file_server.ts\nHTTP server listening on http://0.0.0.0:4507/ \n```", "```js\n$ deno compile --unstable get-current-time.js\nBundle file:///Users/alexandre/dev/Deno-Web-Development/Chapter02/get-current-time.js\nCompile file:///Users/alexandre/dev/Deno-Web-Development/Chapter02/get-current-time.js\nEmit get-current-time\n```", "```js\n$ ./get-current-time\n16:10:8\n```", "```js\n$ deno upgrade --version=1.7.4\n```", "```js\n$ deno upgrade --output $HOME/my_deno\n```"]