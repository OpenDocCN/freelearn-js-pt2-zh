["```js\n[org.clojure/data.json \"0.2.5\"]\n```", "```js\n<dependency>\n<groupId>org.clojure</groupId>\n<artifactId>data.json</artifactId>\n<version>0.2.5</version>\n</dependency>\n```", "```js\n(ns example\n  (:require [clojure.data.json :as json])\n```", "```js\n(json/write-str {:call \"KF6GPE\",:type \"l\",:time \n\"1399371514\":lasttime\"1418597513\",:lat 37.17667,:lng\n-122.14650: :result \"ok\"})\n;;=>\"{\\\"call\\\": \\\"KF6GPE\\\", \\\"type\\\": \\\"l\\\", \\\"time\\\":\n\\\"1399371514\\\", \\\"lasttime\\\": \\\"1418597513\\\", \\\"lat\\\": 37.17667,\n\\\"lng\\\": -122.14650,\\\"result\\\":\\\"ok\\\"}\"\n```", "```js\n(json/write {:call \"KF6GPE\",:type \"l\", :time \n\"1399371514\":lasttime \"1418597513\",:lat 37.17667, :lng \n-122.14650: result \"ok\" }  stream)\n```", "```js\n(json/read-str \"{\\\"result\\\":\\\"ok\\\"}\")\n;;=> {\"result\" \"ok\"}\n```", "```js\n(json/read-str \"{\\\"call\\\": \\\"KF6GPE\\\", \\\"type\\\": \\\"l\\\", \\\"time\\\":\n\\\"1399371514\\\", \\\"lasttime\\\": \\\"1418597513\\\", \\\"lat\\\": 37.17667,\n\\\"lng\\\": -122.14650,\\\"result\\\":\\\"ok\\\"}:key-fn keyword)\n;;=> {:call \"KF6GPE\",:type \"l\", :time \n\"1399371514\":lasttime \"1418597513\",:lat 37.17667, :lng \n-122.14650: :result \"ok\"}\n```", "```js\n(json/write-str {:result \"OK\"}\n                :key-fn #(.toUpperCase %))\n;;=> \"{\\\"RESULT\\\":\"OK\"}\"\n```", "```js\n(defn my-value-reader [key value]\n  (if (= key :date)\n    (java.sql.Date/valueOf value)\n    value))\n\n(json/read-str \"{\\\"result\\\":\\\"OK\\\",\\\"date\\\":\\\"2012-06-02\\\"}\"\n               :value-fn my-value-reader\n               :key-fn keyword) \n;;=> {:result\"OK\", :date #inst \"2012-06-02T04:00:00.000-00:00\"}\n```", "```js\nopen FSharp.Data\n```", "```js\nopen FSharp.Data\n\ntype Json = JsonProvider<\"\"\" { \"result\":\"\" } \"\"\">\nlet result = Json.Parse(\"\"\" { \"result\":\"OK\" } \"\"\")\nlet newJson = Json.Root( result = \"FAIL\")\n\n[<EntryPoint>]\nlet main argv = \n    printfn \"%A\" result.Result\n    printfn \"%A\" newJson\n    printfn \"Done\"\n```", "```js\nopen FSharp.Data\n```", "```js\ntype Json= JsonProvider<\"\"\" { \"result\":\"\" } \"\"\">\n```", "```js\nlet result = Json.Parse(\"\"\" { \"result\":\"OK\" } \"\"\")\n```", "```js\nlet newJson = Json.Root( result = \"FAIL\")\n```", "```js\nvar http = require('http');\nhttp.createServer(function(req, res) {\n   res.writeHead(200, {'Content-Type': 'text/plain'});\n   res.end('Hello world\\n');\n}).listen(1337, 'localhost');\nconsole.log('Server running at http://localhost:1337');\n```", "```js\nnode example.js\n```", "```js\nvar json = '{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\n\"1399371514\",\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\":\n-122.14650,\"result\" : \"ok\" }';\nvar object = JSON.parse(json);\n```", "```js\nvar object = { \ncall:\"KF6GPE\",\ntype:\"l\",\ntime:\"1399371514\",\nlasttime:\"1418597513\",\nlat:37.17667,\nlng:-122.14650,\nresult: \"ok\"\n};\n\nvar json = JSON.stringify(object);\n```", "```js\n$result = array(\n\"call\" =>\"KF6GPE\",\n\"type\" =>\"l\",\n\"time\" =>\"1399371514\",\n\"lasttime\" =>\"1418597513\",\n\"lat\" =>37.17667,\n\"lng\" =>-122.14650,\n\"result\" =>\"ok\");\n$json = json_encode($result);\n```", "```js\n$json = '{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\n\"1399371514\",\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\":\n-122.14650,\"result\" : \"ok\" }';\n$result = json_decode($json);\n```", "```js\ngem install json\n\n```", "```js\ngem install json_pure\n\n```", "```js\nrequire 'rubygems'\nrequire 'json'\n```", "```js\nrequire 'rubygems'\nrequire 'json/pure'\n```", "```js\nrequire 'rubygems'\nrequire 'json'\nobject = { \n\"call\" =>\"KF6GPE\",\n\"type\" =>\"l\",\n\"time\" =>\"1399371514\",\n\"lasttime\" =>\"1418597513\",\n\"lat\" => 37.17667,\n\"lng\" => -122.14650,\n\"result\" =>\"ok\"\n}\njson = JSON.generate(object)\n```", "```js\nrequire 'rubygems'\nrequire 'json'\njson = '{ \"call\":\"KF6GPE\",\"type\":\"l\",\"time\":\n\"1399371514\",\"lasttime\":\"1418597513\",\"lat\": 37.17667,\"lng\":\n-122.14650,\"result\" : \"ok\" }'\nobject = JSON.parse(object)\n```"]