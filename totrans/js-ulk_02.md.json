["```js\nIIFE\n(function () {\n  \"use strict\";\n   // variable defined inside this scope cannot be accessed from outside\n}());\n```", "```js\nImport\n(function ( $, Backbone ) {\n   \"use strict\";\n  // module body\n}( jQuery, Backbone ));\n```", "```js\nLocal References\n(function ( window, undefined ) {\n   \"use strict\";\n  // module body\n}( window ));\n```", "```js\nExport\n/** @module foo */\nvar foo = (function () {\n  \"use strict\";\n       /**\n        * @private\n        * @type String\n        */\n   var bar = \"bar\",\n       /**\n        * @type {Object}\n        */\n       foo = {\n         /**\n          * @public\n          * @type {String}\n          */\n         baz: \"baz\",\n         /**\n          * @public\n          * @returns {String}\n          */\n         qux: function() {\n           return \"qux\";\n         }\n       };\n   return foo;\n}());\n\nconsole.log( foo.baz ); // baz\nconsole.log( foo.qux() ); // qux\n```", "```js\n/** @module foo */\nvar foo = (function () {\n      \"use strict\";\n           /**\n            * @type {Object}\n            */\n         var foo = {\n             /**\n              * @public\n              * @type {String}\n              */\n             baz: \"baz\"\n           };\n       return foo;\n    }()),\n    /** @module bar */\n    bar = (function( foo ){\n      \"use strict\";\n      foo.qux = \"qux\";\n    }( foo || {} ));\n\nconsole.log( foo.baz ); // baz\nconsole.log( foo.qux ); // qux\n```", "```js\ndefine({\n  bar: \"bar\",\n  baz: \"baz\"\n});\n```", "```js\ndefine(function () {\n  \"use strict\";\n  // Construction\n  return {\n    bar: \"bar\",\n    baz: \"baz\"\n  };\n});\n```", "```js\nrequire( [ \"foo\" ], function( foo ) {\n  \"use strict\";\n  document.writeln( foo.bar );\n  document.writeln( foo.baz );\n});\n```", "```js\n<script src=\"img/require.min.js\"></script>\n<script src=\"img/main.js\" ></script>\n```", "```js\n<script data-main=\"./main\" async \n  src=\"img/require.min.js\"></script>\n```", "```js\ndefine({\n  value: \"bar\"\n});\n```", "```js\ndefine({\n  value: \"baz\"\n});\n```", "```js\ndefine([ \"./bar\", \"./baz\" ], function ( bar, baz ) {\n  \"use strict\";\n  // Construction\n  return {\n    bar: bar.value,\n    baz: baz.value\n  };\n});\n```", "```js\nrequire([ \"unexisting-path/foo\" ], function ( foo ) {\n  \"use strict\";\n  console.log( foo.bar );\n  console.log( foo.baz );\n}, function (err) {\n  console.log( err.requireType );\n  console.log( err.requireModules );\n});\n```", "```js\nrequire.config({\n    paths: {\n        foo: \"../../module/foo\"\n    }\n});\nrequire( [ \"foo\" ], function( foo ) {\n  \"use strict\";\n  console.log( foo.bar );\n  console.log( foo.baz );\n});\n```", "```js\nrequire.config({\n  paths: {\n    foo: \"../../module/foo-v0_1_1\"\n  }\n});\nrequire( [ \"foo\" ], function( foo ) {\n  \"use strict\";\n  console.log( foo.bar );\n  console.log( foo.baz );\n});\n```", "```js\n  paths: {\n    jquery: \"https://code.jquery.com/jquery-2.1.4.min.js\"\n  }\n});\n\nrequire([ \"jquery\" ], function ( $ ) {\n  // use jQuery\n});\n```", "```js\nconsole.log( \"I'm running\" );\n```", "```js\nrequire( \"./foo\" );\n```", "```js\nnode main.js\n\n```", "```js\nrequire( \"./foo\" );\nrequire( \"./foo\" );\nrequire( \"./foo\" );\n```", "```js\nvar foo = new Date();\n```", "```js\nvar first = require( \"./foo\" ),\n    second = require( \"./foo\" );\n\nconsole.log( first === second ); // true\n```", "```js\nvar foo = \"foo\";\n```", "```js\nrequire( \"./foo\" );\nconsole.log( typeof foo ); // undefined\n```", "```js\n// module logic\nmodule.exports = {\n  bar: \"bar\",\n  baz: \"baz\"\n};\n```", "```js\nvar foo = require(\"./foo\");\nconsole.log( foo.bar ); // bar\nconsole.log( foo.baz ); // baz\n```", "```js\nvar Foo = function(){\n  this.bar = \"bar\";\n}\n\nmodule.exports = Foo;\n```", "```js\nvar Foo = require(\"./foo\"),\n    foo = new Foo();\n\nconsole.log( foo.bar ); // bar\n```", "```js\n// module logic\nmodule.exports = \"bar\";\n```", "```js\n// module logic\nmodule.exports = \"baz\";\n```", "```js\n// module logic\nmodule.exports = {\n  bar: require( \"./bar\" ),\n  baz: require( \"./baz\" )\n};\n```", "```js\nvar foo = require( \"./foo\" );\nconsole.log( foo.bar ); // bar\nconsole.log( foo.baz ); // baz\n```", "```js\nconsole.log(\"Runnnig foo.js\");\nrequire(\"./main\");\n```", "```js\nconsole.log(\"Runnnig main.js\");\nrequire(\"./foo\");\n```", "```js\nRunnnig main.js\nRunnnig foo.js\n```", "```js\nnpm install babel -g\n\n```", "```js\nexport let bar = \"bar\";\nexport let baz = \"baz\";\n```", "```js\nimport { bar, baz } from \"./foo\";\nconsole.log( bar ); // bar\nconsole.log( baz ); // baz\n```", "```js\nbabel --modules common *.es6 --out-dir .\n```", "```js\nnode main.js\n```", "```js\nbabel --modules amd *.es6 --out-dir .\n```", "```js\n<script data-main=\"./main\" \n  src=\"img/require.min.js\"></script>\n```", "```js\nimport * as foo from \"./foo\"; \nconsole.log( foo.bar ); // bar\nconsole.log( foo.baz ); // baz\n```", "```js\nexport default function foo(){ return \"foo\"; }\n```", "```js\nimport foo from \"./foo\";\nconsole.log( foo() ); // foo\n```", "```js\nexport let bar = \"bar\";\nexport function setBar( val ) {\n   bar = val;\n};\n```", "```js\nimport { bar, setBar } from \"./foo\";\nconsole.log( bar ); // bar\nsetBar( \"baz\" );\nconsole.log( bar ); // baz\nbar = \"qux\"; // TypeError\n```", "```js\nSystem.import( \"./foo\" ).then( foo => {\n  console.log( foo );\n})\n.catch( err => {\n  console.error( err );\n});\n```", "```js\nPromise.all([ \"foo\", \"bar\", \"baz\" ]\n    .map( mod => System.import( mod ) )\n  )\n  .then(([ foo, bar, baz ]) => {\n     console.log( foo, bar, baz );\n  });\n```", "```js\nnpm install cjsc -g\n\n```", "```js\n// module logic\nmodule.exports = \"bar\";\n```", "```js\n// module logic\nmodule.exports = {\n  bar: require( \"./bar\" )};\n```", "```js\nvar foo = require( \"./foo\" );\ndocument.writeln( foo.bar ); // bar\n```", "```js\ncjsc main.js -o bundle.js\n```", "```js\nCompiled Code\n_require.def( \"main.js\", function( _require, exports, module, global )\n{\n  var foo = _require( \"foo.js\" );\n  console.log( foo.bar ); // bar\n  console.log( foo.baz ); // baz\n    return module;\n  });\n```", "```js\n<script src=\"img/bundle.js\"></script>\n```", "```js\nvar expect = require( \"chai\" ).expect;\ndescribe( \"Foo module\", function(){\n  it( \"should bypass the export of bar\", function(){\n      var foo = require( \"./foo\" );\n      expect( foo ).to.have.property( \"bar\" );\n      expect( foo.bar ).to.eql( \"bar\" );\n  });\n});\n```", "```js\ncjsc main-module.js -o build.js  --source-map=build/*.map \\\n --source-map-root=../src -M --banner=\"/*! pkg v.0.0.1 */\"\n```", "```js\nnpm install -g grunt-cli\n\n```", "```js\n{\n  \"name\": \"project-name\",\n  \"version\": \"0.0.1\"\n}\n```", "```js\nnpm install --save-dev grunt\nnpm install --save-dev grunt-cjsc\n\n```", "```js\nmodule.exports = function( grunt ) {\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON( \"package.json\" ),\n    cjsc: {\n      // A target to generate uncompressed code with sources maps\n      debug: {\n        options: {\n          sourceMap: \"js/*.map\",\n          sourceMapRoot: \"src/\",\n          minify: false\n        },\n        files: { \"js/bundle.js\": \"js/src/main.js\" }\n      },\n      // A target to build project for production\n      build: {\n        options: {\n          minify: true,\n          banner: \"/*! <%= pkg.name %> - v<%= pkg.version %> - \" +\n          \"<%= grunt.template.today(\\\"yyyy-mm-dd\\\") %> */\"\n        },\n        files: { \"js/bundle.js\": \"js/src/main.js\" }\n      }\n    }\n  });\n\n  // Load the plugin that provides the task.\n  grunt.loadNpmTasks( \"grunt-cjsc\" );\n\n  // Make it default task\n  grunt.registerTask( \"default\", [ \"cjsc:build\" ] );\n\n};\n```", "```js\ngrunt cjsc:debug\n\n```", "```js\n{\n  \"jquery\": {\n    \"path\": \"./vendors/jQuery/jquery.js\"\n  },\n  \"underscore\": {\n    \"globalProperty\": \"_\"\n  },\n  \"foo\": {\n    \"path\": \"./vendors/3rdpartyLib/not-a-module.js\",\n    \"exports\": [ \"notAModule\" ],\n    \"imports\": [ \"jquery\" ]\n  }\n}\n```", "```js\ncjsc main.js -o bundle.js --config=cjsc-conig.json\n```", "```js\n grunt.initConfig({\ncjsc main.js -o bundle.js --config=cjsc-conig.json\nGrunt configuration\n grunt.initConfig({\n    cjsc: {\n      build: {\n        options: {\n          minify: true,\n          config: require( \"fs\" ).readFileSync( \"./cjsc-conig.json\" )\n        }\n      },\n        files: { \"js/bundle.js\": \"js/src/main.js\" }\n      }\n  });\n```", "```js\nexport let bar = \"bar\";\nexport let baz = \"baz\";\n```", "```js\nimport { bar, baz } from \"./foo\";\ndocument.writeln( bar ); // bar\ndocument.writeln( baz ); // baz\n```", "```js\nbabel --modules common *.es6 --out-dir .\n\n```", "```js\ncjsc main.js -o bundle.js -M\n\n```"]