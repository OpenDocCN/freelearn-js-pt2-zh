["```js\nvar xhr = new XMLHttpRequest();\n```", "```js\n    void Open(\n\n      DOMString method, \n      DOMString URL, \n      optional boolean async, \n      optional DOMString user?, \n      optional DOMString password\n\n    );\n    ```", "```js\n    var xhr = new XMLHttpRequest();\n    xhr.abort();\n    ```", "```js\n    var xhr= new XMLHttpRequest();\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    ```", "```js\n    var xhr= new XMLHttpRequest();\n    function callback(){\n      var arrHeaders = xhr.getAllResponseHeaders();\n      //or\n      var contentType = xhr.getResponseHeader('Content-Type');\n    }\n    ```", "```js\nvar xhr= new XMLHttpRequest();\nxhr.onreadystatechange = callback;\n\nfunction callback(){\n  //do something\n}\n```", "```js\nvar xhr = new XMLHttpRequest();\nxhr.timeout = 5000; \nxhr.ontimeout = timeouthandler;\nfunction timeouthandler(){\n  //do something\n}\n```", "```js\n     var xhr=new XMLHttpRequest();\n     xhr.readystate;\n    ```", "```js\n    var xhr= new XMLHttpRequest();\n    xhr.response;\n    //or \n    xhr.responseText;\n    ```", "```js\n    var xhr= new XMLHttpRequest();\n    xhr.status;\n    or \n    xhr.statusText;\n    ```", "```js\n@model WebApplication.ViewModels.Book.BookViewModel\n@{\n  ViewData[\"Title\"] = \"View\";\n}\n<script>\n  var xhr = null;\n  function submit() {\n    xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", '/Book/SaveData');\n    var name = document.getElementById(\"Name\").value;\n    var description = document.getElementById(\"Description\").value;\n    var data =\n    {\n      \"Name\": name,\n      \"Description\": description\n    };\n    xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n    xhr.onreadystatechange = callback;\n    xhr.send(JSON.stringify(data));\n  }\n\n  function callback() {\n    if (xhr.readyState == 4) {\n      var msg = xhr.responseText;r \n      document.getElementById(\"msg\").innerHTML = msg;\n      document.getElementById(\"msgDiv\").style.display = 'block';\n    }\n  }\n</script>\n\n<form asp-action=\"SaveData\" id=\"myForm\">\n  <p> </p>\n  <div id=\"msgDiv\" style=\"display:none\" class=\"alert alert-success\">\n    <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>\n    <strong>Success!</strong> <label id=\"msg\"></label>\n  </div>\n  <div id=\"pageDiv\" class=\"container\">\n    <br />\n    <div id=\"mainDiv\" class=\"form-horizontal\">\n      <div class=\"form-group\">\n        <label asp-for=\"Name\" class=\"col-md-2 control-label\"></label>\n        <div class=\"col-md-10\">\n          <input asp-for=\"Name\" class=\"form-control\" />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label asp-for=\"Description\"  class=\"col-md-2 control-label\"></label>\n        <div class=\"col-md-10\">\n          <textarea asp-for=\"Description\" class=\"form-control\" ></textarea>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-md-offset-2 col-md-10\">\n        <button id=\"btnSubmit\" onclick=\"submit()\" type=\"submit\" class=\"btn btn-primary\"> Submit</button>\n      </div>\n    </div>\n  </div>\n</form>\n```", "```js\npublic IActionResult SaveData([FromBody]BookViewModel bookViewModel)\n{\n  return Content(\"Data saved successfully\"); \n}\n```", "```js\ndocument.getElementById and then made a JSON string to pass the form data in a JSON format.\n```", "```js\n<script src=http://form-serialize.googlecode.com/svn/trunk/serialize-0.2.min.js />\n```", "```js\nfunction submit() {\n  xhr = new XMLHttpRequest();\n  xhr.open('POST', '/Book/SaveData');\n  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n  var html = serialize(document.forms[0]);\n  xhr.onreadystatechange = callback;\n  xhr.send(html);\n}\n```", "```js\npublic IActionResult SaveData(BookViewModel bookViewModel)\n{\n  return Content(\"Data saved successfully\"); \n}\n```", "```js\n@model WebApplication.ViewModels.Book.BookViewModel\n@{\n  ViewData[\"Title\"] = \"Books\";\n}\n<script>\n  var xhr = null;\n  function loadData() {\n    xhr = new XMLHttpRequest();\n    xhr.open('GET', '/Book/Books',true);\n    xhr.onreadystatechange = callback;\n    xhr.send();\n  }\n  function callback() {\n    if (xhr.readyState == 4) {\n      var msg = xhr.responseText;\n      document.getElementById(\"booksDiv\").innerHTML = msg;\n    }\n  }\n</script>\n<div class=\"container\">  \n  <button id=\"btnLoad\" onclick=\"loadData()\" type=\"submit\" class=\"btn btn-primary\">Load</button>\n  <hr />\n  <div id=\"booksDiv\">\n  </div>\n</div>\n```", "```js\n@{ \n  Layout = null;\n}\n@model IEnumerable<WebApplication.ViewModels.Book.BookViewModel>\n<script src=\"img/jquery-1.12.0.min.js\"></script>\n<script>\n  $(document).ready(function () {\n    $('table').on('click','tr', null, function() {\n      $(this).css('background-color', 'aliceblue');\n    });\n  });\n</script>\n\n<p>\n  <a asp-action=\"Create\">Create New</a>\n</p>\n<table class=\"table\">\n  <tr>\n    <th>\n      @Html.DisplayNameFor(model => model.Description)\n    </th>\n    <th>\n      @Html.DisplayNameFor(model => model.Name)\n    </th>\n    <th></th>\n  </tr>\n\n@foreach (var item in Model) {\n  <tr>\n    <td>\n      @Html.DisplayFor(modelItem => item.Description)\n    </td>\n    <td>\n      @Html.DisplayFor(modelItem => item.Name)\n    </td>\n    <td>\n      <a asp-action=\"Edit\" asp-route-id=\"@item.Id\">Edit</a> |\n      <a asp-action=\"Details\" asp-route-id=\"@item.Id\">Details</a> |\n      <a asp-action=\"Delete\" asp-route-id=\"@item.Id\">Delete</a>\n    </td>\n  </tr>\n}\n</table>\n```", "```js\nBooks controller that contains the Books action method that returns a list of books:\n```", "```js\npublic class BookController : Controller\n{\n  // GET: /<controller>/\n  public IActionResult Index()\n  {\n    return View();\n  }\n\n  public IActionResult Books()\n  {\n    List<BookViewModel> books = new List<BookViewModel>();\n    books.Add(new BookViewModel { Id = 1, Name = \"JavaScript for .Net Developers\", Description = \"Book for .NET Developers\" });\n    books.Add(new BookViewModel { Id = 1, Name = \"Beginning ASP.NET Core 1.0\", Description = \"Book for beginners to learn ASP.NET Core 1.0\" });\n    books.Add(new BookViewModel { Id = 1, Name = \"Mastering Design Patterns\", Description = \"All about Design Patterns\" });\n    return View(books);\n  }\n\n  public IActionResult Create()\n  {\n    return View();\n  }\n}\n```", "```js\n$.([URL],[options]);\n$.( [options]);\n```", "```js\n<script src=\"img/jquery-1.12.0.min.js\"></script>\n<script>\n  $(document).ready(function () {\n    $.ajax('/Book/Books', {\n      success: function (data) {\n        $('#booksDiv').html(data);\n      },\n      error: function (data) {\n        $('#booksDiv').html(data);\n      }\n    });\n  });\n</script>\n```", "```js\n$.ajaxPrefilter(function(options, originalOptions, jqXHR){\n  //Modify options, originalOptions and store jqXHR\n}\n$.ajaxPrefilter('dataType', function(options, originalOptions, jqXHR){\n  //Modify options, originalOptions and store jqXHR\n}\n```", "```js\n<script>\n  $(document).ready(function () {\n\n    $.ajaxPrefilter(function (options, originalOptions, jqXHR) {\n      options.url += ((options.url.indexOf('?') < 0) ? '?' : '&')+ 'fromAjax=true';\n    });\n\n    $.ajax('/Book/Books', {\n      success: function (data) {\n        $('#booksDiv').html(data);\n      },\n      error: function (data) {\n        $('#booksDiv').html(data);\n      }\n    });\n  });\n</script>\n```", "```js\npublic IActionResult Books(bool fromAjax)\n{\n  if (fromAjax)\n  {\n    List<BookViewModel> books = new List<BookViewModel>();\n    books.Add(new BookViewModel { Id = 1, Name = \"JavaScript for .Net Developers\", Description = \"Book for .NET Developers\" });\n    books.Add(new BookViewModel { Id = 1, Name = \"Beginning ASP.NET Core 1.0\", Description = \"Book for beginners to learn ASP.NET Core 1.0\" });\n    books.Add(new BookViewModel { Id = 1, Name = \"Mastering Design Patterns\", Description = \"All about Design Patterns\" });\n    return View(books);\n  }\n  return Content(\"Request to this method is only allowed from Ajax\");\n}\n```", "```js\n$.ajaxSetup({name:value, name:value, name:value, …});\n```", "```js\n<script>\n  $(document).ready(function () {\n\n    $.ajaxSetup({ url: \"/Book/Books\"});\n\n    $.ajax({\n      success: function (data) {\n        $('#booksDiv').html(data);\n      },\n      error: function (data) {\n        $('#booksDiv').html(data);\n      }\n    });\n  });\n</script>\n```", "```js\n$.get('URL',data, callback, type);\n```", "```js\n<script>\n  $(document).ready(function () {\n\n    $.get('/Book/Books', {filter : \"net\"}, function (data) {\n        $('#booksDiv').html(data);\n      }\n    );\n\n  });\n</script>\n```", "```js\n$.getJSON('URL', {name:value, name:value, name:value,…});\n```", "```js\n<script>\n  $(document).ready(function () {\n\n    $.getJSON('/Book/Books', function (data) {\n      $.each(data, function (index, field) {\n        $('#booksDiv').append(field.Name + \"<br/> \");\n      });\n    }\n  );\n</script>\n```", "```js\npublic IActionResult Books()\n{\n  List<BookViewModel> books = new List<BookViewModel>();\n  books.Add(new BookViewModel { Id = 1, Name = \"JavaScript for .Net Developers\", Description = \"Book for .NET Developers\" }\n  books.Add(new BookViewModel { Id = 1, Name = \"Beginning ASP.NET Core 1.0\", Description = \"Book for beginners to learn ASP.NET Core 1.0\" });\n  books.Add(new BookViewModel { Id = 1, Name = \"Mastering Design Patterns\", Description = \"All about Design Patterns\" });\n  return Json(books);\n\n}\n```", "```js\n$.getScript(url, callback);\n```", "```js\n<script>\n  $(document).ready(function () {\n\n  $.getScript(\"/wwwroot/js/custom.js\");\n</script>\n```", "```js\n$.post(url, data, callback, type);\n```", "```js\n<script>\n\n  function submit() {\n    $.post('/Book/SaveData', $(\"form\").serialize(), function (data) {\n      alert(\"form submitted\");\n\n    });\n  }\n</script>\n```", "```js\nBook controller's SaveData action method that takes the object and returns the response as a string:\n```", "```js\npublic IActionResult SaveData(BookViewModel bookViewModel)\n{\n  //call some service to save data \n  return Content(\"Data saved successfully\")\n}\n```", "```js\n<script>\n  function submit() {\n    $.post('/Book/SaveData', {Name:\"Design Patterns\", Description: \"All about design patterns\"}, function (data) {\n    },'json' );\n  }\n</script>\n```", "```js\n@model WebApplication.ViewModels.Book.BookViewModel\n@{\n  ViewData[\"Title\"] = \"Books\";\n}\n<script src=\"img/jquery-1.12.0.min.js\"></script>\n<script>\n\n  $(document).ready(function () {\n\n    $(document).ajaxComplete(function (e) {\n      alert(\"Ajax request completed\");\n    }).ajaxSend(function () {\n      alert(\"Ajax request sending\");\n    }).ajaxSend(function () {\n      alert(\"Ajax request sent to server\");\n    }).ajaxStop(function () {\n      alert(\"Ajax request stopped\");\n    }).ajaxError(function () {\n      alert(\"Some error occurred in Ajax request\");\n    }).ajaxSuccess(function () {\n      alert(\"Ajax request was successful\");\n    })\n    $('#btnLoad').click(function(){\n      $.ajax('/Book/Books', {\n        success: function (data) {\n          $('#booksDiv').html(data);\n        },\n        error: function (data) {\n          $('#booksDiv').html(data);\n        }\n      });\n\n    });\n\n  });\n</script>\n<div class=\"container\">\n  <br />\n  <h4>Books View</h4>\n  <h5>Click on the button to load all the books</h5>\n  <button id=\"btnLoad\" type=\"submit\" class=\"btn btn-primary\">Load</button>\n  <hr />\n  <div id=\"booksDiv\">\n  </div>\n</div>\n```", "```js\ngeo service and specifies a callback parameter, which points to the jsonCallback function defined in the script. This script will be loaded when the page loads and executes the src URL, which finally calls the jsonCallback method and passes the response.\nGET request that uses the Bing API to get the location information based on the latitude and longitude values provided:\n```", "```js\n<script>\n  var scrpt = document.createElement('script');\n\n  scrpt.setAttribute('src',' http://dev.virtualearth.net/REST/v1/Locations/latitudeNo,longitudeNo?o=json&key=BingMapsKey);\n  document.body.appendChild(scrpt);\n  function jsonCallback(data) {\n    alert(\"Cross Origin request got made\");\n  }\n</script>\n```", "```js\n$.ajax({\n  url: serviceURL,\n  type: \"GET\",\n  dataType: \"jsonp\",\n  method:\"GetResult\",\n  crossDomain: true,\n  error: function () {\n    alert(\"list failed!\");\n  },\n  success: function (data) {\n    alert(data);\n  }\n});\n```", "```js\n\"Microsoft.AspNet.Cors\": \"6.0.0-rc1-final\"\n```", "```js\npublic void ConfigureServices(IServiceCollection services\n{\n  services.AddCors();\n}\n```", "```js\npublic void ConfigureServices(IServiceCollection services)\n{     \n  services.AddCors(options => {\n    options.AddPolicy(\"AllowAllOrigins\", builder => builder.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader());\n  });\n\n}\n```", "```js\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory\n{\n\n  app.UseCors(\"AllowAllOrigin\");\n}\n```", "```js\npublic void ConfigureServices(IServiceCollection services)\n{\n  services.AddCors(options => {\n    options.AddPolicy(\"AllowAllOrigins\", builder => builder.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader());\n      options.AddPolicy(\"AllowOnlyGet\", builder => builder.WithMethods(\"GET\").AllowAnyHeader().AllowAnyOrigin());\n  });\n```", "```js\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\n{\n  app.UseCors(policyBuilder => policyBuilder.WithHeaders(\"accept,content-type\").AllowAnyOrigin().WithMethods(\"GET, POST\"));\n}\n```", "```js\n    [EnableCors(\"AllowAllOrigins\")]\n    public class BookController : Controller\n    {\n      //to do\n    }\n    ```", "```js\n    [EnableCors(\"AllowAllOrigins\")]\n    public IActionResult GetAllRecords(\n    {\n      //Call some service to get records\n      return View();\n    }\n    ```", "```js\n    public void ConfigureServices(IServiceCollection services)\n    {\n      services.AddCors(options => {\n        options.AddPolicy(\"AllowAllOrigins\", builder => builder.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader());\n        options.AddPolicy(\"AllowOnlyGet\", builder => builder.WithMethods(\"GET\").AllowAnyHeader().AllowAnyOrigin());\n      });\n\n      services.Configure<MvcOptions>(options =>\n      {\n        options.Filters.Add(new CorsAuthorizationFilterFactory(\"AllowOnlyGet\"));\n      });\n    }\n    ```", "```js\nAllowAllOrigins and AllowOnlyGet, and through CorsAuthorizationFilterFactory, we can pass the AllowOnlyGet policy as the policy name and make it global.\n```", "```js\n[OperationContract]\n[WebGet(ResponseFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Wrapped, UriTemplate = \"json/{productCode}\")]\nProduct GetProduct(string productCode);\n```", "```js\n[OperationContract]\n  [WebInvoke(Method =\"GET\",  ResponseFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Wrapped, UriTemplate = \"products/{productCode}\")]\nProduct GetProduct(string productCode);\n```", "```js\n[OperationContract]\n[WebInvoke(Method = \"POST\", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Wrapped, UriTemplate = \"products /SaveProduct\")]\nbool SaveProduct(Product product);\n```", "```js\nfunction SaveProduct(){\n  var product = {\n    \"ProductName\":\"Product1\",\n    \"ProductDescription\":\"This is Product A\"\n  };\n\n  $.ajax({\n    type:\"POST\",\n    url:\"http://localhost/products/SaveProduct\",\n    data:JSON.stringify(product),\n    contentType: \"application/json\",\n    dataType:\"json\",\n    processData:true,\n    success: function(data, status, xhr){\n      alert(data);\n\n    },\n    error: function(error){\n      alert(error);\n\n    }\n\n  });\n}\n```", "```js\nfunction SaveProduct(){\n  var product = {\n    \"ProductName\":\"Product1\",\n    \"ProductDescription\":\"This is Product A\"\n  };\n\n  $.ajax({\n    type:\"POST\",\n    url:\" http://localhost:4958/ProductService.svc/products/SaveProduct?callback=?\",\n    data:JSON.stringify(product),\n    contentType: \"application/json\",\n    dataType:\"jsonp\",\n    crossDomain: true, \n    processData:true,\n    success: function(data, status, xhr){\n      alert(data);\n\n    },\n    error: function(error){\n      alert(error);\n\n    }\n\n  });\n}\n```", "```js\n(function () {\n  var productCode= \"Prod-001\";\n  var webServiceURL = \"http://localhost:4958/ProductService.svc/products/GetProduct/\"+productCode;\n  $.ajax({\n    type: \"GET\",\n    url: webServiceURL,\n    dataType: \"json\",\n    processData: false,\n    success: function (data) {\n      alert(data);\n    },\n    error: function (error) {\n      alert(error);\n    }\n  });\n});\n```", "```js\n(function () {\n  var productCode= \"Prod-001\";\n  var webServiceURL = \"http://localhost:4958/ProductService.svc/products/GetProduct/\"+productCode;\n  $.ajax({\n    type: \"GET\",\n    url: webServiceURL+\"?callback=?\",\n    dataType: \"jsonp\",\n    crossDomain:true,   \n    processData: false,\n    success: function (data) {\n      alert(data);\n    },\n    error: function (error) {\n      alert(error);\n    }\n  });\n});\n```", "```js\nfunction callbackFn(data){\n\n}\n\n(function () {\n  var productCode= \"Prod-001\";\n  var webServiceURL = \"http://localhost:4958/ProductService.svc/products/GetProduct/\"+productCode;\n  $.ajax({\n    type: \"GET\",\n    url: webServiceURL,\n    dataType: \"jsonp\",\n    crossDomain:true,   \n    processData: false,\n    jsonpCallback: callbackFn,\n    success: function (data) {\n      alert(data);\n    },\n    error: function (error) {\n      alert(error);\n    }\n  });\n});\n```"]