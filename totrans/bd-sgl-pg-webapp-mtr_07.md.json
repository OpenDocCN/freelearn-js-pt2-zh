["```js\nMeteor.publish(\"examplePublication\", function () {\n  // the current loggedin user id can be accessed via\n  this.userId;\n}\n```", "```js\n    $ meteor add accounts-ui accounts-password\n\n    ```", "```js\n    Accounts.config({\n        forbidClientAccountCreation: true\n    });\n    ```", "```js\n{{#if currentUser}}\n    <a href=\"/create-post\" class=\"createNewPost\">Create new post</a>\n{{/if}}\n```", "```js\n<small>\n    Posted {{formatTime timeCreated \"fromNow\"}} by {{author}}\n\n    {{#if currentUser}}\n        | <a href=\"/edit-post/{{slug}}\">Edit post</a>\n    {{/if}}\n</small>\n```", "```js\n<h1>My Meteor Single Page App</h1>\n<ul>\n    <li>\n        <a href=\"/\">Home</a>\n    </li>\n    <li>\n        <a href=\"/about\">About</a>\n    </li>\n\n</ul>\n\n{{> loginButtons}}\n\n```", "```js\n<template name=\"editPost\">\n  <div class=\"editPost\">\n     <form>\n        <label>\n          Title\n          <input type=\"text\" name=\"title\" placeholder=\"Awesome title\" value=\"{{title}}\">\n        </label>\n\n        <label>\n          Description\n          <textarea name=\"description\" placeholder=\"Short description displayed in posts list\" rows=\"3\">{{description}}</textarea>\n        </label>\n\n        <label>\n          Content\n          <textarea name=\"text\" rows=\"10\" placeholder=\"Brilliant content\">{{text}}</textarea>\n        </label>\n\n        <button type=\"submit\" class=\"save\">Save Post</button>\n    </form>\n  </div>\n</template>\n```", "```js\nif(Meteor.users.find().count() === 0) {\n\n    console.log('Created Admin user');\n\n    Accounts.createUser({\n        username: 'johndoe',\n        email: 'johndoe@example.com',\n        password: '1234',\n        profile: {\n            name: 'John Doe'\n        }\n    });\n}\n```", "```js\nvar userId = Accounts.createUser({\n  username: 'johndoe',\n  email: 'johndoe@example.com',\n  password: '1234',\n  profile: {\n    name: 'John Doe'\n  }\n});\n// add the roles to our user\nMeteor.users.update(userId, {$set: {\n  roles: {admin: true},\n}})\n```", "```js\n    Meteor.publish(\"userRoles\", function () {\n     if (this.userId) {\n      return Meteor.users.find({_id: this.userId}, {fields: {roles: 1}});\n     } else {\n      this.ready();\n     }\n    });\n    ```", "```js\n    if(Meteor.isClient){\n      Meteor.subscribe(\"userRoles\");\n    }\n    ```", "```js\nMeteor.users.update(ownUserId, {$set: {profiles:{myProperty: 'xyz'}}})\n\n```", "```js\nMeteor.users.update(Meteor.user()._id, {$set:{ roles: {admin: false}}});\n\n```", "```js\nthis.route('Create Post', {\n    path: '/create-post',\n    template: 'editPost'\n});\n```", "```js\n    PostController = RouteController.extend({\n        waitOn: function() {\n            return Meteor.subscribe('single-post', this.params.slug);\n        },\n\n        data: function() {\n            return Posts.findOne({slug: this.params.slug});\n        }\n    });\n    ```", "```js\n    this.route('Post', {\n        path: '/posts/:slug',\n        template: 'post',\n        controller: 'PostController'\n    });\n    ```", "```js\n    this.route('Edit Post', {\n        path: '/edit-post/:slug',\n        template: 'editPost',\n        controller: 'PostController'\n    });\n    ```", "```js\nroutes.js file:\n```", "```js\nvar requiresLogin = function(){\n    if (!Meteor.user() ||\n        !Meteor.user().roles ||\n        !Meteor.user().roles.admin) {\n        this.render('notFound');\n\n    } else {\n        this.next();\n    }\n}; \n\nRouter.onBeforeAction(requiresLogin, {only: ['Create Post','Edit Post']});\n```"]