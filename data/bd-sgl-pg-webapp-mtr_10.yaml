- en: Chapter 10. Deploying Our App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章 部署我们的应用程序
- en: Our app is now ready to be deployed. In this chapter, we will see how we can
    deploy our app on different servers to make it public and show the world what
    we built.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序现在已准备好部署。在本章中，我们将了解如何将我们的应用程序部署到不同的服务器上，使其公开并向世界展示我们所构建的内容。
- en: Meteor makes it easy to deploy applications on its own server infrastructure.
    It's free and quick to do, but probably not the right place for a production environment.
    Therefore, we will take a look at manual deployment as well as some great tools
    built to deploy on any Node.js server.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor 使得在自身的服务器基础设施上部署应用程序变得非常容易。操作免费且迅速，但可能不适合生产环境。因此，我们将探讨手动部署以及一些为在任何 Node.js
    服务器上部署而构建的优秀工具。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Registering a Meteor developer account
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册 Meteor 开发者账户
- en: Deploying on Meteor's own server infrastructure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Meteor 的自有服务器基础设施上部署
- en: Bundling and deploying Meteor manually
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动打包和部署 Meteor
- en: Deploying using Demeteorizer
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Demeteorizer 部署
- en: Deploying using Meteor Up
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Meteor Up 部署
- en: Note
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to have the full app we've built in this book to deploy, download
    the code from the book's web page at [https://www.packtpub.com/books/content/support/17713](https://www.packtpub.com/books/content/support/17713)
    or from the GitHub repository at [https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10](https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10).
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想要部署本书中构建的完整应用程序，可以从以下网址下载代码：[https://www.packtpub.com/books/content/support/17713](https://www.packtpub.com/books/content/support/17713)
    或从 GitHub 仓库：[https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10](https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10)。
- en: This code won't have the part where dummy posts are created, so you can have
    a clean blog to start with on your own server.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码将不包括创建虚拟帖子的部分，因此你可以在自己的服务器上启动一个干净的博客。
- en: Deploying on meteor.com
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 meteor.com 上部署
- en: 'Meteor provides its own hosting environment, where everybody can deploy apps
    with a single command, for free. In order to deploy apps, Meteor creates a developer
    account for us so that we can manage and deploy our apps later. To start, let''s
    perform the following steps to deploy our app on [meteor.com](http://meteor.com):'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor 提供了自己的托管环境，其中每个人都可以用一个命令免费部署应用程序。为了部署应用程序，Meteor 会为我们创建一个开发者账户，以便我们稍后管理和部署应用程序。首先，让我们执行以下步骤，在
    [meteor.com](http://meteor.com) 上部署我们的应用程序：
- en: 'Deploying on a subdomain of meteor.com is as simple as running the following
    command in the terminal from our app''s folder:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 meteor.com 的子域上部署就像在我们的应用程序文件夹中的终端运行以下命令那么简单：
- en: '[PRE0]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We can freely choose the subdomain we want to deploy on. If `myCoolNewBlog.meteor.com`
    is already taken, Meteor will ask us to log in to the owner's account to overwrite
    the currently deployed app, or we will have to choose another name.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以自由选择要部署的子域。如果 `myCoolNewBlog.meteor.com` 已经被占用，Meteor 会要求我们登录所有者的账户以覆盖当前部署的应用程序，或者我们必须选择另一个名字。
- en: If the domain name is free, Meteor will ask us to provide an e-mail address
    so that it can create a developer account for us. After entering the e-mail address,
    we will receive an e-mail with a link to set up our Meteor Developer account,
    as shown in the following screenshot:![Deploying on meteor.com](img/00028.jpeg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果域名可用，Meteor 会要求我们提供一个电子邮件地址，以便它为我们创建一个开发者账户。输入电子邮件地址后，我们将收到一封电子邮件，其中有一个链接设置我们的
    Meteor 开发者账户，如下面的屏幕截图所示：![在 meteor.com 上部署](img/00028.jpeg)
- en: To create our account, we need to follow the link given by Meteor so that we
    can fully set up our account by adding a username and a password, as shown in
    the next screenshot:![Deploying on meteor.com](img/00029.jpeg)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了创建我们的账户，我们需要遵循 Meteor 给出的链接，以便我们通过添加用户名和密码完全设置我们的账户，如下面的屏幕截图所示：![在 meteor.com
    上部署](img/00029.jpeg)
- en: After we have done that, we get access to our developer account's page, where
    we can add e-mail addresses, check our last login, and authorize other Meteor
    developers to log in to our apps (though we have to add the `accounts-meteor-developer`
    package first).
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成这些操作后，我们将访问我们的开发者账户页面，在那里我们可以添加电子邮件地址，检查我们的最后登录，以及授权其他 Meteor 开发者登录到我们的应用程序（尽管我们首先必须添加
    `accounts-meteor-developer` 包）。
- en: 'Now, to finally deploy our app, we need to log in with our Meteor Developer
    account in the terminal by using `$ meteor login`, entering our credentials, and
    running the `deploy` command again:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，要在终端中使用 `$ meteor login` 登录我们的 Meteor 开发者账户，输入我们的凭据，并再次运行 `deploy` 命令来最终部署我们的应用程序：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using the `$ meteor authorized –add <username>` command, we can allow other
    Meteor developers to deploy to our app's subdomain, as shown in the following
    screenshot:![Deploying on meteor.com](img/00030.jpeg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`$ meteor authorized –add <username>`命令，我们可以允许其他Meteor开发者将应用程序部署到我们应用程序的子域，如下所示屏幕截图：![在meteor.com上部署](img/00030.jpeg)
- en: If we want to update our deployed app, we can simply run `$ meteor deploy` from
    inside our app's folder. Meteor will ask us for our credentials, and we can then
    deploy our app.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想更新我们部署的应用程序，我们只需在我们应用程序的文件夹内运行`$ meteor deploy`。 Meteor将要求我们提供凭据，然后我们可以部署我们的应用程序。
- en: If we're on a friend's computer and want to use our Meteor account, we can do
    so using `$ meteor login`. Meteor will keep us logged in and everybody can redeploy
    any of our apps. We need to make sure we use `$ meteor logout` when we're finished.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们正在朋友的计算机上，并且想使用我们的Meteor账户，可以使用`$ meteor login`。 Meteor将保持我们登录状态，并且每个人都可以重新部署我们的任何应用程序。
    我们需要确保在完成时使用`$ meteor logout`。
- en: Deploying on meteor.com using a domain name
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用域名在meteor.com上部署
- en: We can also host our app on [meteor.com](http://meteor.com), but can define
    our own domain name.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以将应用程序托管在[meteor.com](http://meteor.com)，但可以定义我们自己的域名。
- en: 'To do this, we simply deploy using our domain name, as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要这样做，我们只需使用我们的域名进行部署，如下所示：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will host the app on meteor.com, but with no direct URL such as [myapp.meteor.com](http://myapp.meteor.com).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使应用程序托管在meteor.com上，但没有类似于[myapp.meteor.com](http://myapp.meteor.com)的直接URL。
- en: To point our domain to the app on the Meteor servers, we need to change the
    **A record** of our domain to the IP address of `origin.meteor.com` (which is
    `107.22.210.133` at the time of writing this book), or the `CNAME` record to `origin.meteor.com`.
    You can do this at the provider where you registered your domain under the DNS
    configuration.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要将我们的域名指向Meteor服务器上的应用程序，我们需要将域名的**A记录**更改为`origin.meteor.com`的IP地址（在撰写本书时为`107.22.210.133`），或**CNAME记录**更改为`origin.meteor.com`。
    您可以在注册域名的DNS配置中提供商处进行此操作。
- en: Meteor will then get a request from our domain and redirect internally to the
    server where our app is located.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor然后从我们的域名获取请求并在内部将其重定向到托管我们应用程序的服务器。
- en: Backup and restore databases hosted on meteor.com
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备份并恢复托管在meteor.com上的数据库
- en: 'If you ever need to back up your database or move it to another server, you
    can get temporary Mongo database credentials for the deployed database using the
    following command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要备份数据库或将它移动到另一个服务器，您可以使用以下命令获取部署数据库的临时Mongo数据库凭据：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will get something like the following credentials:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这将获取类似于以下凭据：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can then use the credentials from the preceding output to back up your
    database using `mongodump`:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以使用前面输出的凭据使用`mongodump`备份您的数据库：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will create a folder named `dump/yourapp_meteor_com` where you are and
    put the dump files of the database inside.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您所在位置创建一个名为`dump/yourapp_meteor_com`的文件夹，并将数据库的转储文件放在里面。
- en: 'To restore it to another server, use `mongorestore`, with the last argument
    being the folder where you put the database dump:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要恢复到另一个服务器，请使用`mongorestore`，最后一个参数是你放置数据库转储的文件夹：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you simply want to put the data into your local Meteor app''s database,
    start the Meteor server using `$ meteor` and run the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只想将数据放入您本地的Meteor应用程序数据库中，请使用`$ meteor`启动Meteor服务器并运行以下命令：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Deploying on other servers
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在其他服务器上部署
- en: Meteor's free hosting is great, but when it comes to using an app in production,
    we want to be in control of the server we're using.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor的免费托管很棒，但当涉及到在生产中使用应用程序时，我们希望能够控制我们正在使用的服务器。
- en: Meteor allows us to create a bundle of our application so that we can deploy
    it on any Node.js server. The only downside to this is that we need to install
    certain dependencies ourselves. Additionally, there are two packages out there
    that make deploying apps almost as simple as Meteor itself, though their configuration
    is still needed.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor允许我们将应用程序捆绑在一起，这样我们就可以在任何Node.js服务器上部署它。唯一的缺点是我们需要自己安装某些依赖项。此外，还有两个使部署应用程序几乎像Meteor本身一样简单的包，尽管它们的配置仍然需要。
- en: Bundling our app
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 捆绑我们的应用程序
- en: 'In order to deploy our app on our own server, we need to have a Linux server
    with the latest version of Node.js and NPM installed. The server should have the
    same platform as our local machine on which we will create the bundle. If you
    want to deploy your app on another platform, take a look at the next section.
    Now let''s build the app by performing the following steps:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在我们的服务器上部署应用，我们需要一个安装了最新版本的Node.js和NPM的Linux服务器。服务器应该和我们将要创建捆绑包的本地机器是同一平台。如果你想在另一个平台上部署你的应用，查看下一节。现在让我们通过以下步骤构建应用：
- en: 'If our server fits the aforementioned requirements, we can go to our app''s
    folder on our local machine and run the following command:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们的服务器符合上述要求，我们可以在本地机器上的应用文件夹中运行以下命令：
- en: '[PRE8]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This will create `myAppBuildFolder` with a `*.tar.gz` file inside. We can then
    upload this file to our server and extract it under `~/Sites/myApp` for example.
    Then we go to the extracted folder and run the following commands:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将创建一个名为`myAppBuildFolder`的文件夹，里面有一个`*.tar.gz`文件。然后我们可以将这个文件上传到我们的服务器，并在例如`~/Sites/myApp`下提取它。然后我们进入提取的文件夹并运行以下命令：
- en: '[PRE9]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This will install all the NPM dependencies. After they''re installed, we set
    the necessary environment variables:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将安装所有的NPM依赖。安装完成后，我们设置必要的环境变量：
- en: '[PRE10]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `export` commands will set the `MONGO_URL`, `ROOT_URL`, and `MAIL_URL` environment
    variables.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`export`命令将设置`MONGO_URL`、`ROOT_URL`和`MAIL_URL`环境变量。'
- en: As this manual deployment doesn't come with preinstalled MongoDB, we need to
    either install it on our machine or use a hosted service such as Compose ([http://mongohq.com](http://mongohq.com)).
    If we rather want to install MongoDB on our server ourselves, we can follow the
    guide at [http://docs.mongodb.org/manual/installation](http://docs.mongodb.org/manual/installation).
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于这种手动部署没有预装MongoDB，我们需要在我们的机器上安装它，或者使用像Compose这样的托管服务（[http://mongohq.com](http://mongohq.com)）。如果我们更愿意自己在服务器上安装MongoDB，我们可以遵循在[http://docs.mongodb.org/manual/installation](http://docs.mongodb.org/manual/installation)的指南。
- en: The `ROOT_URL` variable should be the URL of the domain pointing to our server.
    If our app sends e-mails, we can additionally set our own SMTP server or use a
    service such as Mailgun ([http://mailgun.com](http://mailgun.com)) and change
    the SMTP host in the `MAIL_URL` variable.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ROOT_URL`变量应该是指向我们服务器的域的URL。如果我们的应用发送电子邮件，我们还可以设置自己的SMTP服务器，或使用像Mailgun这样的服务（[http://mailgun.com](http://mailgun.com)）并更改`MAIL_URL`变量中的SMTP主机。'
- en: We can also specify the port on which we want our app to run using the `PORT`
    environment variable. If we don't set the `PORT` variable, it will use port `80`
    by default.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们也可以指定我们希望应用运行的端口，使用`PORT`环境变量。如果我们没有设置`PORT`变量，它将默认使用端口`80`。
- en: 'After we set these variables, we go to the root folder of our app and start
    the server using the following command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置这些变量后，我们转到应用的根目录，并使用以下命令启动服务器：
- en: '[PRE11]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tip
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you want to make sure your application is restarted in case it crashes or
    when the server is rebooted, take a look at the `forever` NPM package, which is
    explained at [https://github.com/nodejitsu/forever](https://github.com/nodejitsu/forever).
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想确保你的应用在崩溃或服务器重启时能够重新启动，可以查看`forever` NPM包，具体解释请参阅[https://github.com/nodejitsu/forever](https://github.com/nodejitsu/forever)。
- en: If everything goes fine, our app should be reachable at `<your server's ip>:8080`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，我们的应用应该可以通过`<your server's ip>:8080`访问。
- en: In case we run into trouble by manually deploying our app, we can use the next
    approach.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们手动部署应用时遇到麻烦，我们可以使用接下来的方法。
- en: Deploying using Demeteorizer
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Demeteorizer部署
- en: 'The disadvantage of using `$ meteor build` is that most node modules are already
    compiled, and therefore can cause problems in the server''s environment. Hence
    comes Demeteorizer, which is very similar to `$ meteor build` but will additionally
    unpack the bundle and create a `package.json` file with all the node dependencies
    and the correct node version for the project. Here is how we deploy using Demeteorizer:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`$ meteor build`的缺点是，大多数node模块已经被编译，因此在服务器环境中可能会造成问题。因此出现了Demeteorizer，它与`$
    meteor build`非常相似，但还会额外解压捆绑包，并创建一个包含所有node依赖项和项目正确node版本的`package.json`文件。以下是使用Demeteorizer部署的方法：
- en: 'Demeteorizer comes as an NPM package, which we can install using the following
    command:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Demeteorizer作为一个NPM包提供，我们可以使用以下命令安装：
- en: '[PRE12]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If the `npm` folder doesn't have the right permissions, use `sudo` before the
    command.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果`npm`文件夹没有正确的权限，请在命令前使用`sudo`。
- en: 'Now we can go to our app''s folder and type the following command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以去应用文件夹并输入以下命令：
- en: '[PRE13]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This will output the ready-to-distribute app to the `my-meteor-blog-converted`
    folder. We just copy this folder to our server, set the same environment variables
    as described earlier, and run the following command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将把准备分发的应用程序输出到`my-meteor-blog-converted`文件夹。我们只需将这个文件夹复制到我们的服务器上，设置与之前描述相同的环境变量，并运行以下命令：
- en: '[PRE14]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This should start our app on the port we specified.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会在我们指定的端口上启动我们的应用程序。
- en: Deploying using Meteor Up
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Meteor Up部署
- en: The previous steps help us to deploy our app on our own server, but this method
    still requires us to build, upload, and set the environment variables.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的步骤可以帮助我们在自己的服务器上部署应用程序，但这种方法仍然需要我们构建、上传和设置环境变量。
- en: '**Meteor Up** (**mup**) aims to make deploying as easy as running `$ meteor
    deploy`. However, if we want to use Meteor Up, we need to have full admin rights
    on the server.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**Meteor Up**（**mup**）旨在使部署像运行`$ meteor deploy`一样简单。然而，如果我们想要使用Meteor Up，我们需要在服务器上拥有完全的管理权限。'
- en: Additionally, this allows us to auto-restart the app in case it crashes, using
    the `forever` NPM package, as well as start the app when the server reboots, using
    the `upstart` NPM package. We can also revert to the previously deployed version,
    which gives us a good basis for deployment on the production environment.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这允许我们在应用程序崩溃时自动重新启动它，使用`forever` NPM包，以及在服务器重新启动时启动应用程序，使用`upstart` NPM包。我们还可以恢复先前的部署版本，这为我们提供了在生产环境部署的良好基础。
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The next steps are for more advanced developers, as they require setting up
    `sudo` rights on the server machine. Therefore, if you're inexperienced in deployment,
    consider using a service such as Modulus ([http://modulus.io](http://modulus.io)),
    which offers online Meteor deployment using its own command-line tool, available
    at [https://modulus.io/codex/meteor_apps](https://modulus.io/codex/meteor_apps).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤是针对更高级的开发人员，因为它们需要在服务器机器上设置`sudo`权限。因此，如果您在部署方面没有经验，可以考虑使用像Modulus这样的服务（[http://modulus.io](http://modulus.io)），它提供在线Meteor部署，使用自己的命令行工具，可在[https://modulus.io/codex/meteor_apps](https://modulus.io/codex/meteor_apps)找到。
- en: 'Meteor Up will set up the server and deploy our app as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor Up将按照以下方式设置服务器并部署我们的应用程序：
- en: 'To install `mup` on our local machine, we type the following command:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在我们的本地机器上安装`mup`，我们输入以下命令：
- en: '[PRE15]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now we need to create a folder for our deployment configuration, which could
    be in the same folder where our app is located:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要创建一个用于部署配置的文件夹，这个文件夹可以位于我们的应用程序所在的同一个文件夹中：
- en: '[PRE16]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Meteor Up creates a configuration file for us, which will look like the following:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Meteor Up为我们创建了一个配置文件，它看起来像以下这样：
- en: '[PRE17]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now we can edit this file to work for our server environment.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以编辑这个文件以适应我们的服务器环境。
- en: 'First, we will add the SSH server authentication. We can provide either our
    RSA key file or a username and a password. If we want to use the latter, we need
    to install `sshpass`, a tool used to provide SSH passwords without using the command
    line:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将添加SSH服务器认证。我们可以提供我们的RSA密钥文件，或者提供一个用户名和密码。如果我们想要使用后者，我们需要安装`sshpass`，一个用于在不使用命令行的前提下提供SSH密码的工具：
- en: '[PRE18]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To install `sshpass` for our environment, we can follow the steps at [https://gist.github.com/arunoda/7790979](https://gist.github.com/arunoda/7790979),
    or if you're on Mac OS X, take a look at [http://www.hashbangcode.com/blog/installing-sshpass-osx-mavericks](http://www.hashbangcode.com/blog/installing-sshpass-osx-mavericks).
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要为我们的环境安装`sshpass`，我们可以按照[https://gist.github.com/arunoda/7790979](https://gist.github.com/arunoda/7790979)的步骤进行，或者如果您在Mac
    OS X上，可以查看[http://www.hashbangcode.com/blog/installing-sshpass-osx-mavericks](http://www.hashbangcode.com/blog/installing-sshpass-osx-mavericks)。
- en: 'Next, we can set some options, such as choosing to install MongoDB on the server.
    If we use a service such as Compose, we will set it to `false`:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们可以设置一些选项，例如选择在服务器上安装MongoDB。如果我们使用像Compose这样的服务，我们将将其设置为`false`：
- en: '[PRE19]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If we already have Node.js installed on our server, we will also set the next
    option to `false`:'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们已经在我们的服务器上安装了Node.js，我们还将将下一个选项设置为`false`：
- en: '[PRE20]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If we want to mention a specific Node.js version, we can set it as follows:'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们想要指定一个特定的Node.js版本，我们可以如下设置：
- en: '[PRE21]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Meteor Up can also install PhantomJS for us, which is necessary if we use Meteor''s
    spiderable package, which makes our app crawlable by search engines:'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Meteor Up还可以为我们安装PhantomJS，这对于我们使用Meteor的spiderable包是必要的，这个包可以使我们的应用程序被搜索引擎爬取：
- en: '[PRE22]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'In the next option, we will set the name of our app, which can be the same
    as our app''s folder name:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在下一个选项中，我们将设置我们应用程序的名称，它可以与我们的应用程序文件夹名称相同：
- en: '[PRE23]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Finally, we point to our local app folder so that Meteor Up knows what to deploy:'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，我们需要指向我们的本地应用程序文件夹，以便Meteor Up知道要部署什么：
- en: '[PRE24]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Meteor Up also lets us preset all the necessary environment variables, such
    as the correct `MONGO_URL` variable:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Meteor Up还允许我们预设所有必要的环境变量，例如正确的`MONGO_URL`变量：
- en: '[PRE25]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The last option sets the time Meteor Up will wait for before checking whether
    the app started successfully:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一个选项设置了Meteor Up在检查应用是否成功启动前会等待的时间：
- en: '[PRE26]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Setting up the server
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置服务器
- en: 'In order to set up the server using Meteor Up, we need a no-password access
    to `sudo`. Perform the following steps to set up the server:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用Meteor Up设置服务器，我们需要对`sudo`进行无密码访问。按照以下步骤设置服务器：
- en: 'To enable no-password access, we need to add our current user to the server''s
    `sudo` group:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了启用无密码访问，我们需要将当前用户添加到服务器的`sudo`组中：
- en: '[PRE27]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Then add `NOPASSWD` to the `sudoers` file:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在`sudoers`文件中添加`NOPASSWD`：
- en: '[PRE28]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now replace the `%sudo ALL=(ALL) ALL` line with the following line:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在用以下这行替换`%sudo ALL=(ALL) ALL`行：
- en: '[PRE29]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Deploying with mup
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用mup部署
- en: 'If everything has worked fine, we can set up our server. The following steps
    explain how we can deploy with `mup`:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，我们可以设置我们的服务器。以下步骤解释了如何使用`mup`进行部署：
- en: 'Run the following command from inside the local `my-meteor-blog-deployment`
    folder:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本地`my-meteor-blog-deployment`目录中运行以下命令：
- en: '[PRE30]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This will configure our server and install all requirements chosen in our configuration
    file.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将配置我们的服务器并安装配置文件中选择的全部要求。
- en: 'Once this process is done, we can deploy our app any time by running the following
    command from the same folder:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦这个过程完成，我们随时可以通过在同一目录下运行以下命令来部署我们的应用：
- en: '[PRE31]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This way, we can also create production and staging environments by creating
    two separate Meteor Up configurations with two distinct app names, and deploy
    it to the same server.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建两个具有不同应用名称的Meteor Up配置，我们还可以创建生产和演示环境，并将它们部署到同一服务器上。
- en: Outlook
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前景
- en: Currently, Meteor limits native deployment to its own servers, with limited
    control over the environment. Planned is an enterprise-grade server infrastructure
    called **Galaxy**, which will make deploying and scaling Meteor apps as simple
    as Meteor itself.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Meteor将原生部署限制在其自己的服务器上，对环境控制有限。计划推出一款企业级服务器基础设施，名为**Galaxy**，它将使部署和扩展Meteor应用像Meteor本身一样简单。
- en: Nonetheless, with Meteor's simplicity and great community, we already have a
    rich set of tools available to deploy to any Node.js-based hosting and PaaS environment.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，凭借Meteor的简洁性和强大的社区，我们已经拥有部署到任何基于Node.js的托管和PaaS环境的丰富工具集。
- en: Note
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For example, if we wanted to deploy on Heroku, we can take a look at the build
    pack by Jordan Sissel at [https://github.com/jordansissel/heroku-buildpack-meteor](https://github.com/jordansissel/heroku-buildpack-meteor).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们想在Heroku上部署，我们可以查看Jordan Sissel在[https://github.com/jordansissel/heroku-buildpack-meteor](https://github.com/jordansissel/heroku-buildpack-meteor)上的构建包。
- en: Summary
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to deploy Meteor and how simple deploying on
    Meteor's own server infrastructure can be. We also used tools such as Demeteorizer
    and Meteor Up to deploy on our own server infrastructure.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何部署Meteor，以及在Meteor自己的服务器架构上部署可以有多么简单。我们还使用了Demegorizer和Meteor Up这样的工具来部署我们自己的服务器架构。
- en: 'To read more about the specific deployment methods, take a look at the following
    resources:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多具体的部署方法，请查看以下资源：
- en: '[https://www.meteor.com/services/developer-accounts](https://www.meteor.com/services/developer-accounts)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.meteor.com/services/developer-accounts](https://www.meteor.com/services/developer-accounts)'
- en: '[https://docs.meteor.com/#/full/deploying](https://docs.meteor.com/#/full/deploying)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.meteor.com/#/full/deploying](https://docs.meteor.com/#/full/deploying)'
- en: '[https://www.meteor.com/services/build](https://www.meteor.com/services/build)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.meteor.com/services/build](https://www.meteor.com/services/build)'
- en: '[https://github.com/onmodulus/demeteorizer](https://github.com/onmodulus/demeteorizer)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/onmodulus/demeteorizer](https://github.com/onmodulus/demeteorizer)'
- en: '[https://github.com/arunoda/meteor-up](https://github.com/arunoda/meteor-up)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/arunoda/meteor-up](https://github.com/arunoda/meteor-up)'
- en: You can find the full example code of this app, ready for deployment, at [https://www.packtpub.com/books/content/support/17713](https://www.packtpub.com/books/content/support/17713)
    or on GitHub at [https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10](https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在这个应用的[完整示例代码](https://www.packtpub.com/books/content/support/17713)中找到准备部署的版本，或者在GitHub上查看[https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10](https://github.com/frozeman/book-building-single-page-web-apps-with-meteor/tree/chapter10)。
- en: In the next chapter, we will create a package of our previously created `ReactiveTimer`
    object and publish it to Meteor's official package repository.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将创建一个包含我们之前创建的`ReactiveTimer`对象的包，并将其发布到Meteor的官方包仓库。
