- en: '*Chapter 10*: What''s Next?'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：接下来是什么？'
- en: We've come a long way. We started by getting to know the basics of Deno and
    went on to building and deploying a complete application. By now, you should be
    comfortable with Deno and have a good awareness of the problems it solves. Hopefully,
    all the phases we've been through have helped clarify many questions you may have
    had about Deno.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经走了很长的路。我们首先了解Deno的基本知识，然后构建并部署了一个完整的应用程序。到现在为止，你应该已经熟悉Deno，并对它解决的问题有一个很好的了解。希望我们经历的所有阶段都有助于澄清你可能有关于Deno的许多问题。
- en: We deliberately chose to make this book a journey, which started with our first
    scripts and finished with a deployed application, one that we've coded and iterated
    as the book has proceeded. In the meantime, we solved many of the challenges an
    application developer might encounter and came up with solutions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们故意选择让这本书成为一段旅程，从我们的第一个脚本开始，到完成一个部署的应用程序结束，我们在书中边编写边迭代这个应用程序。与此同时，我们解决了许多应用程序开发者可能会遇到的挑战，并提出了解决方案。
- en: By now, you should be armed with the knowledge that will help you decide whether
    Deno will be part of the solution for your next project.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你应该已经掌握了可以帮助你决定Deno是否将成为你下一个项目解决方案一部分的知识。
- en: This chapter will begin with a short recap of what we have learned so far, going
    through all the phases and learnings. Then, our focus will go—as the title of
    the chapter suggests—toward the future. It will focus on what's next, both for
    Deno as a runtime and also for you as a developer with a new tool under your belt.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将首先回顾我们已经学到的内容，包括所有阶段和学习点。然后，正如章节标题所暗示的，我们的重点将转向未来。本章将关注接下来会发生什么，既包括Deno作为一个运行时的未来，也包括作为一名开发者，你将掌握一个新工具的情况。
- en: We'll have a quick look at what the current priorities of Deno's core team are,
    what they're working on, and what the proposed future features are. As the chapter
    proceeds, we'll also have a look at what's happening in the community, highlighting
    a few interesting initiatives.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将简要查看Deno核心团队当前的优先事项，他们正在做什么，以及提议的未来功能是什么。随着章节的进行，我们还将查看社区中正在发生的事情，突出一些有趣的倡议。
- en: The chapter will wrap up by demonstrating how we can publish a package to Deno's
    official registry, among other ways to give back to the Deno community.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将通过展示我们如何将包发布到Deno的官方注册表，以及其他回馈Deno社区的方式，来结束。
- en: 'By the end of this chapter, you''ll be comfortable with the following areas:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将熟悉以下领域：
- en: Looking back at our journey
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回顾我们的旅程
- en: Deno's roadmap
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 丹诺的发展路线图
- en: Deno's future and community
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 丹诺的未来和社区
- en: Publishing a package to Deno's official registry
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将包发布到Deno的官方注册表
- en: Looking back at our journey
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回顾我们的旅程
- en: A lot of ground was covered. We trust the book was (hopefully) an interesting
    journey, from not knowing Deno to building something with it, and finishing up
    with a deployed application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经覆盖了大量的知识点。相信这本书对您来说（希望如此）是一次有趣的旅程，从不知道Deno到用它构建东西，最后部署一个应用程序。
- en: We started by getting to know the tool itself, first by learning about the functionalities
    it provides, and then by writing simple programs with the standard library. As
    our knowledge built up we rapidly started to have enough to build a real application
    with it, and that's what we did.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先了解这个工具本身，首先了解它提供的功能，然后使用标准库编写简单的程序。随着我们的知识积累，我们很快就有足够的能力用它构建一个真正的应用程序，这就是我们做的。
- en: 'The adventure began by building the simplest possible web server, using the
    standard library. We used TypeScript extensively to help in specifying clear application
    boundaries, and we managed to get a very simple application running, hitting our
    very first checkpoint: **hello world**.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 冒险始于使用标准库构建最简单的Web服务器。我们大量使用TypeScript来帮助明确指定应用程序的边界，并成功运行了一个非常简单的应用程序，达到了我们第一个检查点：**你好世界**。
- en: Our application evolved, and as it started to have more complex requirements,
    we needed to dive into the web frameworks available on the Deno community. After
    making a high-level comparison between all of them, and according to our application
    needs, we went with `oak`. The next step was to migrate our (still) simple web
    server to use a framework of our choice, and it was a breeze. Using a web framework
    made our code simpler and enabled us to delegate things we really didn't want
    to handle ourselves, allowing us to focus on the application itself.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序不断进化，随着需求的复杂性增加，我们需要深入研究Deno社区中可用的网络框架。在所有这些框架中进行了高层次的比较后，根据我们的应用需求，我们选择了`oak`。下一步是把我们仍然简单的Web服务器迁移到我们选择的框架，这轻而易举。使用网络框架让我们的代码更简洁，并允许我们将真的不想自己处理的事情委派出去，这样我们就能专注于应用程序本身。
- en: The next step was to add users to our application. We created the application
    endpoints to enable a user registry, and as the need to store users arose, we
    connected the application to MongoDB. With users in place, it was a short step
    to implement user authentication.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是向我们的应用程序中添加用户。我们创建了应用程序端点以启用用户注册，随着存储用户的需求出现，我们将应用程序连接到MongoDB。有了用户之后，实现用户认证就是一小步。
- en: As the application grew, so did the need to have more complex configurations.
    From the server port it was running on to the location of certificate files, or
    to database credentials, all of this needed to be handled on its own. We abstracted
    the configuration from the application and centralized it. Along the way, we added
    support for configuration to live in a file or in environmental variables. This
    made it possible to run the application with different configurations depending
    on the environment, while keeping sensitive values safe and outside of the code
    base.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 随着应用程序的增长，对更复杂配置的需求也在增长。从它运行的服务器端口到证书文件的存放位置，或者数据库凭据，所有这些都需要独立处理。我们将配置从应用程序中抽象出来，并集中管理。在此过程中，我们增加了对配置存储在文件中或环境变量中的支持。这使得可以根据环境运行具有不同配置的应用程序，同时保持敏感值远离代码库，保持安全。
- en: As our journey was coming to an end, we wanted to make sure our code was reliable
    enough. This pointed us toward a testing chapter, where we learned the basics
    of testing in Deno and created different tests for a few use cases of the application
    we had created. We went from a simple unit test to a cross-module test, to a test
    that got the application running, and made a few requests to it. By the end of
    the process, we had much more confidence that our code was working as expected,
    and we added testing capabilities to our toolchain.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们的旅程即将结束，我们想要确保我们的代码足够可靠。这引导我们进入了一个测试章节，在那里我们学习了Deno的基本测试知识，并为我们所创建的应用程序的几个用例创建了不同的测试。我们从简单的单元测试做到了跨模块测试，再到启动应用程序并对其进行几次请求的测试。在这个过程中，我们对我们的代码能按预期工作有了更多的信心，并将测试能力添加到我们的工具链中。
- en: To wrap things up, we turned the code we wrote into reality and we deployed
    it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了结束，我们把写的代码变成了现实，并部署了它。
- en: We got the application running on Heroku under a containerized environment.
    In the meantime, we learned about Docker and how it can be used to make it easy
    for developers to run and deploy their code. We finished this chapter with an
    automated way of deploying a Deno application, closing the cycle from code to
    deployment.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在Heroku的容器化环境中运行了应用程序。与此同时，我们学习了关于Docker的知识，以及它是如何让开发者更容易运行和部署代码的。我们用一种自动化的方式部署了Deno应用程序，结束了从代码到部署的这一循环。
- en: This was a journey whereby we went through the many common phases of an application's
    development, encountering challenges and solving them with solutions adapted to
    our use cases. I hope to have covered some of your main concerns and questions,
    giving you a sound basis to help you in the future.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一次经历，我们经历了应用程序开发的许多常见阶段，遇到挑战并使用适合我们用例的解决方案解决它们。我希望我已经涵盖了你们的一些主要关切和问题，给你们提供一个坚实的基础来帮助你们在未来。
- en: We don't know what's next, but we do know that it depends on Deno and its community,
    and we hope that you see yourself as part of this. In the next section, we'll
    have a look at Deno's future roadmap, what's planned, and where their short-term
    efforts are directed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不知道接下来会发生什么，但我们知道它取决于Deno及其社区，我们希望您认为自己也是这个社区的一部分。在下一节中，我们将看看Deno的未来路线图，计划的内容以及他们的短期努力方向。
- en: Deno's roadmap
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Deno的路线图
- en: A lot has changed since the first time Ryan presented Deno on JSConf; a few
    big steps have been taken. With the first stable version of the runtime being
    launched the community exploded, and many people from other JavaScript communities
    joined in with many enthusiastic ideas.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 自从Ryan在JSConf上首次介绍Deno以来，很多事情都发生了变化；已经迈出了几大步。随着运行时的第一个稳定版本的发布，社区爆发了，许多来自其他JavaScript社区的人都加入其中，带来了许多热情洋溢的想法。
- en: Deno's core team is currently putting much of its efforts into pushing Deno
    forward. This contribution not only happens in the form of code, issues, and helping
    people, but also in planning and delineating what the next steps are.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Deno的核心团队目前大部分精力都投入到推动Deno的发展上。这种贡献不仅体现在代码、问题和帮助人们上，还体现在规划和勾勒下一步行动上。
- en: 'For the short-term roadmap, the core team makes sure that it is tracking initiatives.
    The following two issues raised on GitHub have been used to track 2020''s Q4 and
    2021''s Q1 efforts:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于短期路线图，核心团队确保它正在跟踪倡议。以下两个在GitHub上提出的问题已用于跟踪2020年第四季度和2021年第一季度的努力：
- en: '[https://github.com/denoland/deno/issues/7915](https://github.com/denoland/deno/issues/7915)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/denoland/deno/issues/7915](https://github.com/denoland/deno/issues/7915)'
- en: '[https://github.com/denoland/deno/issues/8824](https://github.com/denoland/deno/issues/8824)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/denoland/deno/issues/8824](https://github.com/denoland/deno/issues/8824)'
- en: 'If you have a detailed look at these, you can follow every discussion, code,
    and decision that has been made regarding those features. I''ll list some of the
    current initiatives here so that you can have a sneak peak of what''s happening:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您仔细查看这些内容，可以跟踪有关这些功能的所有讨论、代码和决策。我在这里列出一些当前的倡议，让您预览一下正在发生的事情：
- en: The Deno **Language Server Protocol** (**LSP**) and language server
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Deno语言服务器协议**（**LSP**）和语言服务器'
- en: Compilation to binary (single executable for a Deno application)
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译为二进制文件（Deno应用程序的单个可执行文件）
- en: Data, blob, WebAssembly, and **JavaScript Object Notation** (**JSON**) imports
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据、blob、WebAssembly和**JavaScript对象表示法**（**JSON**）导入
- en: Improved support for Web Crypto **application programming interfaces** (**APIs**)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进对**Web Crypto应用程序编程接口**（**APIs**）的支持
- en: Support for **Immediately Invoked Function Expressions** (**IIFE**) bundles
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持**立即执行的函数表达式**（**IIFE**）捆绑
- en: WebGPU support
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持WebGPU
- en: HTTP/2 support
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP/2支持
- en: These are just a few examples of some of the important initiatives happening
    with Deno. As you can imagine, and due to it being in the early stages, there
    are currently a lot of efforts aimed at fixing bugs and refactoring code that
    I haven't added to this list.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是Deno进行的一些重要倡议的例子。正如您所能想象的，由于Deno目前处于早期阶段，目前有很多努力致力于修复漏洞和重构代码，我没有将这些添加到这个列表中。
- en: Feel free to dive deeper into the GitHub issues mentioned previously to get
    more details about any of the initiatives.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请随意深入查看前面提到的GitHub问题，以获取有关任何倡议的更多详细信息。
- en: All these are Deno's core team efforts. Remember that Deno only exists because
    there are people working on it in their free time. There are many ways to give
    back to the community, be that with bug reports, code contributions, helping on
    communication channels, or with donations.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是Deno核心团队的贡献。记住，Deno之所以存在，是因为有人在他们的业余时间致力于它。回馈社区有很多方式，无论是通过提交错误报告、代码贡献、在通讯渠道上帮助，还是通过捐赠。
- en: 'If Deno is helping you and your company turn ideas into reality, please consider
    becoming a sponsor so that it stays healthy and keeps evolving. You can do this
    on GitHub at the following link: [https://github.com/sponsors/denoland](https://github.com/sponsors/denoland).'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Deno能帮助您和您的公司将想法变为现实，请考虑成为赞助商，以保持其健康并持续发展。您可以在GitHub上通过以下链接进行赞助：[https://github.com/sponsors/denoland](https://github.com/sponsors/denoland)。
- en: There are other people who are also responsible for Deno, the enthusiasm around
    it, and its evolution, and those people are Deno's community. In the next section,
    we'll go over Deno's community, interesting things happening there, and how can
    you play an active part in it.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他也为Deno、围绕它的热情以及它的演变负责的人，这些人就是Deno的社区。在下一节中，我们将介绍Deno的社区、那里发生的一些有趣的事情，以及您可以如何积极参与其中。
- en: Deno's future and community
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Deno的未来和社区
- en: The Deno community is growing rapidly—it is full of people who are excited about
    it and eager to help it grow. As you start using it, as you did throughout the
    course of this book, there will be very important contributions you can add to
    it. This could be a bug you've encountered, a feature that makes sense to you,
    or just something that you want to understand better.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Deno社区正在快速增长——它充满了对此感到兴奋的人，他们急于帮助它成长。随着你开始使用它，正如在这本书的过程中你所做的那样，你将能够为它做出非常重要的贡献。这可能是一个你遇到的bug，一个对你有意义的功能，或者你只是想更好地理解的东西。
- en: For you to be part of that, I'd recommend you joining Deno's Discord channel
    ([https://discord.gg/deno](https://discord.gg/deno)). This is a very active place
    where you can find other people interested in Deno and is useful if you want to
    find package authors, build packages yourself, or help with Deno Core. From my
    experience, I can only say that everyone I have met there is very friendly and
    eager to help. It's also a great way of keeping updated on what's happening.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成为其中的一员，我建议你加入Deno的Discord频道([https://discord.gg/deno](https://discord.gg/deno)).这是一个非常活跃的地方，你可以找到对Deno感兴趣的其他人，如果你想要找到包的作者、自己构建包，或者帮助Deno核心，这里很有用。根据我的经验，我只能说我在那里遇到的人都非常友好和乐于助人。这也是了解正在发生的事情的好方法。
- en: Another way to contribute is by following Deno's repositories on GitHub ([https://github.com/denoland](https://github.com/denoland)).
    The main repository can be found at [https://github.com/denoland/deno](https://github.com/denoland/deno),
    where you'll find the Deno **command-line interface** (**CLI**) and Deno Core,
    while the standard library lives in its own repository ([https://github.com/denoland/deno_std](https://github.com/denoland/deno_std)).
    There are also other repositories such as [https://github.com/denoland/rusty_v8](https://github.com/denoland/rusty_v8),
    which hosts the Rust bindings used by Deno created for the V8 JavaScript engine,
    or [https://github.com/denoland/deno_lint](https://github.com/denoland/deno_lint),
    where the Deno linter is hosted, among others. Feel free to watch the repositories
    that interest you on GitHub.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种贡献方式是关注Deno在GitHub上的仓库([https://github.com/denoland](https://github.com/denoland)).主仓库可以在[https://github.com/denoland/deno](https://github.com/denoland/deno)找到，那里你可以找到Deno**命令行界面**（**CLI**）和Deno核心，而标准库则在其自己的仓库中([https://github.com/denoland/deno_std](https://github.com/denoland/deno_std))。还有其他仓库，如[https://github.com/denoland/rusty_v8](https://github.com/denoland/rusty_v8)，它托管了用于V8
    JavaScript引擎的Deno创建的Rust绑定，或者[https://github.com/denoland/deno_lint](https://github.com/denoland/deno_lint)，Deno
    linter托管在其中，等等。在GitHub上随意关注你感兴趣的仓库。
- en: Tip
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: A great way of being updated about what's happening on Deno without getting
    too many notifications is by watching Deno's main repository for releases only.
    You'll get a notification for every release whereby you can follow the very comprehensive
    release notes. I'll leave you with an example of a release note so that you know
    what they look like.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 了解Deno上正在发生的事情，而又不会收到太多通知的好方法是，只关注Deno的主要仓库的发布更新。每次发布你都会收到通知，你可以跟随非常详尽的发布说明。我留下一个发布说明的例子，让你知道它们长什么样。
- en: 'This is what a version update notification looks like:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是一个版本更新通知的样子：
- en: '![Figure 10.1 – Deno''s v1.6.2 release notes'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 10.1 – Deno的v1.6.2发布说明'
- en: '](img/Figure_10.1_B16380.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.1_B16380.jpg)'
- en: Figure 10.1 – Deno's v1.6.2 release notes
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 10.1 – Deno的v1.6.2发布说明
- en: On top of the GitHub releases shown in the preceding screenshot, the Deno team
    has also made efforts to write comprehensive release notes on their website, another
    great way of staying in the loop ([https://deno.land/posts](https://deno.land/posts)).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面截图显示的GitHub发布之外，Deno团队还努力在他们的网站上编写详尽的发布说明，这是保持更新的另一种好方法([https://deno.land/posts](https://deno.land/posts)).
- en: And this is what you can do to be an integral part of Deno's community. All
    it takes for you to start is for you to use it, report bugs, and meet new people,
    and the rest will follow.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要成为Deno社区的重要一员，你可以做的是使用它、报告bug和结识新朋友，其余的将会水到渠成。
- en: The community is not only made of the core and the people who help with Deno,
    but also the packages and projects that have been built with it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 社区不仅由核心成员和帮助Deno的人组成，还包括用它构建的包和项目。
- en: In the following section, I'll highlight some initiatives that I think are great
    and that are pushing the community forward. This is a personal list; take it as
    a recommendation and nothing more, as I'm sure there are other initiatives that
    could also be added.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我将突出一些我认为很棒且正在推动社区前进的倡议。这是一个个人清单，把它当作推荐而不是更多，因为我相信还有其他倡议也可以添加进来。
- en: Interesting things happening in the community
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社区中发生的一些有趣的事情
- en: During the last two years that I've been following Deno, a lot of things have
    happened. After the v1.0.0 release and with more people joining, lots of ideas
    arose. I'll list a few initiatives that I think are especially interesting, not
    only for the functionality they provide but also as a great source of learning.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的两年里，我一直关注Deno，发生了很多事情。在v1.0.0发布后，随着更多的人加入，涌现了许多想法。我会列出一些我认为特别有趣，不仅因为它们提供功能，而且也是学习的好来源的倡议。
- en: Denon
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Denon
- en: As Nodemon was the go-to solution when developing Node, Denon is one of the
    most used tools when it comes to Deno. If you haven't heard of it, it basically
    watches your files and reruns your Deno applications as soon as you change anything.
    It's one of those tools you most likely want to keep on your toolchain while developing
    with Deno. You can check out their GitHub page at [https://github.com/denosaurs/denon](https://github.com/denosaurs/denon).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Node.js开发时的首选解决方案，Nodemon是Deno开发者最常用的工具之一。如果你还没听说过它，它基本上会监控你的文件，并在你更改任何内容时重新运行你的Deno应用程序。它是那些在开发Deno时你很可能会保留在工具链中的工具之一。你可以查看他们的GitHub页面：[https://github.com/denosaurs/denon](https://github.com/denosaurs/denon)。
- en: Aleph.js
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aleph.js
- en: Even though we don't have space to explore it much here, Deno's capabilities
    to run on the browser unlock a full set of new functionalities, which has led
    to initiatives such as Aleph.js. This initiative calls itself the *React framework
    in Deno*, and it's been getting quite some usage and enthusiasm. If you haven't
    heard about it, it takes many aspects from the Next.js framework ([https://nextjs.org/](https://nextjs.org/)),
    implements them in Deno, and adds a few more things. It is quite new but already
    has features such as server-side rendering, hot module reloading, and filesystem
    and API routing, among others. You can read more about it at [https://alephjs.org/](https://alephjs.org/).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在这里我们没有足够的空间去探讨，但Deno在浏览器上运行的能力开启了一整套新的功能，这导致了像Aleph.js这样的倡议。这个倡议自称是Deno中的*React框架*，并且已经得到了相当多的使用和热情。如果你还没听说过，它从Next.js框架([https://nextjs.org/](https://nextjs.org/))中拿了许多方面，实现在Deno中，并添加了一些其他的东西。它虽然很新，但已经有了服务器端渲染、热模块重载和文件系统及API路由等功能。你可以在这里了解更多：[https://alephjs.org/](https://alephjs.org/)。
- en: Nest.land
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Nest.land
- en: Even though Deno has its own registry (which we'll use in the next section),
    there are still reasons why the community created other registries. Nest.land
    is one of them; it is a module registry based on blockchain technology that makes
    sure modules hosted there are not deleted. It is free, decentralized, and works
    without Git, and is the go-to solution for many package authors. Read more about
    it at [https://nest.land/](https://nest.land/).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Deno有自己的注册表（我们将在下一节中使用），但社区还是创造了其他的注册表。Nest.land是其中之一；它是一个基于区块链技术的模块注册表，确保托管在那里的模块不会被删除。它是免费的、去中心化的，不需要Git就能工作，是许多包作者的首选解决方案。了解更多关于它的信息：[https://nest.land/](https://nest.land/)。
- en: Pagic
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Pagic
- en: As static site generators continue to get more and more usage, it was just a
    matter of time until some of them were made with Deno. That's what Pagic does—it's
    a static site generator with interesting features such as React, Vue, and M support,
    among others. It uses convention over configuration, which means it is pretty
    easy to get your first website running. Read more about it at [https://pagic.org/](https://pagic.org/).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 随着静态网站生成器越来越受欢迎，迟早会有一些用Deno制作的。Pagic就是这样一个静态网站生成器，它支持React、Vue和M等有趣的功能，以及其他特性。它采用约定优于配置的方式，这意味着它非常容易启动你的第一个网站。了解更多关于它的信息：[https://pagic.org/](https://pagic.org/)。
- en: Webview_deno
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Webview_deno
- en: With many of the applications people use nowadays being written in JavaScript
    and living inside a web view, it was just a matter of time until they arrived
    on Deno. This module includes a Deno plugin and thus is still considered unstable.
    However, even though it has limitations and is an ongoing project, it already
    provides many of the interesting functionalities provided by Electron (the Node.js
    alternative).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 由于现在人们使用的许多应用程序都是用JavaScript编写的，并且运行在网页视图中，它们迟早会出现在Deno上。这个模块包括一个Deno插件，因此仍然被认为是稳定的。然而，尽管它有局限性，并且是一个正在进行的项目，它已经提供了许多与Electron（Node.js的替代品）一样有趣的功能。
- en: On top of all the aforementioned packages, all the packages mentioned in [*Chapter
    4*](B16380_04_Final_JM_ePub.xhtml#_idTextAnchor108), *Building a Web Application*,
    are worth having a look at. They're web frameworks that are evolving fast and,
    as we explored before, offer different benefits to the developers using them.
    If you are developing web applications with Deno, make sure you keep an eye on
    them. Check out their GitHub page at [https://github.com/webview/webview_deno](https://github.com/webview/webview_deno).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 除了前面提到的所有包之外，[第4章](B16380_04_Final_JM_ePub.xhtml#_idTextAnchor108) *构建一个网页应用*
    中提到的所有包都值得一看。它们是快速发展的网页框架，正如我们之前探索的那样，为使用它们的开发者提供了不同的好处。如果你正在用Deno开发网页应用，务必关注它们。查看它们的GitHub页面[https://github.com/webview/webview_deno](https://github.com/webview/webview_deno)。
- en: Do you think there is still functionality missing on Deno? Have you developed
    anything that you think would be useful to more people? The core of open source
    relies on those interesting pieces of software and the people behind them.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你认为Deno上仍然缺少什么功能吗？你开发了什么你认为对更多人有益的东西吗？开源的核心依赖于那些有趣的软件片段和背后的人。
- en: Made something you want to share? No worries—we've got you covered. In the next
    section, you'll learn how can you do it!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你制作了什么想要分享的东西吗？不用担心——我们已经为你准备好了。在下一节，你将学会如何做到这一点！
- en: Publishing a package to Deno's official registry
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将包发布到Deno的官方注册表
- en: Open source is, at its core, made of people and companies that use free software
    and have the desire to give back. When you create a piece of code that you think
    is interesting enough, you most likely want to share it. This is not only a way
    of helping other people but also a way to improve your own code.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 开源，从根本上说，是由使用免费软件的个人和公司组成的，他们有回馈的愿望。当你创建了一段你认为有趣的代码时，你很可能会想要分享它。这不仅是帮助其他人的一种方式，也是改进你自己的代码的一种方式。
- en: Open source and this culture of sharing is what made Deno, Node.js, and many
    other technologies you probably use a reality. Since this book is all about Deno,
    it wouldn't make sense to finish it without going over this topic.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 开源和这种分享的文化是使Deno、Node.js和许多其他你可能使用的技术成为现实的原因。既然这本书都是关于Deno的，不讨论这个话题就没有意义。
- en: Deno has an official module registry that we've used before. This is a place
    where anyone with a GitHub account can share their own modules with the community,
    and it provides automation and caching mechanisms to keep different versions of
    modules.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Deno有一个官方的模块注册表，我们之前使用过。这是一个任何有GitHub账户的人都可以与社区分享自己模块的地方，它还提供了自动化和缓存机制，以保持模块的不同版本。
- en: What we're going to do next is publish a module of our own to this same registry.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来要做的就是将我们自己的模块发布到这个相同的注册表中。
- en: We'll use a piece of software that, until now, we made available via the direct
    link to GitHub. This works but it has neither clear versioning nor any type of
    cache, making it unusable if the code is deleted from GitHub.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一种软件，到目前为止，我们通过直接链接到GitHub提供它。这可行，但它既没有清晰的版本控制，也没有任何类型的缓存，如果代码从GitHub上删除，它就无法使用。
- en: Remember when we used an `AuthRepository` that lived inside a package we called
    `jwt-auth`? At the time, for practical reasons, we used a direct GitHub link,
    but from now on we'll publish it in Deno's module registry.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 记得我们曾经使用过一个叫`jwt-auth`的包里的`AuthRepository`吗？当时，出于实际原因，我们使用了一个直接的GitHub链接，但从现在开始，我们将把它发布到Deno的模块注册表中。
- en: We'll use the exact same code that's hosted on GitHub but publish it with the
    name of `deno_web_development_jwt_auth`. We're choosing this name to make it very
    clear that it is part of this book's journey. We also don't want to grab meaningful
    names from the registry for packages developed for learning purposes.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用托管在GitHub上的完全相同的代码，但以`deno_web_development_jwt_auth`的名字发布。我们选择这个名字是为了让它非常清楚地表明它是这本书旅程的一部分。我们也不希望为用于学习的包
    grab 注册表中的有意义的名称。
- en: 'Let''s go! Proceed as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！按照以下步骤进行：
- en: Create a repository for the module you want to publish. As mentioned, we'll
    be using the `jwt-auth` module from [*Chapter 6*](B16380_06_Final_JM_ePub.xhtml#_idTextAnchor141),
    *Adding Authentication and Connecting to the Database* ([https://github.com/PacktPublishing/Deno-Web-Development/tree/master/Chapter06/jwt-auth](https://github.com/PacktPublishing/Deno-Web-Development/tree/master/Chapter06/jwt-auth)),
    but feel free to use any other module of your choice.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为要发布的模块创建一个仓库。如前所述，我们将使用来自[第6章](B16380_06_Final_JM_ePub.xhtml#_idTextAnchor141)的*添加认证和连接数据库*部分的`jwt-auth`模块([https://github.com/PacktPublishing/Deno-Web-Development/tree/master/Chapter06/jwt-auth](https://github.com/PacktPublishing/Deno-Web-Development/tree/master/Chapter06/jwt-auth))，但请随意使用您选择的任何其他模块。
- en: 'Clone the recently created `git` repository by following GitHub''s instructions.
    Make sure you copy your module''s files to this repository folder, and run the
    following commands (these are the same as those presented in GitHub''s instructions):'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照GitHub的说明克隆最近创建的`git`仓库。确保将您的模块文件复制到此仓库文件夹中，并运行以下命令（这些与GitHub的说明中呈现的命令相同）：
- en: '[PRE0]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Go to [https://deno.land/x](https://deno.land/x) and click the **Add a module**
    button (you might need to scroll a little to find it), as illustrated in the following
    screenshot:![Figure 10.2 – The Add a module button in the Deno module registry
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[https://deno.land/x](https://deno.land/x)并点击**添加模块**按钮（您可能需要滚动一点才能找到它），如下所示：![图10.2
    – Deno模块注册表中的**添加模块**按钮
- en: '](img/Figure_10.2_B16380.jpg)'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.2_B16380.jpg)'
- en: Figure 10.2 – The Add a module button in the Deno module registry
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.2 – Deno模块注册表中的**添加模块**按钮
- en: Input the name of the module in the box that appears and click `deno_web_development_jwt_auth`
    as the name of the package, but for obvious reasons you can't do the same.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的框中输入模块名称，并点击`deno_web_development_jwt_auth`作为包名称，但出于显而易见的原因，你不能这样做。
- en: Keep in mind that you should use a testing name if you're publishing a module
    for testing reasons. We don't want to be using "real" module names with modules
    used for testing purposes.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请记住，如果您是为了测试目的而发布模块，您应该使用一个测试名称。我们不希望使用用于测试目的的“真实”模块名称。
- en: In the next box that appears, choose the directory where the code to be published
    is living.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的下一个框中，选择代码存放的目录。
- en: For our module, which will contain the `jwt-auth` code from [*Chapter 6*](B16380_06_Final_JM_ePub.xhtml#_idTextAnchor141),
    *Adding Authentication and Connecting to the Database*, we'll leave this blank
    because it is living on the root of the (new) repository created in *Step 1*.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于我们即将包含来自[第6章](B16380_06_Final_JM_ePub.xhtml#_idTextAnchor141)的*添加认证和连接数据库*部分的`jwt-auth`代码的模块，我们将留空，因为它位于步骤1中创建的新仓库的根目录下。
- en: Now, it's just a matter of adding the webhook by following the instructions.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，只需按照说明添加webhook。
- en: The Deno module registry uses GitHub webhooks to get updates for a package.
    These webhooks should be triggered by new branches or tags, and Deno's module
    registry will then create a version out of those GitHub tags.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Deno模块注册表使用GitHub webhook来获取包的更新。这些webhook应由新分支或标签触发，Deno的模块注册表然后将这些GitHub标签创建为一个版本。
- en: 'The next instructions are presented on Deno''s page, but I''ll list them here
    for practical reasons:'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来的说明将出现在Deno的页面上，但我在这里列出它们是因为实际原因：
- en: a. Navigate to the repository you want to add on GitHub.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导航到您想要添加到GitHub的仓库。
- en: b. Go to the `https://api.deno.land/webhook/gh/<package_name>` (the package
    name should be the same as the one you chose in *Step 4*).
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前往`https://api.deno.land/webhook/gh/<package_name>`（包名称应与步骤4中选择的名称相同）。
- en: f. Select `application/json` as the content type.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择`application/json`作为内容类型。
- en: g. Select **Let me select individual events**.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择**让我选择个别事件**。
- en: h. Select only the **Branch or tag creation** event.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只选择**分支或标签创建**事件。
- en: i. Press **Add webhook**.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**添加webhook**。
- en: 'Now, it is just a matter of creating a release, which, as we mentioned, is
    done via `git` tags. Assuming you have already committed your package''s code
    in *Step 2*, we just need to create and push this tag, as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，只需创建一个发布，正如我们提到的，这是通过`git`标签完成的。假设您已经在步骤2中提交了您的包代码，我们只需要创建并推送此标签，如下所示：
- en: '[PRE1]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If we now navigate to [https://deno.land/x](https://deno.land/x) and search
    for the name of your package (`deno_web_development_jwt_auth`, in our example),
    it should appear there, as you can see in the following screenshot:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们导航到[https://deno.land/x](https://deno.land/x)并搜索您的包名称（在我们的示例中为`deno_web_development_jwt_auth`），它应该出现在那里，正如您在以下屏幕截图中所看到的：
- en: '![Figure 10.3 – A published package on Deno''s module registry](img/Figure_10.3_B16380.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3 – Deno模块注册表上的一个已发布包](img/Figure_10.3_B16380.jpg)'
- en: Figure 10.3 – A published package on Deno's module registry
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – Deno模块注册表上的一个已发布包
- en: And that is it—that is all you need to start sharing your amazing Deno code
    with the community! From now on, you can not only use Deno to build applications
    but also create packages and give something back to the community.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样——这就是你们开始与社区分享惊人Deno代码所需的一切！从现在开始，你们不仅可以使用Deno构建应用，还可以创建包，回馈社区。
- en: This wraps it up for this section and for the book—thanks for keeping up with
    it and reaching the end. We hope it was useful for you and that it helped you
    in learning Deno, and also that you are as excited about it as we are.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这一节以及整本书的内容就到这里，感谢大家坚持到最后。我们希望对你们有所帮助，帮助你们学习Deno，也希望你们对它充满热情，就像我们一样。
- en: I'd be very happy to get in touch if you think there's anything I can help on.
    Feel free to reach me by the contacts present on the book's preface, via GitHub
    or Twitter.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你们认为我在某些方面能提供帮助，我非常乐意联系你们。可以通过书中前言提供的联系方式，通过GitHub或Twitter与我取得联系。
- en: Summary
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: First and foremost, thanks to all of you who stayed until the end of the book!
    I hope it was an interesting journey for you, one that fulfilled your expectations
    and addressed many of your questions and concerns about Deno.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，感谢所有坚持读到这本书最后的人！希望它对你们来说是一次有趣的旅程，满足你们的期望，并回答了你们关于Deno的许多问题和担忧。
- en: This is only the start of a (hopefully big) journey. Deno is growing and you're
    now part of it. The more you use it and contribute back, the more it will get
    better. If, like me, you believe it offers a lot of benefits that can make it
    a game changer for writing JavaScript applications, do not wait to share your
    enthusiasm.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是（希望是巨大的）旅程的开始。Deno在成长，而你们现在成为了其中的一部分。你们越使用它并回馈社区，它就会变得越好。如果，像我一样，你们认为它为编写JavaScript应用提供了很多好处，可以让它成为一个游戏改变者，那就不要等待，立即分享你们的热情。
- en: Lots of people like us are helping to push Deno forward, helping communities,
    developing modules, and opening pull requests. At the end of the day, using it
    for projects where it is well suited is the best recommendation you can make.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 像我们这样很多人都在推动Deno的发展，帮助社区，开发模块，提交拉取请求。归根结底，在你项目中恰当使用Deno，是你能给出的最佳推荐。
- en: Throughout the book, I not only tried to highlight Deno's advantages but also
    tried to make it very clear that it is not, and will not be, a silver bullet.
    It offers a great set of advantages, especially when compared to Node.js, in the
    same set of use cases (as you can check in [*Chapter 1*](B16380_01_Final_JM_ePub.xhtml#_idTextAnchor014),
    *What is Deno?*). As we addressed in this chapter, there are many features being
    added that will enable Deno to be used for more and more use cases, but I am sure
    that there's a lot to come that we don't even know about.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 贯穿全书，我不仅试图突出Deno的优势，还试图清楚地表明，它绝非（而且永远不会是）一劳永逸的解决方案。它有一系列的优势，尤其是在与Node.js相同的用例中（你们可以在[第1章](B16380_01_Final_JM_ePub.xhtml#_idTextAnchor014)
    *Deno是什么？* 中查看）。正如我们在这章所讨论的，有很多功能正在加入，使Deno能应用于越来越多的用例，但我相信还有很多我们尚不知道的功能将加入。
- en: From here onward, it is all up to you. I hope this book left you excited and
    that you can't wait to write Deno applications.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，一切就靠你了。希望这本书让你充满激情，迫不及待想写Deno应用。
- en: The next best step is to write applications yourself. This will lead you to
    research, talk with people, and solve your own problems. I tried to ease your
    path forward as much as possible by addressing some of the most common concerns.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步最好的做法就是亲自编写应用。这将使你进行研究，与人交流，解决问题。我尽量让你们的前行之路尽可能平坦，通过回答一些最常见的问题。
- en: I am sure that there are lots of online resources, articles, and books, but
    the true place to get better with Deno is still the Discord channel and the GitHub
    repositories. Those are the places where the news comes in firsthand!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信网上有很多资源、文章和书籍，但要想真正提高Deno技能，最好的途径仍然是Discord频道和GitHub仓库。这些地方可以让你第一时间获取最新消息！
- en: I can't wait to see what you'll build next.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我迫不及待想看到你们接下来会构建什么。
